var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.3,1,0.924]],["body/components/AppComponent.html",[0,0.531,1,1.634,2,1.879,3,0.234,4,0.2,5,1.375,6,1.375,7,1.375,8,1.375,9,0.167,10,3.237,11,1.375,12,2.305,13,2.019,14,2.474,15,1.685,16,5.597,17,1.685,18,5.017,19,0.234,20,0.606,21,2.576,22,5.597,23,3.166,24,0.694,25,3.828,26,2.133,27,1.015,28,5.017,29,0.86,30,0.026,31,0.942,32,0.446,33,0.802,34,3.828,35,0.55,36,0.985,37,0.985,38,4.243,39,5.017,40,4.243,41,5.017,42,3.047,43,0.844,44,0.596,45,1.821,46,2.325,47,2.848,48,0.234,49,0.462,50,3.828,51,3.828,52,3.732,53,2.386,54,3.047,55,3.351,56,5.017,57,4.243,58,4.243,59,4.243,60,1.203,61,1.802,62,1.802,63,1.375,64,1.995,65,1.375,66,1.375,67,0.985,68,1.207,69,1.375,70,0.985,71,1.375,72,0.985,73,1.375,74,0.985,75,1.375,76,0.985,77,1.126,78,1.375,79,0.985,80,1.375,81,1.053,82,1.375,83,0.985,84,1.375,85,0.985,86,1.375,87,0.985,88,1.375,89,0.985,90,1.375,91,1.053,92,1.375,93,1.375,94,1.375,95,0.014,96,0.019,97,0.014]],["title/modules/AppModule.html",[98,2.039,99,2.243]],["body/modules/AppModule.html",[1,1.775,3,0.175,4,0.15,9,0.125,13,0.844,26,2,30,0.027,42,2.501,43,1.172,44,0.447,45,1.366,48,0.175,49,0.347,60,0.902,67,1.492,68,0.991,70,1.492,72,1.492,74,1.492,76,1.572,77,0.844,79,1.492,81,1.595,83,1.492,85,1.492,87,1.492,89,1.492,91,1.595,95,0.011,96,0.015,97,0.011,98,1.744,99,4.677,100,2.924,101,1.744,102,4.072,103,3.582,104,4.072,105,2.136,106,2.428,107,2.428,108,2.428,109,2.428,110,2.428,111,3.519,112,3.1,113,3.519,114,3.482,115,2.428,116,1.744,117,2.872,118,0.691,119,2.751,120,4.118,121,4.118,122,2.751,123,4.118,124,3.064,125,3.482,126,3.064,127,1.918,128,3.482,129,4.118,130,2.872,131,4.118,132,2.115,133,4.118,134,2.872,135,2.872,136,4.118,137,2.872,138,4.118,139,2.872,140,4.118,141,2.872,142,4.118,143,2.872,144,4.118,145,2.136,146,4.118,147,2.872,148,4.118,149,4.118,150,1.269,151,2.872,152,2.872,153,2.428,154,2.428,155,2.428,156,4.118,157,2.428,158,2.428,159,1.744,160,2.428,161,2.428,162,1.918,163,2.428,164,1.918,165,2.872,166,1.918,167,2.428,168,1.918,169,2.428,170,2.428,171,4.118,172,4.118,173,2.293,174,3.482,175,2.428,176,2.428,177,4.118,178,2.428,179,2.428,180,4.118,181,2.872,182,2.872,183,2.428,184,2.872,185,2.872,186,2.872,187,2.872,188,2.872,189,1.269]],["title/modules/AppRoutingModule.html",[98,2.039,111,2.039]],["body/modules/AppRoutingModule.html",[0,0.589,3,0.242,4,0.207,9,0.173,30,0.027,42,2.41,43,1.151,44,0.618,48,0.242,49,0.479,52,2.952,53,1.888,55,2.65,67,1.322,68,1.236,70,1.322,72,1.322,74,1.322,77,1.167,79,1.322,83,1.021,85,1.322,87,1.021,89,1.322,95,0.015,96,0.019,97,0.015,100,2.41,105,2.952,111,3.119,124,2.952,125,4.343,126,2.952,127,2.65,128,4.343,153,3.356,154,3.356,155,3.356,157,3.356,159,3.949,160,3.356,161,3.356,166,2.65,167,3.356,168,2.65,169,3.356,170,3.356,183,3.356,190,3.968,191,3.968,192,3.788,193,5.136,194,1.525,195,3.968,196,1.425,197,2.41,198,2.41,199,2.41,200,2.038,201,4.997,202,3.968,203,3.968,204,5.274,205,2.038,206,2.952,207,3.968,208,3.968,209,3.968,210,3.968]],["title/guards/AuthGuard.html",[159,2.039,211,2.498]],["body/guards/AuthGuard.html",[0,0.47,3,0.251,4,0.215,9,0.179,14,1.818,19,0.251,24,1.051,26,2.265,27,0.953,29,0.924,30,0.026,31,0.692,32,0.328,33,0.862,42,2.497,43,0.974,44,0.64,45,1.956,48,0.251,49,0.792,54,3.191,95,0.015,96,0.019,97,0.015,98,2.497,118,0.989,119,3.51,159,3.191,189,2.56,194,1.58,196,1.477,204,5.454,212,4.112,213,3.477,214,1.181,215,4.112,216,2.974,217,3.312,218,4.112,219,5.255,220,4.444,221,5.255,222,4.54,223,5.161,224,2.5,225,4.112,226,1.468,227,5.255,228,3.191,229,2.698,230,1.301,231,5.255,232,3.51,233,1.58,234,1.545,235,1.956,236,4.112,237,1.651,238,3.477,239,4.112,240,3.477,241,4.112,242,3.059,243,3.191,244,1.956,245,4.112,246,1.956,247,3.059,248,4.112,249,4.112,250,1.765,251,3.477,252,1.818]],["title/interfaces/Comp.html",[68,0.808,253,0.754]],["body/interfaces/Comp.html",[3,0.303,4,0.258,9,0.216,19,0.303,20,0.712,23,3.345,30,0.026,32,0.501,35,0.969,48,0.303,68,1.418,95,0.018,96,0.022,97,0.018,253,1.113,254,2.04,255,4.189,256,5.508,257,3.626,258,4.351,259,6.514,260,3.822]],["title/components/CompCreateComponent.html",[0,0.3,67,0.864]],["body/components/CompCreateComponent.html",[0,0.493,1,0.617,2,1.151,3,0.137,4,0.117,5,0.805,6,0.805,7,0.805,8,0.805,9,0.24,11,0.805,12,2.126,13,1.861,15,1.151,17,1.151,19,0.137,20,0.414,21,2.137,23,2.393,24,0.622,27,1.112,29,0.935,30,0.026,31,0.845,32,0.464,33,0.872,36,0.882,37,0.882,43,0.7,44,0.349,48,0.137,49,0.271,60,0.704,61,1.231,62,1.231,63,0.805,64,1.565,65,0.805,66,0.805,67,1.199,68,1.401,69,0.805,70,0.577,71,0.805,72,0.577,73,0.805,74,0.577,75,0.805,76,0.577,77,0.659,78,0.805,79,0.577,80,0.805,81,0.617,82,0.805,83,0.577,84,0.805,85,0.577,86,0.805,87,0.577,88,0.805,89,0.577,90,0.805,91,0.617,92,0.805,93,0.805,94,0.805,95,0.008,96,0.013,97,0.008,118,0.539,132,1.151,168,4.145,189,1.84,200,2.137,205,3.052,214,0.77,226,0.825,229,2.341,230,1.128,233,2.184,237,1.077,246,1.066,250,1.686,252,2.772,258,3.795,261,4.616,262,1.896,263,2.55,264,3.537,265,2.899,266,3.428,267,3.428,268,2.55,269,3.428,270,2.393,271,3.467,272,2.899,273,3.428,274,3.428,275,3.428,276,3.428,277,3.428,278,2.55,279,2.899,280,3.428,281,1.714,282,4.162,283,3.428,284,3.467,285,4.162,286,4.162,287,4.162,288,4.162,289,1.791,290,5.295,291,3.428,292,3.428,293,3.467,294,1.896,295,3.467,296,2.527,297,2.217,298,3.428,299,2.242,300,1.565,301,2.242,302,3.428,303,2.899,304,3.216,305,2.899,306,4.661,307,3.939,308,3.428,309,2.83,310,2.55,311,2.082,312,3.428,313,3.428,314,3.428,315,2.899,316,3.428,317,2.082,318,2.899,319,2.289,320,3.428,321,3.941,322,2.899,323,3.428,324,3.428,325,2.899,326,3.428,327,2.242,328,3.428,329,3.428,330,2.55,331,2.899,332,3.428,333,3.428,334,3.428,335,1.76,336,3.428,337,2.289,338,3.428,339,2.082,340,3.428,341,2.242,342,2.242,343,2.899,344,2.899,345,3.428,346,2.899,347,3.428,348,2.242,349,2.082,350,2.242,351,3.736,352,2.55,353,2.242,354,3.428,355,2.242,356,2.242,357,2.242,358,2.242,359,1.668,360,1.896,361,1.361,362,2.242,363,2.242,364,1.668,365,1.668,366,2.899,367,2.899,368,3.537,369,3.428,370,2.899,371,2.082,372,2.242,373,2.242,374,2.242,375,2.242,376,4.162,377,4.162,378,3.428,379,3.428,380,2.242,381,2.242,382,0.659,383,2.242,384,2.242,385,2.242,386,2.242,387,2.242,388,2.242,389,2.242,390,1.896,391,1.896,392,1.497,393,2.242,394,2.242,395,2.242,396,2.242,397,1.515,398,3.428,399,2.55]],["title/components/CompDashboardComponent.html",[0,0.3,70,0.864]],["body/components/CompDashboardComponent.html",[0,0.535,1,0.796,2,1.39,3,0.177,4,0.151,5,1.038,6,1.038,7,1.038,8,1.038,9,0.126,11,1.038,12,2.22,13,1.943,15,1.39,17,1.39,19,0.177,20,0.5,24,0.751,27,1.11,29,0.65,30,0.026,31,0.813,32,0.477,33,0.606,35,0.758,36,1.495,37,1.495,43,0.813,44,0.45,48,0.177,49,0.349,60,0.909,61,1.486,62,1.486,63,1.038,64,1.772,65,1.038,66,1.038,67,0.744,68,1.607,69,1.038,70,1.358,71,1.038,72,0.744,73,1.038,74,0.744,75,1.038,76,0.744,77,0.85,78,1.038,79,0.744,80,1.038,81,0.796,82,1.038,83,0.744,84,1.038,85,0.744,86,1.038,87,0.744,88,1.038,89,0.744,90,1.038,91,1.33,92,1.038,93,1.038,94,1.038,95,0.011,96,0.015,97,0.011,118,0.696,166,4.16,189,1.829,205,2.125,206,3.079,214,0.93,230,0.65,233,1.59,237,1.3,246,1.375,252,1.278,261,4.633,271,3.079,281,1.99,289,2.028,296,2.513,297,2.51,300,1.39,325,5.266,361,1.756,370,3.5,371,2.513,400,2.445,401,4.139,402,3.5,403,4.139,404,6.461,405,4.414,406,5.277,407,2.513,408,3.5,409,4.139,410,4.139,411,4.139,412,4.834,413,4.139,414,4.087,415,4.834,416,4.834,417,4.834,418,2.445,419,4.139,420,2.892,421,2.892,422,2.892,423,2.892,424,2.892,425,2.892,426,1.756,427,2.151,428,2.151,429,2.892,430,2.892,431,2.892,432,2.892,433,2.892,434,2.892,435,2.892,436,4.139,437,3.079,438,4.139,439,4.321,440,5.809,441,4.462,442,4.139,443,4.139]],["title/components/CompetitionComponent.html",[0,0.3,72,0.864]],["body/components/CompetitionComponent.html",[0,0.441,1,0.464,2,0.919,3,0.103,4,0.088,5,0.605,6,0.605,7,0.605,8,0.605,9,0.215,11,0.605,12,2.001,13,1.752,15,0.919,17,0.919,19,0.103,20,0.33,21,3.06,23,2.535,24,0.496,26,1.428,27,1.189,29,0.615,30,0.027,31,0.669,32,0.485,33,0.573,35,0.784,36,1.27,37,1.27,43,1.024,44,0.262,45,0.801,48,0.103,49,0.203,53,1.643,60,0.529,61,0.982,62,0.982,63,0.605,64,1.469,65,0.605,66,0.605,67,0.434,68,0.831,69,0.605,70,0.434,71,0.605,72,1.023,73,0.605,74,0.889,75,0.605,76,0.434,77,1.169,78,0.605,79,0.434,80,0.605,81,0.464,82,0.605,83,0.434,84,0.605,85,0.434,86,0.605,87,0.434,88,0.605,89,0.434,90,0.605,91,0.464,92,0.605,93,0.605,94,0.605,95,0.006,96,0.01,97,0.006,118,0.831,132,0.865,189,2.182,194,0.647,200,2.246,201,1.253,214,0.615,216,1.774,217,1.774,226,0.658,230,1.281,233,2.1,237,0.86,246,2.867,250,0.566,252,2.071,256,2.313,257,1.923,258,1.827,260,2.415,263,2.035,264,2.098,270,2.641,284,2.958,293,2.958,294,1.424,295,3.253,296,2.098,297,1.892,300,1.914,307,2.035,309,2.098,311,1.661,344,2.313,349,2.098,351,2.57,352,1.253,359,1.253,361,1.023,364,1.253,365,1.253,368,1.125,371,1.661,382,0.495,390,2.313,391,2.313,405,1.827,439,1.253,444,1.424,445,2.736,446,2.736,447,2.313,448,4.349,449,2.736,450,2.313,451,2.736,452,2.736,453,2.035,454,3.962,455,2.035,456,1.523,457,2.736,458,2.736,459,2.313,460,2.313,461,2.313,462,2.736,463,1.051,464,1.661,465,2.736,466,2.736,467,2.736,468,2.736,469,2.736,470,2.313,471,2.736,472,2.921,473,2.035,474,3.455,475,2.736,476,2.921,477,3.455,478,2.656,479,1.774,480,2.921,481,2.921,482,3.253,483,3.297,484,2.921,485,5.039,486,3.455,487,3.977,488,3.977,489,3.977,490,3.363,491,3.363,492,3.363,493,3.363,494,2.214,495,3.977,496,3.977,497,2.736,498,2.57,499,2.921,500,2.57,501,2.736,502,1.685,503,1.685,504,1.685,505,1.685,506,1.685,507,1.685,508,1.685,509,1.685,510,1.685,511,1.685,512,2.313,513,1.685,514,1.253,515,1.685,516,2.313,517,1.685,518,1.685,519,1.685,520,2.313,521,1.685,522,1.685,523,1.685,524,1.685,525,1.685,526,2.921,527,1.685,528,1.685,529,1.685,530,1.685,531,1.685,532,3.253,533,1.685,534,1.685,535,1.685,536,1.424,537,1.424,538,0.745,539,1.685,540,4.241,541,1.253,542,4.62,543,2.921,544,2.57,545,2.57,546,3.698,547,2.921,548,2.921,549,2.921,550,2.921,551,2.313,552,1.424,553,1.424,554,2.098,555,3.129,556,1.424,557,1.253,558,2.921,559,1.424,560,1.424,561,1.685,562,1.424,563,1.424,564,1.424,565,1.685,566,1.424,567,1.424,568,1.424,569,1.424,570,2.736,571,3.455,572,1.424,573,1.424,574,1.253,575,1.424,576,2.313,577,1.424,578,1.424,579,1.424,580,1.424,581,1.424,582,1.424,583,1.424,584,1.424,585,2.313,586,1.424,587,1.424,588,2.313,589,1.424,590,2.313,591,1.424,592,2.736,593,2.736,594,2.736,595,3.698,596,1.424,597,2.958,598,1.424,599,1.424,600,1.424,601,1.424,602,1.685,603,1.685,604,1.685,605,1.685,606,1.685,607,1.685,608,1.685,609,1.685,610,1.424,611,1.424,612,2.313,613,1.424,614,1.685,615,0.566,616,2.035,617,2.035,618,2.313,619,2.736,620,2.736,621,2.736,622,2.736,623,2.736,624,2.736,625,1.685,626,1.685,627,1.685,628,1.424,629,2.313,630,2.313,631,1.424,632,1.424,633,1.424,634,1.685,635,1.685,636,1.685,637,1.685,638,1.685,639,1.685,640,1.424,641,2.313,642,2.313,643,2.313,644,2.313,645,3.977,646,2.313,647,2.958,648,1.827,649,1.685,650,1.253,651,1.125,652,1.685,653,1.253]],["title/injectables/CompetitionService.html",[234,0.987,297,1.597]],["body/injectables/CompetitionService.html",[3,0.179,4,0.153,9,0.128,14,1.295,19,0.255,20,0.504,24,0.531,27,1.233,29,1.349,30,0.027,31,1.01,32,0.511,33,1.258,35,0.91,36,1.631,37,1.631,43,0.893,44,0.456,48,0.179,49,0.354,68,1.005,95,0.011,96,0.015,97,0.011,150,1.295,197,2.536,198,2.536,199,2.536,214,0.938,224,1.987,230,1.424,234,1.228,235,1.393,244,1.393,250,2.128,257,2.955,297,1.987,309,1.779,407,2.536,463,1.605,479,2.725,538,1.295,654,1.504,655,2.477,656,4.868,657,4.868,658,4.868,659,4.117,660,4.868,661,4.868,662,4.868,663,2.956,664,4.868,665,4.868,666,4.177,667,4.177,668,5.308,669,5.308,670,5.308,671,5.308,672,4.177,673,4.177,674,4.177,675,4.177,676,1.631,677,2.725,678,4.177,679,1.846,680,4.177,681,2.929,682,4.177,683,2.929,684,3.726,685,2.929,686,2.929,687,2.929,688,2.929,689,4.177,690,2.929,691,4.177,692,2.929,693,2.929,694,2.929,695,2.929,696,2.929,697,4.177,698,2.929,699,4.177,700,2.929,701,4.177,702,2.929,703,4.177,704,2.929,705,4.177,706,2.929,707,4.177,708,2.929,709,4.177,710,4.177,711,2.929,712,3.107,713,3.532,714,3.532,715,2.79,716,4.177,717,2.929,718,4.177,719,2.929,720,1.504,721,2.929,722,2.929,723,2.929,724,2.929,725,2.929,726,2.929,727,2.929,728,2.929,729,2.929,730,2.929,731,2.929,732,2.929]],["title/interfaces/Contest.html",[253,0.754,270,1.724]],["body/interfaces/Contest.html",[3,0.303,4,0.259,9,0.297,19,0.303,20,0.713,23,3.347,30,0.026,32,0.519,35,0.969,48,0.303,95,0.018,96,0.022,97,0.018,253,1.115,254,2.044,270,3.03,366,5.511,733,4.197,734,6.518,735,6.518]],["title/components/EditorDialogComponent.html",[0,0.3,76,0.864]],["body/components/EditorDialogComponent.html",[0,0.496,1,1.033,2,1.663,3,0.229,4,0.196,5,1.348,6,1.348,7,1.348,8,1.348,9,0.163,11,1.348,12,2.3,13,2.014,15,1.663,17,1.663,19,0.229,20,0.598,21,2.846,24,0.681,27,1.005,29,0.843,30,0.026,31,1.08,32,0.395,33,0.786,43,0.833,44,0.584,48,0.229,49,0.453,60,1.179,61,1.778,62,1.778,63,1.348,64,1.979,65,1.348,66,1.348,67,0.966,68,1.191,69,1.348,70,0.966,71,1.348,72,0.966,73,1.348,74,0.966,75,1.348,76,1.517,77,1.915,78,1.348,79,0.966,80,1.348,81,1.033,82,1.348,83,0.966,84,1.348,85,0.966,86,1.348,87,0.966,88,1.348,89,0.966,90,1.348,91,1.033,92,1.348,93,1.348,94,1.348,95,0.014,96,0.018,97,0.014,118,0.903,145,2.792,162,3.937,214,1.113,230,0.843,237,1.556,281,2.282,289,2.265,300,1.663,331,4.984,352,2.792,382,1.456,736,4.984,737,3.174,738,4.953,739,4.953,740,4.953,741,4.953,742,4.188,743,4.188,744,5.543,745,4.953,746,3.753,747,3.753,748,3.753,749,3.753,750,3.753,751,3.753,752,3.753,753,3.753,754,4.953,755,4.953,756,4.953,757,4.188]],["title/interfaces/File.html",[9,0.146,253,0.754]],["body/interfaces/File.html",[3,0.314,4,0.268,9,0.278,19,0.314,20,0.727,30,0.026,32,0.48,35,0.977,48,0.314,95,0.019,96,0.022,97,0.019,253,1.154,254,2.115,554,4.002,758,4.344,759,5.573]],["title/injectables/FileService.html",[234,0.987,760,2.243]],["body/injectables/FileService.html",[3,0.186,4,0.159,9,0.257,14,1.349,19,0.186,20,0.519,24,0.553,27,1.159,29,1.365,30,0.026,31,1.022,32,0.509,33,1.273,35,1.012,36,1.281,37,1.281,43,0.959,44,0.475,48,0.186,49,0.368,95,0.011,96,0.016,97,0.011,150,1.349,197,2.611,198,2.611,199,2.611,200,3.036,214,0.966,224,2.045,228,3.59,230,1.328,234,1.264,235,1.451,244,1.451,250,1.985,257,2.394,382,1.264,397,1.9,407,2.611,463,1.652,538,1.349,615,2.209,654,1.567,663,3.023,676,1.699,677,2.776,679,1.9,684,3.662,712,3.198,713,3.635,714,3.635,715,2.872,720,1.567,760,2.872,761,2.58,762,2.772,763,4.979,764,4.299,765,3.635,766,4.299,767,4.299,768,3.689,769,4.299,770,4.299,771,4.299,772,5.027,773,3.051,774,4.299,775,3.051,776,4.299,777,3.051,778,4.299,779,3.051,780,4.299,781,3.051,782,4.299,783,3.051,784,1.451,785,2.394,786,2.611,787,2.611,788,3.051,789,4.299,790,3.051,791,4.299,792,3.051,793,4.21,794,3.635,795,4.21,796,4.299,797,4.299,798,4.299,799,1.853,800,3.051,801,2.58]],["title/components/HomeComponent.html",[0,0.3,79,0.864]],["body/components/HomeComponent.html",[0,0.44,1,0.82,2,1.421,3,0.182,4,0.156,5,1.071,6,1.071,7,1.071,8,1.071,9,0.13,11,1.071,12,2.23,13,1.952,15,1.421,17,1.421,19,0.182,24,0.892,27,0.767,30,0.026,31,0.712,43,0.502,44,0.464,46,2.569,48,0.182,49,0.36,52,3.147,58,4.524,59,5.379,60,0.937,61,1.765,62,1.519,63,1.071,64,1.797,65,1.071,66,1.071,67,0.767,68,1.018,69,1.071,70,0.767,71,1.071,72,0.767,73,1.071,74,0.767,75,1.071,76,0.767,77,0.877,78,1.071,79,1.377,80,1.071,81,0.82,82,1.071,83,0.767,84,1.071,85,0.767,86,1.071,87,0.767,88,1.071,89,0.767,90,1.071,91,0.82,92,1.071,93,1.071,94,1.071,95,0.011,96,0.016,97,0.011,118,0.717,122,2.825,173,2.355,214,0.95,226,1.018,230,0.67,237,1.329,240,3.577,270,2.172,281,2.024,289,2.056,300,1.421,304,1.811,311,2.569,319,2.825,339,2.569,371,2.569,382,1.244,426,1.811,456,2.355,459,3.577,463,2.056,473,3.147,478,1.811,483,2.825,532,4.587,544,3.147,545,3.147,574,2.218,646,3.577,679,1.87,802,2.521,803,5.35,804,2.825,805,4.23,806,4.23,807,4.23,808,4.23,809,4.23,810,4.23,811,2.172,812,3.577,813,5.35,814,5.35,815,4.23,816,4.916,817,4.23,818,2.982,819,2.982,820,3.577,821,4.23,822,4.23,823,4.23,824,4.23,825,4.365,826,4.23,827,4.23,828,4.23,829,4.23,830,4.23,831,3.577,832,3.577,833,3.98,834,4.524,835,4.23,836,2.569,837,4.23,838,3.577,839,4.23,840,3.577,841,5.35,842,4.23,843,4.23,844,4.23,845,3.577,846,4.23,847,4.524,848,4.23,849,4.23,850,4.23,851,2.825,852,4.23,853,4.23,854,4.23,855,4.23,856,4.23,857,4.23,858,4.23,859,4.23,860,4.23,861,2.521,862,2.218,863,2.218,864,2.521,865,2.218,866,2.218,867,3.98,868,2.521,869,2.521,870,2.982,871,2.569,872,2.218,873,2.982,874,3.657,875,1.991,876,2.521,877,2.521,878,2.982,879,2.982,880,1.991,881,3.577,882,2.982,883,2.521]],["title/components/LoadingComponent.html",[0,0.3,81,0.924]],["body/components/LoadingComponent.html",[0,0.503,1,0.811,2,1.409,3,0.18,4,0.154,5,1.058,6,1.058,7,1.058,8,1.058,9,0.128,11,1.058,12,2.226,13,1.949,15,1.409,17,1.409,19,0.18,24,0.886,27,0.761,30,0.027,31,1.034,43,0.496,44,0.459,48,0.18,49,0.356,60,0.926,61,1.506,62,1.506,63,1.058,64,1.787,65,1.058,66,1.058,67,0.758,68,1.009,69,1.058,70,0.758,71,1.058,72,0.758,73,1.058,74,0.758,75,1.058,76,0.758,77,0.866,78,1.058,79,0.758,80,1.058,81,1.464,82,1.058,83,0.758,84,1.058,85,0.758,86,1.058,87,0.758,88,1.058,89,0.758,90,1.058,91,0.811,92,1.058,93,1.058,94,1.058,95,0.011,96,0.016,97,0.011,116,2.547,118,0.709,214,0.942,230,0.662,237,1.318,281,2.011,289,2.045,300,1.409,305,3.547,319,3.904,651,1.968,875,1.968,884,2.491,885,4.195,886,3.547,887,4.195,888,5.086,889,3.547,890,4.884,891,4.195,892,2.946,893,2.946,894,2.946,895,2.192,896,2.946,897,2.946,898,2.491,899,4.943,900,2.946,901,6.42,902,4.884,903,4.884,904,2.491,905,2.946,906,6.755,907,6.015,908,3.547,909,4.195,910,4.195,911,2.946,912,6.484,913,5.846,914,5.846,915,5.846,916,5.322,917,2.946,918,5.322,919,2.946,920,5.322,921,5.846,922,3.55,923,4.195,924,6.484,925,4.195,926,4.195,927,4.195,928,3.12,929,4.195,930,4.195,931,4.195,932,3.547,933,4.195]],["title/components/LoginComponent.html",[0,0.3,83,0.864]],["body/components/LoginComponent.html",[0,0.497,1,0.787,2,1.38,3,0.175,4,0.149,5,1.028,6,1.028,7,1.028,8,1.028,9,0.125,11,1.028,12,2.216,13,1.94,15,1.38,17,1.38,19,0.175,20,0.496,24,0.745,26,1.997,27,1.082,29,0.643,30,0.026,31,0.809,32,0.383,33,0.6,35,0.411,36,1.057,37,1.057,43,0.974,44,0.445,45,1.361,48,0.175,49,0.634,54,3.981,57,2.42,60,0.899,61,1.475,62,1.475,63,1.028,64,1.764,65,1.028,66,1.028,67,0.737,68,0.988,69,1.028,70,0.737,71,1.028,72,0.737,73,1.028,74,0.737,75,1.028,76,0.737,77,0.842,78,1.028,79,0.737,80,1.028,81,0.787,82,1.028,83,1.352,84,1.028,85,0.737,86,1.028,87,0.737,88,1.028,89,0.737,90,1.028,91,0.787,92,1.028,93,1.028,94,1.028,95,0.011,96,0.015,97,0.011,118,0.988,132,1.47,164,3.508,194,1.579,214,0.923,216,2.109,217,2.697,222,3.056,224,1.954,226,1.495,229,2.321,230,1.08,237,1.291,264,2.495,281,1.979,289,1.847,300,1.614,315,2.42,317,1.738,335,2.468,349,2.918,382,0.842,392,2.744,437,3.575,456,1.593,461,4.064,463,1.579,464,1.738,500,2.129,611,2.42,615,2.003,617,2.129,804,2.744,811,1.47,836,2.495,847,2.42,934,2.42,935,3.474,936,4.806,937,4.108,938,4.108,939,5.561,940,4.108,941,4.806,942,4.441,943,2.862,944,4.108,945,2.862,946,2.42,947,2.862,948,2.862,949,3.056,950,2.862,951,2.862,952,3.056,953,2.42,954,2.42,955,2.862,956,2.862,957,4.441,958,3.621,959,4.441,960,3.474,961,4.806,962,3.21,963,2.42,964,3.474,965,2.42,966,2.42,967,2.42,968,2.862,969,2.129,970,1.911,971,2.862,972,2.862,973,2.42,974,4.108,975,2.862,976,3.056,977,2.862,978,2.862,979,2.862,980,2.862,981,2.744,982,3.056,983,2.42,984,3.056,985,2.862,986,2.862,987,2.42,988,2.42,989,4.108,990,2.862,991,2.862,992,2.862,993,2.862,994,2.862,995,2.862,996,2.862,997,2.129,998,3.575,999,2.42,1000,4.108,1001,4.108]],["title/injectables/LoginService.html",[26,1.206,234,0.987]],["body/injectables/LoginService.html",[3,0.175,4,0.15,9,0.125,14,1.269,19,0.175,20,0.497,24,0.873,26,1.479,27,1.17,29,1.082,30,0.027,31,0.81,32,0.462,33,1.009,35,0.591,36,1.239,37,1.239,42,2.501,43,0.937,44,0.447,48,0.175,49,0.7,54,2.501,95,0.011,96,0.015,97,0.011,116,2.501,118,1.158,150,1.269,164,3.871,194,1.104,196,2,214,0.925,216,2.473,217,2.86,223,2.428,226,1.62,229,2.936,230,1.417,232,2.751,233,1.104,234,1.211,235,1.366,242,3.064,243,3.194,244,1.366,247,2.136,250,2.005,300,0.964,382,1.211,397,1.82,463,1.104,464,1.744,538,1.269,615,1.383,654,1.475,663,2.924,676,1.599,677,2.86,679,1.82,684,2.681,720,1.475,762,2.681,784,1.366,785,2.293,786,2.501,787,2.501,811,2.976,946,2.428,949,3.913,952,3.064,953,3.482,954,3.482,982,4.694,983,5.335,1002,2.428,1003,4.815,1004,5.26,1005,5.26,1006,4.448,1007,5.26,1008,5.26,1009,5.26,1010,4.118,1011,4.118,1012,4.118,1013,3.064,1014,3.064,1015,3.482,1016,2.872,1017,4.694,1018,2.872,1019,2.872,1020,2.872,1021,2.872,1022,4.118,1023,4.118,1024,2.872,1025,4.118,1026,3.482,1027,4.118,1028,2.872,1029,2.872,1030,4.118,1031,2.872,1032,2.872,1033,3.482,1034,3.482,1035,4.118,1036,2.872,1037,4.118,1038,2.872,1039,2.136,1040,2.872,1041,2.428,1042,2.872,1043,2.428,1044,2.872,1045,2.872,1046,3.064,1047,2.872,1048,2.428,1049,4.118,1050,2.872,1051,2.872,1052,2.872,1053,2.872,1054,2.872,1055,2.872,1056,2.872,1057,2.872]],["title/classes/NavigationModel.html",[49,0.405,1058,2.498]],["body/classes/NavigationModel.html",[0,0.209,3,0.061,4,0.052,9,0.283,12,0.333,13,0.292,15,0.333,17,0.333,19,0.061,20,0.211,21,2.802,23,2.287,24,0.18,26,0.627,27,0.582,30,0.027,31,0.801,32,0.282,33,0.59,35,0.933,40,0.838,43,0.951,44,0.154,45,0.472,46,1.06,47,0.738,48,0.061,49,0.282,64,1.75,74,0.255,76,0.255,77,1.31,95,0.012,96,0.006,97,0.004,101,0.602,122,0.662,124,0.738,132,0.509,145,0.738,162,0.662,163,0.838,173,0.552,189,2.041,194,0.381,199,2.465,200,2.287,201,3.176,205,1.2,226,0.42,228,3.464,229,1.688,232,1.561,233,1.233,237,0.312,243,3.852,246,1.683,250,1.856,252,1.418,264,0.602,268,1.739,271,1.298,278,0.738,284,0.738,289,0.381,295,0.738,300,1.55,303,1.476,304,1.06,307,0.738,310,1.298,311,2.149,317,0.602,337,0.662,339,3.106,349,0.602,351,1.298,359,1.298,360,0.838,364,0.738,365,0.738,368,0.662,382,1.358,392,2.712,397,1.688,399,2.387,405,1.166,407,0.602,414,0.838,426,1.419,427,1.298,450,0.838,454,1.977,455,0.738,464,1.71,472,1.476,476,0.838,479,2.445,480,0.838,481,0.838,485,1.476,491,1.476,493,0.838,494,0.552,498,0.738,512,0.838,516,0.838,520,0.838,526,1.476,532,1.298,540,3.639,541,0.738,542,3.766,543,1.977,544,0.738,545,0.738,546,2.713,547,0.838,548,0.838,549,0.838,550,0.838,551,1.476,552,0.838,553,1.476,554,2.593,555,2.143,572,0.838,573,0.838,574,0.738,575,0.838,576,0.838,577,0.838,578,0.838,579,0.838,580,0.838,581,0.838,582,0.838,583,0.838,584,0.838,585,1.476,586,0.838,587,0.838,588,1.476,589,0.838,590,0.838,591,0.838,595,1.977,612,2.381,613,1.476,615,0.586,616,2.094,618,4.027,628,0.838,629,0.838,630,0.838,631,0.838,632,0.838,633,0.838,647,1.298,648,0.662,742,0.838,743,0.838,759,2.992,760,2.551,765,1.476,768,1.71,772,0.738,784,1.339,795,0.838,831,0.838,832,0.838,833,1.739,836,1.71,840,4.027,845,3.433,886,0.838,922,2.465,935,0.838,960,1.476,969,0.738,970,1.166,976,3.313,981,0.662,982,3.02,1013,1.298,1017,1.298,1026,1.977,1041,0.838,1058,4.673,1059,0.738,1060,0.838,1061,4.892,1062,4.454,1063,0.991,1064,0.991,1065,0.991,1066,0.991,1067,0.991,1068,1.166,1069,0.991,1070,1.419,1071,0.838,1072,1.745,1073,0.991,1074,0.991,1075,0.991,1076,0.991,1077,0.991,1078,0.838,1079,0.991,1080,1.476,1081,0.738,1082,0.991,1083,0.991,1084,1.745,1085,0.991,1086,0.991,1087,0.991,1088,0.838,1089,0.991,1090,0.991,1091,0.991,1092,0.991,1093,0.991,1094,0.991,1095,0.991,1096,1.745,1097,1.745,1098,5.757,1099,5.457,1100,6.074,1101,0.991,1102,0.991,1103,0.991,1104,0.991,1105,0.991,1106,0.838,1107,0.991,1108,1.745,1109,0.991,1110,0.991,1111,0.991,1112,0.991,1113,0.838,1114,0.991,1115,0.991,1116,0.991,1117,0.991,1118,1.745,1119,1.745,1120,1.745,1121,1.476,1122,1.745,1123,0.991,1124,0.991,1125,0.991,1126,0.991,1127,4.617,1128,0.991,1129,0.991,1130,0.991,1131,0.991,1132,0.991,1133,4.454,1134,4.454,1135,0.991,1136,5.65,1137,1.745,1138,1.745,1139,0.991,1140,1.745,1141,4.892,1142,1.745,1143,5.212,1144,1.745,1145,1.745,1146,1.745,1147,0.991,1148,0.991,1149,2.815,1150,5.293,1151,6.074,1152,4.06,1153,4.06,1154,0.991,1155,4.06,1156,0.991,1157,4.454,1158,3.819,1159,4.06,1160,4.454,1161,0.991,1162,3.176,1163,0.991,1164,0.991,1165,0.991,1166,1.476,1167,0.991,1168,0.991,1169,0.991,1170,0.991,1171,1.745,1172,1.745,1173,0.991,1174,0.991,1175,1.745,1176,5.009,1177,0.991,1178,1.745,1179,0.991,1180,0.991,1181,1.745,1182,0.991,1183,2.338,1184,0.991,1185,0.991,1186,0.991,1187,0.991,1188,3.209,1189,1.745,1190,1.745,1191,0.991,1192,4.482,1193,4.236,1194,2.381,1195,0.991,1196,0.991,1197,0.991,1198,1.745,1199,2.815,1200,2.815,1201,0.991,1202,0.991,1203,1.745,1204,1.745,1205,1.745,1206,0.991,1207,1.745,1208,5.526,1209,3.539,1210,4.06,1211,0.991,1212,1.745,1213,0.991,1214,1.745,1215,1.745,1216,1.745,1217,0.991,1218,0.991,1219,0.991,1220,0.991,1221,0.991,1222,0.991,1223,1.476,1224,0.991,1225,1.745,1226,0.991,1227,0.991,1228,0.991,1229,0.991,1230,0.991,1231,0.991,1232,0.991,1233,1.745,1234,0.991,1235,0.991,1236,0.991,1237,0.991,1238,0.991,1239,0.991,1240,1.745,1241,0.991,1242,0.991,1243,2.338,1244,0.991,1245,2.338,1246,3.209,1247,1.745,1248,1.745,1249,0.991,1250,0.991,1251,0.991,1252,0.991,1253,1.745,1254,1.745,1255,0.991,1256,0.991,1257,0.991,1258,0.991,1259,0.991,1260,0.991,1261,0.991,1262,0.991,1263,0.991,1264,0.991,1265,0.991,1266,1.745,1267,0.991,1268,0.991,1269,2.338,1270,0.991,1271,0.991,1272,2.338,1273,2.815,1274,0.991,1275,0.991,1276,0.991,1277,0.991,1278,0.991,1279,0.991,1280,0.991,1281,0.991,1282,0.991,1283,0.991,1284,0.991,1285,0.991,1286,0.991,1287,0.991,1288,0.991,1289,0.991,1290,0.991,1291,0.991,1292,0.838,1293,0.991,1294,0.991,1295,2.338,1296,1.476,1297,0.991,1298,0.991,1299,0.991,1300,2.338,1301,0.991,1302,0.991,1303,0.991,1304,0.991,1305,0.991,1306,2.338,1307,0.991,1308,1.476,1309,1.745,1310,1.745,1311,1.745,1312,1.745,1313,0.991,1314,1.745,1315,2.815,1316,2.815,1317,0.991,1318,0.991]],["title/classes/NewUser.html",[49,0.405,1319,2.039]],["body/classes/NewUser.html",[3,0.252,4,0.215,9,0.179,19,0.252,20,0.635,24,0.954,27,1.19,29,0.925,30,0.026,31,0.693,32,0.523,33,0.863,35,1.002,36,1.661,37,1.661,48,0.252,49,0.635,95,0.015,96,0.02,97,0.015,118,1.266,196,1.479,226,1.266,335,2.115,463,1.583,615,2.051,799,2.501,871,3.832,958,3.832,970,2.751,997,3.064,1013,3.064,1059,3.064,1319,3.52,1320,3.483,1321,4.119,1322,4.119,1323,3.483,1324,4.214,1325,4.694,1326,4.694,1327,4.119,1328,5.261,1329,4.119,1330,4.119,1331,4.119,1332,4.119,1333,4.119,1334,4.119,1335,3.064,1336,3.483,1337,4.119,1338,4.119,1339,4.119,1340,4.119,1341,4.119,1342,4.119,1343,4.119,1344,4.119]],["title/components/PastcontestComponent.html",[0,0.3,85,0.864]],["body/components/PastcontestComponent.html",[0,0.489,1,0.755,2,1.339,3,0.168,4,0.143,5,0.986,6,0.986,7,0.986,8,0.986,9,0.12,11,0.986,12,2.202,13,1.928,15,1.339,17,1.339,19,0.168,20,0.481,23,3.024,24,0.723,27,1.148,29,0.617,30,0.026,31,0.79,32,0.49,33,0.575,35,0.74,36,1.326,37,1.326,43,0.79,44,0.427,48,0.168,49,0.331,60,0.863,61,1.432,62,1.432,63,0.986,64,1.73,65,0.986,66,0.986,67,0.707,68,1.129,69,0.986,70,0.707,71,0.986,72,0.707,73,0.986,74,0.707,75,0.986,76,0.707,77,0.807,78,0.986,79,0.707,80,0.986,81,0.755,82,0.986,83,0.707,84,0.986,85,1.326,86,0.986,87,0.707,88,0.986,89,0.707,90,0.986,91,0.755,92,0.986,93,0.986,94,0.986,95,0.01,96,0.015,97,0.01,118,1.129,189,2.075,192,2.421,194,1.055,196,1.432,214,0.896,226,0.959,229,1.762,230,0.896,233,2.458,237,1.253,246,1.896,250,0.922,252,2.667,257,3.279,258,3.441,260,3.128,265,3.371,268,2.966,272,3.371,281,1.933,289,1.98,296,2.421,297,2.45,300,1.339,321,3.371,337,2.663,343,3.371,346,3.371,361,1.667,418,2.321,439,2.042,447,4.356,478,3.322,482,4.07,483,4.107,484,3.969,490,4.356,499,3.969,500,3.832,556,2.321,557,2.042,558,2.321,559,2.321,560,3.371,566,2.321,567,2.321,568,2.321,569,2.321,596,2.321,597,2.042,598,2.321,599,2.321,600,2.321,601,2.321,641,3.371,642,3.371,643,3.371,644,3.371,757,3.371,836,2.421,888,3.371,889,3.371,981,3.441,1080,3.371,1081,2.966,1345,2.321,1346,3.987,1347,3.987,1348,3.371,1349,5.151,1350,3.987,1351,3.987,1352,4.694,1353,3.987,1354,4.694,1355,4.694,1356,3.987,1357,3.987,1358,2.745,1359,3.987,1360,3.128,1361,2.745,1362,3.987,1363,3.987,1364,3.371,1365,2.745,1366,2.745,1367,2.745,1368,2.745,1369,2.745,1370,2.745,1371,2.745,1372,3.987,1373,3.987]],["title/interfaces/Profile.html",[53,1.597,253,0.754]],["body/interfaces/Profile.html",[3,0.296,4,0.253,9,0.211,19,0.296,20,0.703,30,0.025,32,0.527,35,0.99,48,0.296,53,2.966,95,0.018,96,0.022,97,0.018,118,1.4,196,1.741,226,1.166,253,1.307,254,1.996,330,3.606,335,2.489,463,1.863,615,2.094,799,2.944,811,2.489,871,3.787,958,3.787,970,3.238,1324,4.319,1335,3.606,1336,4.099,1374,4.099,1375,6.467]],["title/components/ProfileComponent.html",[0,0.3,87,0.864]],["body/components/ProfileComponent.html",[0,0.444,1,0.602,2,1.376,3,0.134,4,0.114,5,0.785,6,0.785,7,0.785,8,0.785,9,0.095,11,0.785,12,2.116,13,1.852,15,1.129,17,1.129,19,0.134,20,0.555,24,0.834,26,1.883,27,1.09,29,0.491,30,0.026,31,0.835,32,0.47,33,0.458,35,0.875,36,0.563,37,0.563,43,0.774,44,0.34,45,1.04,48,0.134,49,0.264,53,2.681,60,0.687,61,1.471,62,1.208,63,0.785,64,1.545,65,0.785,66,0.785,67,0.563,68,0.809,69,0.785,70,0.563,71,0.785,72,0.563,73,0.785,74,0.563,75,0.785,76,0.563,77,1.205,78,0.785,79,0.563,80,0.785,81,0.602,82,0.785,83,0.563,84,0.785,85,0.563,86,0.785,87,1.184,88,0.785,89,0.563,90,0.785,91,0.602,92,0.785,93,0.785,94,0.785,95,0.008,96,0.012,97,0.008,118,0.809,119,3.073,196,1.883,197,2.042,198,2.042,205,2.692,206,2.502,214,0.756,220,2.844,224,1.6,226,1.445,230,0.491,233,1.292,237,1.057,242,2.502,243,2.488,246,1.949,260,2.042,270,2.362,281,1.687,289,1.768,296,2.794,297,2.188,300,1.129,304,1.328,319,2.246,361,1.328,402,2.844,426,2.488,428,2.502,441,2.844,453,2.502,473,2.502,478,2.794,479,2.362,483,3.862,498,3.048,610,1.849,616,1.627,648,2.246,650,3.694,651,1.461,653,1.627,715,2.246,804,2.246,811,2.692,812,2.844,820,2.844,861,1.849,862,3.048,863,2.502,864,1.849,865,2.502,866,2.502,867,3.694,868,1.849,869,1.849,871,2.488,874,3.9,875,1.461,876,1.849,880,2.246,881,1.849,883,4.199,895,1.627,898,3.465,908,1.849,922,3.858,949,3.422,952,3.9,969,2.502,1015,2.844,1078,1.849,1121,1.849,1162,1.627,1324,3.648,1325,3.694,1326,3.694,1360,2.042,1376,1.849,1377,4.063,1378,4.098,1379,3.363,1380,4.098,1381,4.098,1382,4.098,1383,2.187,1384,3.765,1385,3.363,1386,2.187,1387,3.363,1388,3.363,1389,3.363,1390,2.187,1391,2.187,1392,2.187,1393,2.187,1394,2.187,1395,2.187,1396,2.187,1397,2.187,1398,2.187,1399,2.187,1400,2.187,1401,2.187,1402,2.187,1403,2.187,1404,2.187,1405,2.187,1406,2.187,1407,2.187,1408,2.187,1409,2.187,1410,2.187,1411,2.187,1412,2.187,1413,2.187,1414,2.187,1415,2.187,1416,2.187,1417,2.187,1418,2.187,1419,2.844,1420,3.363,1421,4.434,1422,1.849,1423,4.767,1424,2.187,1425,4.098,1426,3.363,1427,1.849,1428,3.465,1429,4.199,1430,3.465,1431,3.048,1432,2.187,1433,4.098,1434,2.187,1435,2.187,1436,2.187,1437,1.849,1438,3.465,1439,1.849,1440,1.849,1441,2.844,1442,1.849,1443,1.849,1444,1.849,1445,2.187,1446,2.844,1447,2.187,1448,3.363,1449,2.187,1450,4.098,1451,2.187,1452,3.363,1453,4.6,1454,2.187,1455,2.187,1456,2.187,1457,1.849,1458,2.187,1459,2.187,1460,2.187,1461,3.363,1462,2.187,1463,2.187,1464,2.844,1465,2.187,1466,3.363,1467,2.187,1468,3.363,1469,4.098,1470,2.187,1471,2.187,1472,2.187,1473,2.187,1474,2.187,1475,2.187,1476,2.187,1477,2.187,1478,2.187,1479,2.187,1480,2.187,1481,2.187,1482,2.187,1483,2.187,1484,2.187,1485,2.187,1486,2.187,1487,2.187,1488,2.187,1489,2.187]],["title/injectables/ProfileService.html",[234,0.987,1384,2.243]],["body/injectables/ProfileService.html",[3,0.23,4,0.196,9,0.164,14,1.664,19,0.23,20,0.599,24,0.683,27,1.142,29,1.115,30,0.026,31,0.835,32,0.489,33,1.04,35,0.88,36,1.429,37,1.429,43,1.032,44,0.586,48,0.23,49,0.599,53,2.917,95,0.014,96,0.018,97,0.014,150,1.664,194,1.447,196,2.202,214,1.115,216,2.548,217,2.85,224,2.64,226,1.475,229,2.608,230,1.115,234,1.459,235,1.791,244,1.791,247,2.8,250,2.115,335,3.03,382,1.459,456,3.415,615,1.864,654,1.933,659,4.694,676,2.096,677,2.85,679,1.664,720,1.933,762,3.091,784,1.791,785,2.763,786,3.013,787,3.013,811,2.85,962,3.941,1006,4.99,1014,2.8,1043,3.183,1046,3.691,1360,2.286,1377,3.691,1384,3.314,1490,3.183,1491,5.551,1492,4.962,1493,4.962,1494,3.765,1495,4.962,1496,3.765,1497,4.962,1498,3.765,1499,4.962,1500,3.765,1501,3.765,1502,3.765,1503,3.765,1504,3.765,1505,3.765,1506,3.765]],["title/injectables/RegService.html",[112,1.869,234,0.987]],["body/injectables/RegService.html",[0,0.37,3,0.252,4,0.216,9,0.18,14,1.827,19,0.252,20,0.636,24,0.75,27,1.109,29,1.184,30,0.026,31,0.887,32,0.515,33,1.105,35,0.593,36,1.357,37,1.357,43,1.029,44,0.643,48,0.252,49,0.499,55,3.521,95,0.015,96,0.02,97,0.015,112,2.935,150,1.827,196,1.484,214,1.184,222,3.074,224,1.966,226,1.519,229,2.33,230,1.304,234,1.55,235,1.966,244,1.966,250,1.388,335,2.707,382,1.798,456,2.301,463,1.588,538,1.827,654,2.122,663,3.525,676,2.301,677,2.981,679,1.827,684,3.404,720,2.122,762,3.232,784,1.966,785,2.935,786,3.201,787,3.201,811,2.122,962,3.521,1039,3.074,1046,3.074,1048,3.495,1319,3.525,1507,3.495,1508,5.272,1509,5.272,1510,4.133,1511,4.133,1512,5.272,1513,4.133,1514,5.272,1515,4.133,1516,4.133,1517,4.133,1518,4.133]],["title/components/RegisterComponent.html",[0,0.3,89,0.864]],["body/components/RegisterComponent.html",[0,0.436,1,0.577,2,1.094,3,0.128,4,0.109,5,0.754,6,0.754,7,0.754,8,0.754,9,0.212,11,0.754,12,2.099,13,1.838,15,1.094,17,1.094,19,0.128,20,0.393,21,2.311,24,0.381,27,1.161,29,0.897,30,0.026,31,1,32,0.474,33,0.837,35,0.646,36,1.385,37,1.385,43,0.905,44,0.327,46,1.978,48,0.128,49,0.253,55,4.132,60,0.659,61,1.17,62,1.17,63,0.754,64,1.511,65,0.754,66,0.754,67,0.54,68,0.784,69,0.754,70,0.54,71,0.754,72,0.54,73,0.754,74,0.54,75,0.754,76,0.54,77,0.617,78,0.754,79,0.54,80,0.754,81,0.577,82,0.754,83,0.54,84,0.754,85,0.54,86,0.754,87,0.54,88,0.754,89,1.158,90,0.754,91,0.577,92,0.754,93,0.754,94,0.754,95,0.008,96,0.012,97,0.008,112,2.223,118,0.784,119,1.402,122,2.176,132,1.078,150,0.928,158,1.774,189,1.44,194,0.806,196,1.75,200,1.078,205,1.078,214,0.732,216,1.673,217,2.05,226,0.784,228,2.425,229,2.279,230,1.249,232,1.402,233,1.73,237,1.024,250,1.807,251,1.774,252,2.279,257,1.814,264,2.733,281,1.644,289,1.534,293,3.348,300,1.636,304,1.978,309,1.274,310,1.561,318,2.755,330,1.561,339,1.274,349,2.425,368,1.402,382,1.516,392,2.667,397,1.44,408,2.755,437,2.97,456,1.168,463,1.534,478,1.274,514,2.423,538,0.928,557,1.561,597,1.561,615,1.341,617,2.423,648,1.402,650,3.348,651,1.402,653,1.561,677,2.05,679,1.765,684,1.168,720,1.673,762,1.814,784,1.55,785,1.168,836,2.425,867,1.561,871,3.545,872,1.561,874,2.97,875,1.402,880,1.402,895,2.423,899,1.774,904,2.755,922,1.978,928,1.561,942,3.806,957,3.806,958,2.959,962,1.402,963,1.774,964,3.376,965,1.774,966,1.774,967,3.806,973,1.774,976,2.423,984,1.561,987,1.774,988,1.774,997,3.625,998,2.423,999,3.376,1039,1.561,1162,1.561,1166,2.755,1296,4.83,1308,2.755,1319,2.733,1323,2.755,1324,3.444,1325,2.423,1326,2.423,1360,1.274,1377,2.423,1421,2.755,1422,1.774,1423,2.755,1427,1.774,1428,2.755,1429,2.755,1430,1.774,1431,2.97,1437,1.774,1438,3.376,1439,2.755,1440,2.755,1441,2.755,1442,1.774,1443,1.774,1444,1.774,1446,2.755,1457,1.774,1519,1.774,1520,2.755,1521,3.258,1522,3.258,1523,3.993,1524,3.258,1525,3.258,1526,3.258,1527,4.501,1528,3.258,1529,3.258,1530,3.258,1531,3.993,1532,3.258,1533,3.258,1534,3.258,1535,4.501,1536,3.258,1537,2.099,1538,2.099,1539,2.099,1540,2.099,1541,2.099,1542,2.099,1543,2.099,1544,2.099,1545,2.099,1546,2.099,1547,2.099,1548,3.258,1549,2.099,1550,2.099,1551,2.099,1552,2.099,1553,3.258,1554,2.099,1555,3.258,1556,3.258,1557,3.258,1558,2.099,1559,2.099,1560,2.099,1561,2.099,1562,2.099,1563,2.099,1564,2.099,1565,2.099,1566,2.099,1567,2.099,1568,2.099,1569,2.099,1570,2.099,1571,2.099,1572,2.099,1573,2.099,1574,2.099,1575,2.099,1576,2.099,1577,2.099,1578,2.099,1579,2.099,1580,2.099,1581,2.099,1582,2.099,1583,2.099,1584,2.099,1585,2.099,1586,3.258,1587,2.099,1588,2.099,1589,2.099,1590,2.099,1591,2.099,1592,2.099,1593,2.099,1594,2.099,1595,2.099,1596,2.099,1597,3.258,1598,4.501,1599,3.258,1600,4.873,1601,3.258,1602,3.258,1603,3.258,1604,3.258,1605,2.099,1606,2.099,1607,2.099,1608,2.099,1609,2.099,1610,2.099,1611,2.099,1612,2.099,1613,2.099,1614,2.099,1615,3.258]],["title/interfaces/RenameFile.html",[253,0.754,768,2.039]],["body/interfaces/RenameFile.html",[3,0.308,4,0.263,9,0.291,19,0.308,20,0.719,30,0.026,32,0.505,35,0.973,48,0.308,95,0.019,96,0.022,97,0.019,233,2.437,253,1.133,254,2.077,768,3.618,1192,5.54,1193,5.54,1616,4.265]],["title/interfaces/RunFile.html",[253,0.754,494,1.869]],["body/interfaces/RunFile.html",[3,0.304,4,0.259,9,0.217,19,0.304,20,0.713,30,0.026,32,0.52,35,0.994,48,0.304,95,0.018,96,0.022,97,0.018,253,1.117,254,2.048,397,2.883,494,3.29,554,3.961,555,4.356,615,2.19,1617,4.205]],["title/interfaces/RunInput.html",[253,0.754,1070,2.039]],["body/interfaces/RunInput.html",[3,0.302,4,0.258,9,0.215,19,0.302,20,0.711,30,0.026,32,0.519,35,1.005,48,0.302,95,0.018,96,0.022,97,0.018,253,1.111,254,2.036,397,2.877,554,3.953,555,4.348,615,2.186,1070,3.575,1618,4.18]],["title/interfaces/RunOutput.html",[253,0.754,1619,2.243]],["body/interfaces/RunOutput.html",[3,0.314,4,0.268,9,0.224,19,0.314,20,0.727,30,0.026,32,0.48,35,0.917,48,0.314,95,0.019,96,0.022,97,0.019,233,2.456,253,1.154,254,2.115,399,4.903,1619,4.023,1620,4.344,1621,6.591]],["title/injectables/RunService.html",[234,0.987,1068,2.243]],["body/injectables/RunService.html",[3,0.229,4,0.195,9,0.163,14,1.654,19,0.229,20,0.597,24,0.679,27,1.11,29,1.243,30,0.026,31,0.931,32,0.488,33,1.16,35,0.962,36,1.272,37,1.272,43,1.03,44,0.582,48,0.229,49,0.452,95,0.014,96,0.018,97,0.014,150,1.654,197,3.001,198,3.001,199,3.001,200,2.538,214,1.11,224,2.351,228,3.001,230,1.11,234,1.453,235,1.78,244,1.78,250,1.66,309,3.361,367,3.164,382,1.453,397,1.654,407,3.001,463,1.899,479,2.538,494,2.752,538,1.654,615,1.977,654,1.921,663,3.361,676,2.083,677,3.023,679,2.185,684,3.408,712,3.677,715,3.301,720,1.921,762,3.081,772,4.677,784,1.78,785,2.752,786,3.001,787,3.001,793,4.179,794,3.164,799,3.001,801,3.164,1068,3.301,1070,3.575,1071,3.164,1113,4.179,1364,4.179,1419,4.179,1619,2.499,1622,3.164,1623,4.943,1624,4.943,1625,3.742,1626,4.943,1627,3.742,1628,3.742,1629,4.943,1630,4.943,1631,4.943,1632,3.742,1633,3.742]],["title/components/TimerComponent.html",[0,0.3,91,0.924]],["body/components/TimerComponent.html",[0,0.47,1,0.685,2,1.246,3,0.152,4,0.13,5,0.894,6,0.894,7,0.894,8,0.894,9,0.108,11,0.894,12,2.166,13,1.897,15,1.246,17,1.246,19,0.152,20,0.448,21,3.376,24,0.673,27,1.193,29,1.104,30,0.026,31,0.827,32,0.505,33,0.778,35,0.533,36,1.265,37,1.265,43,0.746,44,0.388,48,0.152,49,0.301,60,0.782,61,1.332,62,1.765,63,0.894,64,1.651,65,0.894,66,0.894,67,0.641,68,0.893,69,0.894,70,0.641,71,0.894,72,0.641,73,0.894,74,0.641,75,0.894,76,0.641,77,0.732,78,0.894,79,0.641,80,0.894,81,0.685,82,0.894,83,0.641,84,0.894,85,0.641,86,0.894,87,0.641,88,0.894,89,0.641,90,0.894,91,1.352,92,2.107,93,0.894,94,0.894,95,0.009,96,0.014,97,0.009,118,0.599,173,2.066,194,0.957,196,1.593,214,0.834,216,1.905,217,2.524,230,1.104,237,1.166,246,2.904,252,1.101,260,2.985,263,2.76,278,2.76,279,3.138,281,1.826,289,1.889,300,1.651,382,1.091,397,2.324,448,4.828,453,2.76,479,2.524,482,2.76,492,4.156,514,4.461,536,2.106,537,2.106,538,1.961,562,2.106,563,2.106,564,2.106,640,2.106,862,3.299,863,1.852,865,1.852,866,1.852,877,3.138,880,2.479,1081,1.852,1348,3.138,1431,1.852,1634,2.106,1635,3.711,1636,3.711,1637,3.711,1638,3.711,1639,3.711,1640,3.711,1641,3.711,1642,3.711,1643,3.711,1644,3.711,1645,3.711,1646,3.711,1647,3.711,1648,3.711,1649,4.436,1650,3.711,1651,5.257,1652,4.436,1653,4.436,1654,5.257,1655,4.436,1656,4.436,1657,5.257,1658,4.436,1659,5.257,1660,4.915,1661,3.711,1662,4.915,1663,3.711,1664,4.436,1665,2.49,1666,3.711,1667,2.49,1668,2.49,1669,3.711,1670,2.49,1671,2.49,1672,2.49,1673,2.49,1674,2.49,1675,2.49,1676,3.711,1677,2.49,1678,2.49,1679,3.711,1680,2.49,1681,4.915,1682,2.49,1683,2.49,1684,2.49,1685,2.49,1686,2.49,1687,4.436,1688,2.49,1689,2.49,1690,2.49,1691,2.49,1692,2.49,1693,2.49,1694,2.49,1695,2.49,1696,2.106,1697,2.49,1698,2.49,1699,2.49,1700,4.915,1701,4.915,1702,4.915,1703,2.49,1704,4.436,1705,2.49,1706,3.711,1707,2.49,1708,2.49,1709,2.49,1710,2.49,1711,2.49,1712,3.711,1713,3.711,1714,3.711,1715,2.49,1716,2.49,1717,2.49,1718,2.49,1719,2.49,1720,2.49]],["title/interceptors/TokenInterceptorService.html",[113,2.039,851,2.243]],["body/interceptors/TokenInterceptorService.html",[3,0.235,4,0.201,9,0.168,14,1.703,19,0.235,24,1.018,26,1.383,27,0.914,29,1.132,30,0.026,31,0.848,32,0.307,33,1.056,43,0.944,44,0.6,45,1.832,47,2.865,48,0.235,49,0.719,54,2.339,95,0.014,96,0.019,97,0.014,113,3.059,118,1.212,150,1.703,164,3.977,196,1.809,205,2.587,214,1.132,226,0.927,230,0.865,234,1.481,235,1.832,237,1.583,238,4.26,243,3.409,244,1.832,250,1.293,317,3.059,335,3.173,455,4.596,460,4.747,464,3.059,679,2.227,804,2.573,838,3.257,851,3.365,872,2.865,981,2.573,998,2.865,1033,3.257,1034,4.26,1194,3.257,1360,2.339,1464,4.26,1721,3.852,1722,4.747,1723,3.257,1724,5.038,1725,3.852,1726,6.683,1727,3.852,1728,5.038,1729,5.038,1730,3.852,1731,3.852,1732,5.038,1733,5.038,1734,5.614,1735,5.614,1736,5.038,1737,5.038,1738,5.038,1739,5.038,1740,3.852,1741,5.614,1742,3.852,1743,3.852,1744,3.852,1745,3.852,1746,3.852,1747,3.852,1748,3.852,1749,3.852,1750,3.852,1751,3.852,1752,3.852,1753,3.852,1754,3.852,1755,3.852,1756,3.852,1757,3.852,1758,3.852,1759,3.852,1760,3.852,1761,3.852]],["title/interfaces/User.html",[226,0.808,253,0.754]],["body/interfaces/User.html",[3,0.312,4,0.267,9,0.223,19,0.312,20,0.725,30,0.025,32,0.479,35,0.945,48,0.312,95,0.019,96,0.022,97,0.019,118,1.445,226,1.445,253,1.35,254,2.107,615,2.21,799,3.107,958,3.997,1014,3.806,1335,3.806,1762,4.326,1763,3.806]],["title/coverage.html",[1764,3.886]],["body/coverage.html",[0,0.605,1,1.004,9,0.212,10,3.086,26,1.31,30,0.026,32,0.291,49,0.587,53,1.736,67,0.939,68,0.878,70,0.939,72,0.939,74,0.939,76,0.939,79,0.939,81,1.004,83,0.939,85,0.939,87,0.939,89,0.939,91,1.004,95,0.014,96,0.018,97,0.014,112,2.032,113,2.216,159,2.216,162,2.437,166,2.437,168,2.437,211,2.714,213,3.086,226,0.878,234,1.836,253,1.472,255,3.086,261,3.616,262,3.086,270,1.874,297,1.736,382,1.073,400,3.086,428,2.714,444,3.086,470,3.086,494,2.032,655,3.086,733,3.086,736,3.086,737,3.086,758,3.086,760,2.437,761,3.086,768,2.216,802,3.086,825,3.616,851,2.437,884,3.086,922,4.081,928,2.714,932,4.622,934,3.086,959,4.929,1002,3.086,1058,2.714,1060,4.11,1068,2.437,1070,2.216,1150,3.086,1319,2.216,1320,3.086,1345,3.086,1374,3.086,1376,3.086,1384,2.437,1490,3.086,1507,3.086,1519,3.086,1616,3.086,1617,3.086,1618,3.086,1619,2.437,1620,3.086,1622,3.086,1634,3.086,1722,3.086,1723,3.086,1762,3.086,1764,3.086,1765,3.649,1766,3.649,1767,4.861,1768,4.861,1769,4.861,1770,3.649,1771,3.649,1772,3.649,1773,3.649,1774,4.861,1775,3.649,1776,3.649,1777,3.649,1778,5.466,1779,3.649,1780,3.086,1781,3.649,1782,4.861,1783,5.829,1784,5.466,1785,3.649,1786,3.649,1787,3.649,1788,3.649,1789,3.649,1790,3.649,1791,3.649,1792,3.649,1793,4.861,1794,4.861,1795,3.649,1796,3.649,1797,3.649,1798,3.649,1799,3.649,1800,3.649,1801,3.649,1802,3.649,1803,3.649,1804,3.086,1805,5.829,1806,3.086,1807,4.11,1808,3.086,1809,3.086,1810,3.649]],["title/dependencies.html",[101,2.454,1811,2.798]],["body/dependencies.html",[30,0.026,44,0.722,95,0.017,96,0.021,97,0.017,101,2.818,103,3.452,126,4.216,127,3.785,132,2.383,173,3.406,174,4.792,175,3.924,176,3.924,178,3.924,179,3.924,194,1.783,538,2.051,540,3.452,541,3.452,1812,4.64,1813,4.64,1814,4.64,1815,5.746,1816,4.64,1817,5.667,1818,4.64,1819,4.64,1820,4.64,1821,4.64,1822,4.64,1823,4.64,1824,4.64,1825,5.667,1826,4.64,1827,4.64,1828,5.667,1829,4.64,1830,4.64,1831,4.64,1832,4.64,1833,4.64,1834,4.64,1835,4.64,1836,4.64,1837,4.64,1838,4.64,1839,4.64,1840,4.64,1841,4.64,1842,4.64]],["title/index.html",[19,0.171,1843,2.798,1844,2.798]],["body/index.html",[0,0.545,4,0.239,13,1.349,30,0.021,31,0.772,38,3.88,46,3.418,95,0.017,96,0.021,97,0.017,116,2.787,173,3.39,311,3.418,317,3.697,322,5.148,337,3.759,339,2.787,371,3.855,382,1.349,405,3.759,479,2.356,647,4.846,833,3.414,984,3.414,1017,3.414,1106,5.148,1223,3.88,1292,4.76,1520,3.88,1696,3.88,1815,3.88,1845,4.589,1846,6.089,1847,4.589,1848,4.589,1849,6.716,1850,4.589,1851,4.589,1852,4.589,1853,4.589,1854,4.589,1855,4.589,1856,4.589,1857,6.514,1858,4.589,1859,4.589,1860,4.589,1861,3.88,1862,5.629,1863,6.348,1864,4.589,1865,4.589,1866,4.589,1867,4.589,1868,4.589,1869,4.589,1870,4.589,1871,4.589]],["title/modules.html",[100,2.791]],["body/modules.html",[30,0.023,95,0.02,96,0.023,97,0.02,99,3.61,100,3.282,111,3.282,127,3.61,834,4.57,1872,5.404,1873,6.203,1874,5.404,1875,5.404]],["title/overview.html",[1876,3.886]],["body/overview.html",[1,1.814,2,1.414,26,2.102,30,0.026,60,1.323,67,1.507,70,1.507,72,1.507,74,1.507,76,1.507,79,1.507,81,1.611,83,1.507,85,1.507,87,1.507,89,1.507,91,1.611,95,0.016,96,0.02,97,0.016,98,2.556,99,4.767,100,2.556,101,2.556,102,3.559,103,3.131,104,3.559,105,3.131,106,3.559,107,3.559,108,3.559,109,3.559,110,3.559,111,3.555,112,3.26,113,3.555,114,4.51,115,3.559,116,2.556,192,2.556,211,3.131,254,1.733,426,2.556,427,3.968,654,2.161,1059,3.131,1088,3.559,1780,3.559,1876,3.559,1877,4.209,1878,4.209]],["title/routes.html",[192,2.791]],["body/routes.html",[30,0.023,95,0.02,96,0.023,97,0.02,192,3.347]],["title/miscellaneous/variables.html",[1763,3.007,1879,2.366]],["body/miscellaneous/variables.html",[19,0.305,30,0.026,32,0.52,36,1.625,37,1.625,95,0.019,96,0.022,97,0.019,189,2.618,252,2.207,784,2.817,825,4.858,1763,3.714,1804,4.222,1806,4.222,1807,4.222,1808,5.008,1809,5.008,1861,5.008,1879,4.222,1880,5.923,1881,4.993,1882,4.993,1883,4.993,1884,4.993,1885,4.993]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":922,"title":{},"body":{"components/LoadingComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["0.2em",{"_index":1485,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.2s",{"_index":1479,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.3em",{"_index":1469,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.5em",{"_index":1472,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.8em",{"_index":1716,"title":{},"body":{"components/TimerComponent.html":{}}}],["0/1",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1435,"title":{},"body":{"components/ProfileComponent.html":{}}}],["08",{"_index":1609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1",{"_index":426,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"overview.html":{}}}],["1.1.11",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1470,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1.3.0",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["1.4.12",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["1.5px",{"_index":652,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["1.5rem",{"_index":1606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1.8",{"_index":869,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["1/11",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["1/31",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1878,"title":{},"body":{"overview.html":{}}}],["10.1.4",{"_index":1815,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":319,"title":{},"body":{"components/CompCreateComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{}}}],["100%!important",{"_index":1463,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1000",{"_index":1679,"title":{},"body":{"components/TimerComponent.html":{}}}],["104",{"_index":1608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["11",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":1445,"title":{},"body":{"components/ProfileComponent.html":{}}}],["13",{"_index":1877,"title":{},"body":{"overview.html":{}}}],["14",{"_index":582,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["15",{"_index":931,"title":{},"body":{"components/LoadingComponent.html":{}}}],["15px",{"_index":1427,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["16",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["163a939a7929",{"_index":1090,"title":{},"body":{"classes/NavigationModel.html":{}}}],["16em",{"_index":900,"title":{},"body":{"components/LoadingComponent.html":{}}}],["16px",{"_index":574,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["1a202c",{"_index":1424,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1c9ee9",{"_index":1478,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1cm",{"_index":1471,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1em",{"_index":1720,"title":{},"body":{"components/TimerComponent.html":{}}}],["1px",{"_index":1431,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["1rem",{"_index":1449,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1rem!important",{"_index":1458,"title":{},"body":{"components/ProfileComponent.html":{}}}],["2",{"_index":427,"title":{},"body":{"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{},"overview.html":{}}}],["2.0.0",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["20/50",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["2014",{"_index":643,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["20em",{"_index":896,"title":{},"body":{"components/LoadingComponent.html":{}}}],["20px",{"_index":1422,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["21s",{"_index":909,"title":{},"body":{"components/LoadingComponent.html":{}}}],["24",{"_index":1676,"title":{},"body":{"components/TimerComponent.html":{}}}],["25",{"_index":932,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["25rem",{"_index":1447,"title":{},"body":{"components/ProfileComponent.html":{}}}],["28",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":1434,"title":{},"body":{"components/ProfileComponent.html":{}}}],["2rem",{"_index":1612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3",{"_index":428,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["3.1.0",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["3/12",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1461,"title":{},"body":{"components/ProfileComponent.html":{}}}],["33",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["3852f21a4ea0",{"_index":1648,"title":{},"body":{"components/TimerComponent.html":{}}}],["3bb7ff",{"_index":1481,"title":{},"body":{"components/ProfileComponent.html":{}}}],["3px",{"_index":1432,"title":{},"body":{"components/ProfileComponent.html":{}}}],["4",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["4.0.6",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":928,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["42",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["4b4b4b",{"_index":907,"title":{},"body":{"components/LoadingComponent.html":{}}}],["4s",{"_index":913,"title":{},"body":{"components/LoadingComponent.html":{}}}],["5",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["5/8",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":899,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegisterComponent.html":{}}}],["50px",{"_index":1615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6",{"_index":1088,"title":{},"body":{"classes/NavigationModel.html":{},"overview.html":{}}}],["6.6.0",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1681,"title":{},"body":{"components/TimerComponent.html":{}}}],["62",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":923,"title":{},"body":{"components/LoadingComponent.html":{}}}],["66",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":642,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["75",{"_index":925,"title":{},"body":{"components/LoadingComponent.html":{}}}],["8/19",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":926,"title":{},"body":{"components/LoadingComponent.html":{}}}],["86",{"_index":929,"title":{},"body":{"components/LoadingComponent.html":{}}}],["8px",{"_index":1453,"title":{},"body":{"components/ProfileComponent.html":{}}}],["9",{"_index":1780,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9/13",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":933,"title":{},"body":{"components/LoadingComponent.html":{}}}],["92",{"_index":927,"title":{},"body":{"components/LoadingComponent.html":{}}}],["96",{"_index":930,"title":{},"body":{"components/LoadingComponent.html":{}}}],["_login",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_login:loginservice",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_loginserv",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["_loginserv:loginservice",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["_router",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["_router:router",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{}}}],["a.button3",{"_index":1466,"title":{},"body":{"components/ProfileComponent.html":{}}}],["a.button3:hover",{"_index":1480,"title":{},"body":{"components/ProfileComponent.html":{}}}],["absolute",{"_index":897,"title":{},"body":{"components/LoadingComponent.html":{}}}],["accept",{"_index":276,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["accesible",{"_index":336,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["access",{"_index":712,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["accessible",{"_index":806,"title":{},"body":{"components/HomeComponent.html":{}}}],["accumulates",{"_index":308,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["accurate",{"_index":279,"title":{},"body":{"components/CompCreateComponent.html":{},"components/TimerComponent.html":{}}}],["ace",{"_index":540,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"dependencies.html":{}}}],["ace.ace.editor",{"_index":516,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.config.set(\"fontsize",{"_index":573,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.config.set('basepath",{"_index":572,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.edit(this.editor.nativeelement",{"_index":591,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.require('ace/ext/beautify",{"_index":577,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.require('ace/ext/language_tools",{"_index":575,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["aceeditor",{"_index":476,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["acess",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activate",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activate/deactivate",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":500,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{}}}],["activatedroute,router",{"_index":539,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["actual_component",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["adapter",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["add",{"_index":838,"title":{},"body":{"components/HomeComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["address",{"_index":1137,"title":{},"body":{"classes/NavigationModel.html":{}}}],["adds",{"_index":1175,"title":{},"body":{"classes/NavigationModel.html":{}}}],["afterviewinit",{"_index":472,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["again",{"_index":437,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["agrawal",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{}}}],["al",{"_index":1182,"title":{},"body":{"classes/NavigationModel.html":{}}}],["alert(\"an",{"_index":1133,"title":{},"body":{"classes/NavigationModel.html":{}}}],["alert(\"competition",{"_index":606,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["alert(\"invalid",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(\"something",{"_index":619,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["alert(response",{"_index":391,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["align",{"_index":648,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["allocatetimeunits",{"_index":1661,"title":{},"body":{"components/TimerComponent.html":{}}}],["allocatetimeunits(timedifference",{"_index":1669,"title":{},"body":{"components/TimerComponent.html":{}}}],["allowed",{"_index":477,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["allows",{"_index":1093,"title":{},"body":{"classes/NavigationModel.html":{}}}],["along",{"_index":268,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{}}}],["alongside",{"_index":312,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["ambiance",{"_index":547,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["angular",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/TimerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular's",{"_index":272,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["angular/animations",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["angular/compiler",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{}}}],["angular/material/form",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":912,"title":{},"body":{"components/LoadingComponent.html":{}}}],["another",{"_index":315,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{}}}],["api",{"_index":463,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["apis",{"_index":1388,"title":{},"body":{"components/ProfileComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["app.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appended",{"_index":1753,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["application/json",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{}}}],["appmodule",{"_index":99,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":409,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["approutingmodule",{"_index":111,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["april",{"_index":641,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["arial",{"_index":1715,"title":{},"body":{"components/TimerComponent.html":{}}}],["arora",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{}}}],["artifacts",{"_index":1858,"title":{},"body":{"index.html":{}}}],["aryan",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{}}}],["auth.guard",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authenticate",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["authenticated",{"_index":847,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["authentication",{"_index":1033,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["authguard",{"_index":159,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authization",{"_index":1752,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authorization",{"_index":1759,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authorized",{"_index":1755,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["auto",{"_index":1448,"title":{},"body":{"components/ProfileComponent.html":{}}}],["autocomplete",{"_index":1085,"title":{},"body":{"classes/NavigationModel.html":{}}}],["automatically",{"_index":1853,"title":{},"body":{"index.html":{}}}],["available",{"_index":1875,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":1600,"title":{},"body":{"components/RegisterComponent.html":{}}}],["b2b2b2",{"_index":924,"title":{},"body":{"components/LoadingComponent.html":{}}}],["backend",{"_index":836,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["background",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["bar",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{}}}],["basic",{"_index":886,"title":{},"body":{"components/LoadingComponent.html":{},"classes/NavigationModel.html":{}}}],["basically",{"_index":1321,"title":{},"body":{"classes/NewUser.html":{}}}],["basiceditoroptions",{"_index":578,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["beautify",{"_index":553,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["beautifycontents",{"_index":487,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["being",{"_index":609,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["bg",{"_index":1459,"title":{},"body":{"components/ProfileComponent.html":{}}}],["bgimg",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{}}}],["block",{"_index":1468,"title":{},"body":{"components/ProfileComponent.html":{}}}],["body",{"_index":478,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["body,h1,h2,h3,h4,h5,h6",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["boolean",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunOutput.html":{}}}],["bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":650,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom",{"_index":1457,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["box",{"_index":1429,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["break",{"_index":1162,"title":{},"body":{"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["browse",{"_index":1873,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["buffer",{"_index":894,"title":{},"body":{"components/LoadingComponent.html":{}}}],["build",{"_index":1857,"title":{},"body":{"index.html":{}}}],["builds",{"_index":541,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"dependencies.html":{}}}],["builds/src",{"_index":542,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["button",{"_index":304,"title":{},"body":{"components/CompCreateComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["c",{"_index":646,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{}}}],["c++,python,ruby",{"_index":828,"title":{},"body":{"components/HomeComponent.html":{}}}],["c_cpp",{"_index":526,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["call",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/RegService.html":{}}}],["called",{"_index":302,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["calls",{"_index":464,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["canactivate",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate():boolean",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":756,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["capabilities",{"_index":1086,"title":{},"body":{"classes/NavigationModel.html":{}}}],["capability",{"_index":1688,"title":{},"body":{"components/TimerComponent.html":{}}}],["card",{"_index":1428,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["case",{"_index":1739,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["center",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["change",{"_index":1854,"title":{},"body":{"index.html":{}}}],["chaos",{"_index":548,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["characters",{"_index":320,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["check",{"_index":1870,"title":{},"body":{"index.html":{}}}],["checking",{"_index":449,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["checkrunning",{"_index":488,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["child",{"_index":411,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["children",{"_index":1061,"title":{},"body":{"classes/NavigationModel.html":{}}}],["choose",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chrome",{"_index":549,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["clarifications",{"_index":471,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["class",{"_index":49,"title":{"classes/NavigationModel.html":{},"classes/NewUser.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["classes",{"_index":1059,"title":{},"body":{"classes/NavigationModel.html":{},"classes/NewUser.html":{},"overview.html":{}}}],["clears",{"_index":313,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["cli",{"_index":1846,"title":{},"body":{"index.html":{}}}],["click",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{}}}],["clip",{"_index":1444,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["clone",{"_index":1749,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["cloned",{"_index":1751,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["closed",{"_index":1248,"title":{},"body":{"classes/NavigationModel.html":{}}}],["cluster_appmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cobalt",{"_index":550,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["code",{"_index":479,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["coding",{"_index":822,"title":{},"body":{"components/HomeComponent.html":{}}}],["collect",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["color",{"_index":1423,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["column",{"_index":1440,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["comment",{"_index":1303,"title":{},"body":{"classes/NavigationModel.html":{}}}],["comp",{"_index":68,"title":{"interfaces/Comp.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{}}}],["comp.problem",{"_index":569,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["comp.problem.substr(0,100",{"_index":440,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["comp.title",{"_index":439,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["compatible",{"_index":829,"title":{},"body":{"components/HomeComponent.html":{}}}],["compcreatecomponent",{"_index":67,"title":{"components/CompCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["compdashboardcomponent",{"_index":70,"title":{"components/CompDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["competition",{"_index":473,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["competition'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["competition.component.html",{"_index":475,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["competition.component.scss",{"_index":474,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["competition.service",{"_index":361,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{}}}],["competition/:id",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["competition/competition.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["competitioncomponent",{"_index":72,"title":{"components/CompetitionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["competitions",{"_index":404,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["competitionservice",{"_index":297,"title":{"injectables/CompetitionService.html":{}},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["compile",{"_index":1419,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["compiling",{"_index":1630,"title":{},"body":{"injectables/RunService.html":{}}}],["completely",{"_index":459,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{}}}],["compodoc/compodoc",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"overview.html":{}}}],["components/datetime",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["components/moment",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["connection",{"_index":467,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["console.log(`dialog",{"_index":1124,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(console.error",{"_index":393,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["console.log(dir",{"_index":1165,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(err",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["console.log(error",{"_index":624,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["console.log(file",{"_index":1207,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(input",{"_index":801,"title":{},"body":{"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["console.log(res",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(send",{"_index":1312,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(this.dirk",{"_index":1266,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(this.list",{"_index":1240,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(url",{"_index":795,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["console.log({'username':username",{"_index":1505,"title":{},"body":{"injectables/ProfileService.html":{}}}],["const",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":753,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["constructor(_login",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(_loginserv",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_router",{"_index":1665,"title":{},"body":{"components/TimerComponent.html":{}}}],["constructor(cpservice",{"_index":418,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/PastcontestComponent.html":{}}}],["constructor(data",{"_index":746,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["constructor(fb",{"_index":294,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["constructor(http",{"_index":676,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["constructor(injector",{"_index":1725,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["constructor(logserv",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(private",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(public",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(regserv",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(username",{"_index":1327,"title":{},"body":{"classes/NewUser.html":{}}}],["constructor(uservice",{"_index":1383,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructs",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{}}}],["containing",{"_index":1136,"title":{},"body":{"classes/NavigationModel.html":{}}}],["content",{"_index":1308,"title":{},"body":{"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["contents",{"_index":1246,"title":{},"body":{"classes/NavigationModel.html":{}}}],["contest",{"_index":270,"title":{"interfaces/Contest.html":{}},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"interfaces/Contest.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["contestpassed",{"_index":666,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["contestpassed(id",{"_index":680,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["contests",{"_index":1346,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["context",{"_index":1808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["corresponding",{"_index":1387,"title":{},"body":{"components/ProfileComponent.html":{}}}],["countdown",{"_index":1647,"title":{},"body":{"components/TimerComponent.html":{}}}],["cout",{"_index":1122,"title":{},"body":{"classes/NavigationModel.html":{}}}],["cover",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1764,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpservice",{"_index":296,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{}}}],["create",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["create'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["create.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["create.component.html",{"_index":283,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.scss",{"_index":282,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts",{"_index":262,"title":{},"body":{"components/CompCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:19",{"_index":355,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:20",{"_index":358,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:22",{"_index":350,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:24",{"_index":356,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:25",{"_index":298,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:28",{"_index":348,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:44",{"_index":342,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:52",{"_index":299,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:58",{"_index":327,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:69",{"_index":341,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:87",{"_index":301,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create/comp",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"coverage.html":{}}}],["created",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["creates",{"_index":1013,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{}}}],["creation",{"_index":1101,"title":{},"body":{"classes/NavigationModel.html":{}}}],["credentials",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{},"classes/NewUser.html":{},"components/RegisterComponent.html":{}}}],["currentfile",{"_index":1112,"title":{},"body":{"classes/NavigationModel.html":{}}}],["currently",{"_index":1023,"title":{},"body":{"injectables/LoginService.html":{}}}],["cycle1",{"_index":916,"title":{},"body":{"components/LoadingComponent.html":{}}}],["cycle2",{"_index":918,"title":{},"body":{"components/LoadingComponent.html":{}}}],["cycle3",{"_index":920,"title":{},"body":{"components/LoadingComponent.html":{}}}],["cyclic",{"_index":1728,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["dashboard",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["dashboard'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["dashboard.component",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboard.component.html",{"_index":413,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":412,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":400,"title":{},"body":{"components/CompDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:22",{"_index":425,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:23",{"_index":423,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:25",{"_index":422,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:26",{"_index":424,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:27",{"_index":421,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:28",{"_index":419,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:34",{"_index":420,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard/comp",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompDashboardComponent.html":{},"coverage.html":{}}}],["data",{"_index":331,"title":{},"body":{"components/CompCreateComponent.html":{},"components/EditorDialogComponent.html":{}}}],["data.image",{"_index":1403,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data.text",{"_index":755,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["data.text2",{"_index":754,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["data.user_fk",{"_index":1405,"title":{},"body":{"components/ProfileComponent.html":{}}}],["database",{"_index":1200,"title":{},"body":{"classes/NavigationModel.html":{}}}],["date",{"_index":277,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["date().gettime",{"_index":1691,"title":{},"body":{"components/TimerComponent.html":{}}}],["date(this.endsat",{"_index":1711,"title":{},"body":{"components/TimerComponent.html":{}}}],["date_joined",{"_index":1380,"title":{},"body":{"components/ProfileComponent.html":{}}}],["datetime",{"_index":1637,"title":{},"body":{"components/TimerComponent.html":{}}}],["day(s",{"_index":1712,"title":{},"body":{"components/TimerComponent.html":{}}}],["daystodday",{"_index":1651,"title":{},"body":{"components/TimerComponent.html":{}}}],["ddate",{"_index":1652,"title":{},"body":{"components/TimerComponent.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declared",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["decode",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["decoration",{"_index":1474,"title":{},"body":{"components/ProfileComponent.html":{}}}],["decorator",{"_index":1082,"title":{},"body":{"classes/NavigationModel.html":{}}}],["decorators",{"_index":352,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{}}}],["default",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["delete",{"_index":839,"title":{},"body":{"components/HomeComponent.html":{}}}],["deleted",{"_index":1169,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefile",{"_index":764,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefile(file",{"_index":1275,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefile(id",{"_index":771,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefilestruc(table",{"_index":1219,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefolder",{"_index":765,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["deletefolder(folder",{"_index":1279,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefolder(username",{"_index":774,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefolderstruc(table",{"_index":1170,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletes",{"_index":1026,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["deletestructure(table",{"_index":1164,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletion",{"_index":1102,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dependancy",{"_index":1729,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["dependencies",{"_index":101,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"classes/NavigationModel.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["details",{"_index":811,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{}}}],["determined",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dev",{"_index":1850,"title":{},"body":{"index.html":{}}}],["development",{"_index":1848,"title":{},"body":{"index.html":{}}}],["dhruv",{"_index":852,"title":{},"body":{"components/HomeComponent.html":{}}}],["dialog",{"_index":743,"title":{},"body":{"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{}}}],["dialog'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["dialog.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"classes/NavigationModel.html":{}}}],["dialog.component.html",{"_index":745,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.scss",{"_index":744,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.ts",{"_index":737,"title":{},"body":{"components/EditorDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:13",{"_index":747,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":750,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":748,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog/editor",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{},"coverage.html":{}}}],["dir",{"_index":1151,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dir.splice(1",{"_index":1159,"title":{},"body":{"classes/NavigationModel.html":{}}}],["direct",{"_index":1094,"title":{},"body":{"classes/NavigationModel.html":{}}}],["direction",{"_index":1439,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["directive",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["directives",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1856,"title":{},"body":{"index.html":{}}}],["directory",{"_index":833,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["dirk",{"_index":772,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["dirs",{"_index":1208,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dirs,file",{"_index":1239,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dirs,this.dirk",{"_index":1258,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dirs.splice(1",{"_index":1210,"title":{},"body":{"classes/NavigationModel.html":{}}}],["disabled",{"_index":345,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["display",{"_index":1377,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{}}}],["displayed",{"_index":324,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["displays",{"_index":1348,"title":{},"body":{"components/PastcontestComponent.html":{},"components/TimerComponent.html":{}}}],["dist",{"_index":1859,"title":{},"body":{"index.html":{}}}],["django",{"_index":848,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["done",{"_index":757,"title":{},"body":{"components/EditorDialogComponent.html":{},"components/PastcontestComponent.html":{}}}],["drk",{"_index":1280,"title":{},"body":{"classes/NavigationModel.html":{}}}],["drk).subscribe(err",{"_index":1283,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dynamic",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1299,"title":{},"body":{"classes/NavigationModel.html":{}}}],["e15241",{"_index":1436,"title":{},"body":{"components/ProfileComponent.html":{}}}],["e2e",{"_index":1866,"title":{},"body":{"index.html":{}}}],["e2e8f0",{"_index":1426,"title":{},"body":{"components/ProfileComponent.html":{}}}],["e5e9f2",{"_index":1611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ease",{"_index":910,"title":{},"body":{"components/LoadingComponent.html":{}}}],["easy",{"_index":333,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["editfile(table",{"_index":1222,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editfolder(table",{"_index":1177,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editings",{"_index":1135,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editor",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["editor'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["editor.component.html",{"_index":1109,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editor.component.scss",{"_index":1110,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editor/editor.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["editorbeautify",{"_index":480,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["editorcomponent",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editordialogcomponent",{"_index":76,"title":{"components/EditorDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editoroptions",{"_index":588,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["element",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["elementref",{"_index":351,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["email",{"_index":1324,"title":{},"body":{"classes/NewUser.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["email:string",{"_index":1334,"title":{},"body":{"classes/NewUser.html":{}}}],["empty",{"_index":1166,"title":{},"body":{"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["enablebasicautocompletion",{"_index":586,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["enableliveautocompletion",{"_index":587,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["end",{"_index":371,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["endpoint",{"_index":1631,"title":{},"body":{"injectables/RunService.html":{}}}],["endpoints",{"_index":714,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{}}}],["endsat",{"_index":1664,"title":{},"body":{"components/TimerComponent.html":{}}}],["endtime",{"_index":256,"title":{},"body":{"interfaces/Comp.html":{},"components/CompetitionComponent.html":{}}}],["english/implement",{"_index":1646,"title":{},"body":{"components/TimerComponent.html":{}}}],["enter",{"_index":741,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["entrycomponents",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":825,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":392,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":618,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["errormessage",{"_index":1525,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors",{"_index":469,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["essential",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["essentially",{"_index":263,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["event",{"_index":514,"title":{},"body":{"components/CompetitionComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["event.target",{"_index":631,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["execute",{"_index":1292,"title":{},"body":{"classes/NavigationModel.html":{},"index.html":{}}}],["executed",{"_index":1243,"title":{},"body":{"classes/NavigationModel.html":{}}}],["execution",{"_index":1364,"title":{},"body":{"components/PastcontestComponent.html":{},"injectables/RunService.html":{}}}],["existing",{"_index":1190,"title":{},"body":{"classes/NavigationModel.html":{}}}],["expected",{"_index":398,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["expiration",{"_index":1693,"title":{},"body":{"components/TimerComponent.html":{}}}],["expired",{"_index":607,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["expires",{"_index":1641,"title":{},"body":{"components/TimerComponent.html":{}}}],["explanatory",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["exports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extraeditoroptions",{"_index":585,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["f.file",{"_index":1220,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f.filename",{"_index":1254,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f.isfile",{"_index":1172,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f.title",{"_index":1173,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f2f3f8",{"_index":1605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["facilitate",{"_index":332,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["fail",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":863,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["fast",{"_index":808,"title":{},"body":{"components/HomeComponent.html":{}}}],["fb",{"_index":284,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["fd",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fd.append('image',this.myfile,this.myfile.name",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{}}}],["features",{"_index":814,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetch",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["fetchcompetitionbyid",{"_index":667,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchcompetitionbyid(index",{"_index":682,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchpastcompetetions",{"_index":668,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchpoints",{"_index":669,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchrunningcompetetions",{"_index":670,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchupcomingcompetetions",{"_index":671,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fff",{"_index":1443,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["ffffff",{"_index":1477,"title":{},"body":{"components/ProfileComponent.html":{}}}],["field",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["fields",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{"interfaces/File.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["file\",true,file.title",{"_index":1286,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file.filename",{"_index":1225,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file.service",{"_index":1073,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file.url",{"_index":1269,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file/folder",{"_index":742,"title":{},"body":{"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{}}}],["filename",{"_index":759,"title":{},"body":{"interfaces/File.html":{},"classes/NavigationModel.html":{}}}],["filename.title",{"_index":1236,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader",{"_index":1295,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader.onloadend",{"_index":1298,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader.readastext(file",{"_index":1305,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader.result",{"_index":1301,"title":{},"body":{"classes/NavigationModel.html":{}}}],["files",{"_index":339,"title":{},"body":{"components/CompCreateComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["files.item(0",{"_index":379,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["fileservice",{"_index":760,"title":{"injectables/FileService.html":{}},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"coverage.html":{}}}],["filestring",{"_index":1111,"title":{},"body":{"classes/NavigationModel.html":{}}}],["fill",{"_index":906,"title":{},"body":{"components/LoadingComponent.html":{}}}],["first",{"_index":318,"title":{},"body":{"components/CompCreateComponent.html":{},"components/RegisterComponent.html":{}}}],["first_name",{"_index":1325,"title":{},"body":{"classes/NewUser.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["first_name:string",{"_index":1337,"title":{},"body":{"classes/NewUser.html":{}}}],["firstry",{"_index":1003,"title":{},"body":{"injectables/LoginService.html":{}}}],["fix",{"_index":1180,"title":{},"body":{"classes/NavigationModel.html":{}}}],["fixing",{"_index":622,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["fixurl(table",{"_index":1184,"title":{},"body":{"classes/NavigationModel.html":{}}}],["flag",{"_index":1223,"title":{},"body":{"classes/NavigationModel.html":{},"index.html":{}}}],["flex",{"_index":1438,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["flexbox",{"_index":1610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["folder",{"_index":1100,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folder\",true",{"_index":1289,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folder.title",{"_index":1273,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folder.url",{"_index":1272,"title":{},"body":{"classes/NavigationModel.html":{}}}],["foldername",{"_index":1201,"title":{},"body":{"classes/NavigationModel.html":{}}}],["foldername.title",{"_index":1205,"title":{},"body":{"classes/NavigationModel.html":{}}}],["foldername.title).subscribe",{"_index":1206,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folders",{"_index":840,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["following",{"_index":328,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["font",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["for(var",{"_index":1141,"title":{},"body":{"classes/NavigationModel.html":{}}}],["form",{"_index":264,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["formatted",{"_index":1083,"title":{},"body":{"classes/NavigationModel.html":{}}}],["formbuilder",{"_index":295,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["formcontrol",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol('',validators.required",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formdata",{"_index":309,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["formdata.append(\"language",{"_index":637,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["formdata.append(\"script",{"_index":635,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["formdata.append(\"username",{"_index":634,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["formdata.append('end',this.form.get('end').value.format",{"_index":388,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('infile',this.form.get('infile').value",{"_index":385,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('outfile',this.form.get('outfile').value",{"_index":386,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('problem_st',this.form.get('problem_st').value",{"_index":384,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('start',this.form.get('start').value.format",{"_index":387,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('title',this.form.get('title').value",{"_index":383,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formgroup",{"_index":349,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["formgroup,formbuilder",{"_index":360,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{}}}],["formsmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["forum",{"_index":1522,"title":{},"body":{"components/RegisterComponent.html":{}}}],["found",{"_index":1643,"title":{},"body":{"components/TimerComponent.html":{}}}],["framework",{"_index":849,"title":{},"body":{"components/HomeComponent.html":{}}}],["free",{"_index":807,"title":{},"body":{"components/HomeComponent.html":{}}}],["frontend",{"_index":460,"title":{},"body":{"components/CompetitionComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["fucntion",{"_index":1732,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["full",{"_index":870,"title":{},"body":{"components/HomeComponent.html":{}}}],["function",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["functionality",{"_index":1076,"title":{},"body":{"classes/NavigationModel.html":{}}}],["functions",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{}}}],["further",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["generate",{"_index":322,"title":{},"body":{"components/CompCreateComponent.html":{},"index.html":{}}}],["generated",{"_index":1845,"title":{},"body":{"index.html":{}}}],["getfile",{"_index":766,"title":{},"body":{"injectables/FileService.html":{}}}],["getfile(id",{"_index":776,"title":{},"body":{"injectables/FileService.html":{}}}],["getfiles",{"_index":767,"title":{},"body":{"injectables/FileService.html":{}}}],["getfiles(newfolder",{"_index":1250,"title":{},"body":{"classes/NavigationModel.html":{}}}],["getfiles(username",{"_index":778,"title":{},"body":{"injectables/FileService.html":{}}}],["getimage",{"_index":1004,"title":{},"body":{"injectables/LoginService.html":{}}}],["getpoints",{"_index":489,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["getpointsurl",{"_index":656,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["getpurl",{"_index":657,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["getrurl",{"_index":658,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["gettimedifference",{"_index":1662,"title":{},"body":{"components/TimerComponent.html":{}}}],["getting",{"_index":1843,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1005,"title":{},"body":{"injectables/LoginService.html":{}}}],["geturl",{"_index":659,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/ProfileService.html":{}}}],["getuser",{"_index":1006,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{}}}],["getuserdetail",{"_index":1492,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserdetail(username",{"_index":1495,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserid",{"_index":1007,"title":{},"body":{"injectables/LoginService.html":{}}}],["getuserurl",{"_index":1491,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuurl",{"_index":660,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["github",{"_index":532,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["given",{"_index":450,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["go",{"_index":1869,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1290,"title":{},"body":{"classes/NavigationModel.html":{}}}],["gotcontest",{"_index":1354,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["gotpoints",{"_index":1355,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["graph",{"_index":1874,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1460,"title":{},"body":{"components/ProfileComponent.html":{}}}],["guard",{"_index":211,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gutters",{"_index":1450,"title":{},"body":{"components/ProfileComponent.html":{}}}],["h",{"_index":1462,"title":{},"body":{"components/ProfileComponent.html":{}}}],["handling",{"_index":445,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["happen",{"_index":458,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["header",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["headers",{"_index":785,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["hear",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{}}}],["height",{"_index":867,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["hello",{"_index":1599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["help",{"_index":1106,"title":{},"body":{"classes/NavigationModel.html":{},"index.html":{}}}],["helpers",{"_index":1218,"title":{},"body":{"classes/NavigationModel.html":{}}}],["here",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["highlightactiveline",{"_index":580,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["home",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["home.component.html",{"_index":817,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":816,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":79,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepage",{"_index":803,"title":{},"body":{"components/HomeComponent.html":{}}}],["hoursinaday",{"_index":1653,"title":{},"body":{"components/TimerComponent.html":{}}}],["hourstodday",{"_index":1654,"title":{},"body":{"components/TimerComponent.html":{}}}],["hr.new1",{"_index":649,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["hrs",{"_index":1713,"title":{},"body":{"components/TimerComponent.html":{}}}],["html",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["htmlinputelement).files[0",{"_index":632,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["http",{"_index":679,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["http://127.0.0.1:8000/api/competition",{"_index":703,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/compile",{"_index":1629,"title":{},"body":{"injectables/RunService.html":{}}}],["http://127.0.0.1:8000/api/contest/get/past",{"_index":699,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/get/running",{"_index":701,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/get/upcoming",{"_index":705,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/isrunning",{"_index":707,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/passed",{"_index":709,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/postcontest",{"_index":710,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/display",{"_index":789,"title":{},"body":{"injectables/FileService.html":{}}}],["http://127.0.0.1:8000/api/login",{"_index":1037,"title":{},"body":{"injectables/LoginService.html":{}}}],["http://127.0.0.1:8000/api/points",{"_index":697,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/profile",{"_index":1497,"title":{},"body":{"injectables/ProfileService.html":{}}}],["http://127.0.0.1:8000/api/profile/add",{"_index":1514,"title":{},"body":{"injectables/RegService.html":{}}}],["http://127.0.0.1:8000/api/profile/pk",{"_index":1499,"title":{},"body":{"injectables/ProfileService.html":{}}}],["http://127.0.0.1:8000/api/rename",{"_index":791,"title":{},"body":{"injectables/FileService.html":{}}}],["http://127.0.0.1:8000/api/submit/code",{"_index":716,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/submit/file",{"_index":718,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/auth",{"_index":1035,"title":{},"body":{"injectables/LoginService.html":{}}}],["http://localhost:4200",{"_index":1852,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":1517,"title":{},"body":{"injectables/RegService.html":{}}}],["http:httpclient,private",{"_index":1043,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{}}}],["http_interceptors",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":677,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["httpclientmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":792,"title":{},"body":{"injectables/FileService.html":{}}}],["httpheaders",{"_index":720,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["httpheaders({'content",{"_index":786,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["httpinterceptor",{"_index":1741,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httpoptions",{"_index":762,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["httpresponse",{"_index":1039,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["https://medium.com/@ofir3322/create",{"_index":1087,"title":{},"body":{"classes/NavigationModel.html":{}}}],["https://medium.com/javascript",{"_index":1644,"title":{},"body":{"components/TimerComponent.html":{}}}],["https://trungk18.com/experience/angular",{"_index":1107,"title":{},"body":{"classes/NavigationModel.html":{}}}],["id",{"_index":257,"title":{},"body":{"interfaces/Comp.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["ide",{"_index":832,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["identifier",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["if(!flag",{"_index":1227,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!item.isfile",{"_index":1157,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!rename",{"_index":1125,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!result){return",{"_index":1123,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!this.working",{"_index":605,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["if(deletefolder",{"_index":1259,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(dir.length",{"_index":1155,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(filename.title",{"_index":1234,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(files.length>0",{"_index":378,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(item.isfile",{"_index":1230,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(item.title",{"_index":1224,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(loc",{"_index":1264,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(localstorage.getitem('token",{"_index":1756,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["if(newfolder",{"_index":1256,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(receivied.success==true",{"_index":1314,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(text",{"_index":1126,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(text==\"file",{"_index":1130,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(this._login.loggedin",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(this.dirk",{"_index":1260,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(this.form.get('end').value",{"_index":375,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.form.get('problem_st').value",{"_index":373,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.form.get('start').value",{"_index":374,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.form.get('title').value",{"_index":372,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.link",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('email').value",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('first_name').value",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('last_name').value",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('password').value",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('username').value",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.timedifference",{"_index":1694,"title":{},"body":{"components/TimerComponent.html":{}}}],["image",{"_index":871,"title":{},"body":{"components/HomeComponent.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["image:new",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["image:string",{"_index":1336,"title":{},"body":{"classes/NewUser.html":{},"interfaces/Profile.html":{}}}],["imagepath",{"_index":1526,"title":{},"body":{"components/RegisterComponent.html":{}}}],["imgerr",{"_index":1527,"title":{},"body":{"components/RegisterComponent.html":{}}}],["imgurl",{"_index":1528,"title":{},"body":{"components/RegisterComponent.html":{}}}],["implements",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["important",{"_index":1742,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["imports",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/NavigationModel.html":{}}}],["improve",{"_index":843,"title":{},"body":{"components/HomeComponent.html":{}}}],["in_tc",{"_index":734,"title":{},"body":{"interfaces/Contest.html":{}}}],["inbutton",{"_index":285,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["include",{"_index":1117,"title":{},"body":{"classes/NavigationModel.html":{}}}],["incoming",{"_index":1736,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["incorrect",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":845,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["infile",{"_index":367,"title":{},"body":{"components/CompCreateComponent.html":{},"injectables/RunService.html":{}}}],["infinite",{"_index":915,"title":{},"body":{"components/LoadingComponent.html":{}}}],["infinity",{"_index":584,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["information",{"_index":307,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["inject",{"_index":751,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":749,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["injectable",{"_index":234,"title":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["injectable,injector",{"_index":1740,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["injectables",{"_index":654,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"overview.html":{}}}],["injector",{"_index":1726,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["inline",{"_index":1467,"title":{},"body":{"components/ProfileComponent.html":{}}}],["input",{"_index":397,"title":{},"body":{"components/CompCreateComponent.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{}}}],["inputready",{"_index":286,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["inputs",{"_index":1663,"title":{},"body":{"components/TimerComponent.html":{}}}],["insert",{"_index":1148,"title":{},"body":{"classes/NavigationModel.html":{}}}],["insert(url:string",{"_index":1139,"title":{},"body":{"classes/NavigationModel.html":{}}}],["inserted",{"_index":1138,"title":{},"body":{"classes/NavigationModel.html":{}}}],["insertstructure(table",{"_index":1154,"title":{},"body":{"classes/NavigationModel.html":{}}}],["instacne",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["instance",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["instances",{"_index":1015,"title":{},"body":{"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["instantiates",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["int",{"_index":1120,"title":{},"body":{"classes/NavigationModel.html":{}}}],["intercept",{"_index":1724,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(req",{"_index":1730,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(req,next",{"_index":1744,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor",{"_index":851,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"components/HomeComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":1723,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:16",{"_index":1727,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:28",{"_index":1731,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptors",{"_index":1721,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercepts",{"_index":1733,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interest",{"_index":323,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["interface",{"_index":253,"title":{"interfaces/Comp.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"interfaces/Profile.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"interfaces/User.html":{}},"body":{"interfaces/Comp.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"interfaces/Profile.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":254,"title":{},"body":{"interfaces/Comp.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"interfaces/Profile.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interval",{"_index":537,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["interval(1000",{"_index":563,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["is_staff",{"_index":1381,"title":{},"body":{"components/ProfileComponent.html":{}}}],["iscontestrunning",{"_index":672,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["iscontestrunning(id",{"_index":689,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["isfile",{"_index":1062,"title":{},"body":{"classes/NavigationModel.html":{}}}],["isolation",{"_index":841,"title":{},"body":{"components/HomeComponent.html":{}}}],["isrunningurl",{"_index":661,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["issue",{"_index":623,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["item",{"_index":1143,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.children",{"_index":1160,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.file",{"_index":1226,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.title",{"_index":1188,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.title===dir[0",{"_index":1167,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.title==dir[0",{"_index":1158,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.url",{"_index":1186,"title":{},"body":{"classes/NavigationModel.html":{}}}],["items",{"_index":1027,"title":{},"body":{"injectables/LoginService.html":{}}}],["itself",{"_index":1163,"title":{},"body":{"classes/NavigationModel.html":{}}}],["jwt",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":1865,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":344,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["key",{"_index":813,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyframes",{"_index":921,"title":{},"body":{"components/LoadingComponent.html":{}}}],["know",{"_index":1359,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["lang",{"_index":481,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["language",{"_index":555,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{}}}],["language_tools",{"_index":552,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["last",{"_index":1603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["last_name",{"_index":1326,"title":{},"body":{"classes/NewUser.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["last_name:string",{"_index":1338,"title":{},"body":{"classes/NewUser.html":{}}}],["later",{"_index":438,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["layer",{"_index":905,"title":{},"body":{"components/LoadingComponent.html":{}}}],["layer1",{"_index":911,"title":{},"body":{"components/LoadingComponent.html":{}}}],["layer2",{"_index":917,"title":{},"body":{"components/LoadingComponent.html":{}}}],["layer3",{"_index":919,"title":{},"body":{"components/LoadingComponent.html":{}}}],["left",{"_index":898,"title":{},"body":{"components/LoadingComponent.html":{},"components/ProfileComponent.html":{}}}],["legend",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"overview.html":{}}}],["lets",{"_index":265,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["letter",{"_index":1717,"title":{},"body":{"components/TimerComponent.html":{}}}],["library",{"_index":1079,"title":{},"body":{"classes/NavigationModel.html":{}}}],["life",{"_index":1075,"title":{},"body":{"classes/NavigationModel.html":{}}}],["line",{"_index":868,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["linear",{"_index":914,"title":{},"body":{"components/LoadingComponent.html":{}}}],["link",{"_index":408,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/RegisterComponent.html":{}}}],["list",{"_index":1098,"title":{},"body":{"classes/NavigationModel.html":{}}}],["listed",{"_index":815,"title":{},"body":{"components/HomeComponent.html":{}}}],["listns",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{}}}],["literal",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":446,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["load",{"_index":414,"title":{},"body":{"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{}}}],["loaded",{"_index":490,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["loading",{"_index":888,"title":{},"body":{"components/LoadingComponent.html":{},"components/PastcontestComponent.html":{}}}],["loading'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["loading.component.html",{"_index":891,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":890,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading/loading.component",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["loadingcomponent",{"_index":81,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loc",{"_index":1262,"title":{},"body":{"classes/NavigationModel.html":{}}}],["local",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["localcall",{"_index":941,"title":{},"body":{"components/LoginComponent.html":{}}}],["locallogserv",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('token",{"_index":1049,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem('userid",{"_index":1057,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem('userimage",{"_index":1056,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem('username",{"_index":1055,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('token",{"_index":1050,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('userid",{"_index":1053,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('userimage",{"_index":1052,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('username",{"_index":1051,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.setitem('token',res.token",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('userid",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('userid',res.userid",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('userimage',res.image",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('username',this.myuser.username",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["location",{"_index":1149,"title":{},"body":{"classes/NavigationModel.html":{}}}],["logged",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["loggedin",{"_index":1008,"title":{},"body":{"injectables/LoginService.html":{}}}],["logic",{"_index":1692,"title":{},"body":{"components/TimerComponent.html":{}}}],["login",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["login',component:logincomponent",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["login.component.html",{"_index":937,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":936,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["login/login.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login/user",{"_index":1040,"title":{},"body":{"injectables/LoginService.html":{}}}],["logincomponent",{"_index":83,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logined",{"_index":1030,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginform",{"_index":938,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice",{"_index":26,"title":{"injectables/LoginService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["logoutuser",{"_index":1009,"title":{},"body":{"injectables/LoginService.html":{}}}],["logs",{"_index":1025,"title":{},"body":{"injectables/LoginService.html":{}}}],["logser",{"_index":1745,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["logser.gettoken",{"_index":1760,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["logserv",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{}}}],["loop",{"_index":1362,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["lot",{"_index":1487,"title":{},"body":{"components/ProfileComponent.html":{}}}],["made",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["main",{"_index":1121,"title":{},"body":{"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["maintain",{"_index":466,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["make",{"_index":456,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["makes",{"_index":1734,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["margin",{"_index":1421,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["mat_dialog_data",{"_index":752,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["matbuttonmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":1072,"title":{},"body":{"classes/NavigationModel.html":{}}}],["matdialogmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["matformfieldmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["math.floor((timedifference",{"_index":1700,"title":{},"body":{"components/TimerComponent.html":{}}}],["maticonmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1483,"title":{},"body":{"components/ProfileComponent.html":{}}}],["maxlines",{"_index":583,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["mb",{"_index":1456,"title":{},"body":{"components/ProfileComponent.html":{}}}],["means",{"_index":1748,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["media",{"_index":1482,"title":{},"body":{"components/ProfileComponent.html":{}}}],["message",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["method",{"_index":1199,"title":{},"body":{"classes/NavigationModel.html":{}}}],["methods",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["mid",{"_index":468,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["middle",{"_index":1614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["millisecondsinasecond",{"_index":1655,"title":{},"body":{"components/TimerComponent.html":{}}}],["min",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["minlines",{"_index":581,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["minute",{"_index":280,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["minutesinanhour",{"_index":1656,"title":{},"body":{"components/TimerComponent.html":{}}}],["minutestodday",{"_index":1657,"title":{},"body":{"components/TimerComponent.html":{}}}],["miscellaneous",{"_index":1879,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modification",{"_index":1642,"title":{},"body":{"components/TimerComponent.html":{}}}],["modularising",{"_index":1104,"title":{},"body":{"classes/NavigationModel.html":{}}}],["module",{"_index":98,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["modules",{"_index":100,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["moment.js",{"_index":275,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["more",{"_index":1868,"title":{},"body":{"index.html":{}}}],["ms",{"_index":904,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegisterComponent.html":{}}}],["multi",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":713,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{}}}],["myfile",{"_index":1530,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mynewuser",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{}}}],["myuser",{"_index":939,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["names",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["namespace",{"_index":1118,"title":{},"body":{"classes/NavigationModel.html":{}}}],["navigate",{"_index":1851,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1074,"title":{},"body":{"classes/NavigationModel.html":{}}}],["navigationmodel",{"_index":1058,"title":{"classes/NavigationModel.html":{}},"body":{"classes/NavigationModel.html":{},"coverage.html":{}}}],["navigationmodel[],url",{"_index":1185,"title":{},"body":{"classes/NavigationModel.html":{}}}],["nayak",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{}}}],["needed",{"_index":1081,"title":{},"body":{"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/TimerComponent.html":{}}}],["nested",{"_index":1245,"title":{},"body":{"classes/NavigationModel.html":{}}}],["new",{"_index":382,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"coverage.html":{},"index.html":{}}}],["newfolder",{"_index":1249,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newname",{"_index":1192,"title":{},"body":{"classes/NavigationModel.html":{},"interfaces/RenameFile.html":{}}}],["newname,oldname",{"_index":1198,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newnamefile(oldname",{"_index":1241,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newnamefolder(oldname",{"_index":1213,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newuser",{"_index":1319,"title":{"classes/NewUser.html":{}},"body":{"classes/NewUser.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["next",{"_index":455,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["next.handle(req",{"_index":1761,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["ng",{"_index":1849,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":491,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["nginit",{"_index":1244,"title":{},"body":{"classes/NavigationModel.html":{}}}],["ngmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":492,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["ngoninit",{"_index":289,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["ngxdatetimemodule",{"_index":273,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["ngxmatdatetimepickermodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmatmomentmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmattimepickermodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmomentmodule",{"_index":274,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["noconflict/ext",{"_index":551,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["noconflict/mode",{"_index":543,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["noconflict/theme",{"_index":546,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["nodejs",{"_index":1089,"title":{},"body":{"classes/NavigationModel.html":{}}}],["non",{"_index":1604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["none",{"_index":1464,"title":{},"body":{"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["none!important",{"_index":1465,"title":{},"body":{"components/ProfileComponent.html":{}}}],["note",{"_index":316,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["notsuccess",{"_index":940,"title":{},"body":{"components/LoginComponent.html":{}}}],["null",{"_index":368,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["number",{"_index":260,"title":{},"body":{"interfaces/Comp.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["object",{"_index":784,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(basiceditoroptions",{"_index":589,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["objects",{"_index":1099,"title":{},"body":{"classes/NavigationModel.html":{}}}],["observable",{"_index":684,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["obtained",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["occurred",{"_index":1134,"title":{},"body":{"classes/NavigationModel.html":{}}}],["ocde",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["oldname",{"_index":1193,"title":{},"body":{"classes/NavigationModel.html":{},"interfaces/RenameFile.html":{}}}],["ondestroy",{"_index":536,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["onfilelistener",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onfilelistener(event",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{}}}],["oninit",{"_index":281,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["online",{"_index":831,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["onsubmit",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["onupload",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{}}}],["operations",{"_index":1293,"title":{},"body":{"classes/NavigationModel.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["options",{"_index":837,"title":{},"body":{"components/HomeComponent.html":{}}}],["original",{"_index":1194,"title":{},"body":{"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["out",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingComponent.html":{},"injectables/LoginService.html":{},"index.html":{},"overview.html":{}}}],["out_tc",{"_index":735,"title":{},"body":{"interfaces/Contest.html":{}}}],["outbutton",{"_index":287,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["outfile",{"_index":369,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["output",{"_index":399,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"interfaces/RunOutput.html":{}}}],["outputready",{"_index":288,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["over",{"_index":1347,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["overview",{"_index":1876,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1811,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["page",{"_index":453,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["pages",{"_index":410,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["param",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["parametrized",{"_index":1357,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["params",{"_index":557,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["params.id",{"_index":559,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["part",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["partial",{"_index":579,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["participate",{"_index":441,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["parts",{"_index":1078,"title":{},"body":{"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["pass",{"_index":1737,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["passed",{"_index":482,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/TimerComponent.html":{}}}],["passurl",{"_index":662,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["password",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["password:new",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password:string",{"_index":1335,"title":{},"body":{"classes/NewUser.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{}}}],["past",{"_index":406,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["pastcompetition/:id",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pastcontest",{"_index":1351,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["pastcontest'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["pastcontest.component.html",{"_index":1353,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["pastcontest.component.scss",{"_index":1352,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["pastcontest/pastcontest.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pastcontestcomponent",{"_index":85,"title":{"components/PastcontestComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["pcomps",{"_index":415,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["performance",{"_index":443,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["performs",{"_index":885,"title":{},"body":{"components/LoadingComponent.html":{}}}],["pick",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["picker",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["place",{"_index":1042,"title":{},"body":{"injectables/LoginService.html":{}}}],["places",{"_index":1512,"title":{},"body":{"injectables/RegService.html":{}}}],["plain",{"_index":1645,"title":{},"body":{"components/TimerComponent.html":{}}}],["platform",{"_index":827,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["point",{"_index":1092,"title":{},"body":{"classes/NavigationModel.html":{}}}],["points",{"_index":483,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{}}}],["pop",{"_index":738,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["position",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["post",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["posturl",{"_index":663,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["present",{"_index":1738,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["presses",{"_index":303,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{}}}],["prevent",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TokenInterceptorService.html":{}}}],["prevents",{"_index":1363,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["preview",{"_index":1536,"title":{},"body":{"components/RegisterComponent.html":{}}}],["preview(files",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["private",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["problem",{"_index":258,"title":{},"body":{"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["problem_st",{"_index":366,"title":{},"body":{"components/CompCreateComponent.html":{},"interfaces/Contest.html":{}}}],["process",{"_index":457,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["prod",{"_index":1860,"title":{},"body":{"index.html":{}}}],["production",{"_index":1861,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":53,"title":{"interfaces/Profile.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompetitionComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["profile.component.html",{"_index":1379,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1378,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.service",{"_index":1398,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile",{"_index":1503,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/profile.component",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profilecomponent",{"_index":87,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilecomponent,canactivate",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profileservice",{"_index":1384,"title":{"injectables/ProfileService.html":{}},"body":{"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["programming",{"_index":826,"title":{},"body":{"components/HomeComponent.html":{}}}],["project",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["prompt",{"_index":451,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interfaces/User.html":{}}}],["protractor",{"_index":1867,"title":{},"body":{"index.html":{}}}],["provide",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":347,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["providedin",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["providers",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":407,"title":{},"body":{"components/CompDashboardComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["providing",{"_index":305,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoadingComponent.html":{}}}],["pts",{"_index":1417,"title":{},"body":{"components/ProfileComponent.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["publicly",{"_index":805,"title":{},"body":{"components/HomeComponent.html":{}}}],["python",{"_index":545,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["querystring",{"_index":1502,"title":{},"body":{"injectables/ProfileService.html":{}}}],["quite",{"_index":715,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["radius",{"_index":1446,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["raj",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{}}}],["raleway",{"_index":864,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["ranjan",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["rcomps",{"_index":416,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["reader",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reader.result",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{}}}],["readme",{"_index":1871,"title":{},"body":{"index.html":{}}}],["ready",{"_index":314,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["receivied.output",{"_index":1316,"title":{},"body":{"classes/NavigationModel.html":{}}}],["recieve",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{}}}],["recive",{"_index":1516,"title":{},"body":{"injectables/RegService.html":{}}}],["recursive",{"_index":1097,"title":{},"body":{"classes/NavigationModel.html":{}}}],["redirected",{"_index":452,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["redirectto:'home',pathmatch:'full",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducing",{"_index":462,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["refresh",{"_index":1687,"title":{},"body":{"components/TimerComponent.html":{}}}],["refreshes",{"_index":1640,"title":{},"body":{"components/TimerComponent.html":{}}}],["reg.service",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{}}}],["regcontest",{"_index":673,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["regcontest(formdata",{"_index":691,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["regform",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["register.component.html",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/newuser",{"_index":1515,"title":{},"body":{"injectables/RegService.html":{}}}],["register/register.component",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":89,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":1323,"title":{},"body":{"classes/NewUser.html":{},"components/RegisterComponent.html":{}}}],["registration",{"_index":1521,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regserv",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regservice",{"_index":112,"title":{"injectables/RegService.html":{}},"body":{"modules/AppModule.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["regservice,loginservice,authguard",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["relative",{"_index":1437,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["relevant",{"_index":306,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["reload",{"_index":1696,"title":{},"body":{"components/TimerComponent.html":{},"index.html":{}}}],["remaining",{"_index":1635,"title":{},"body":{"components/TimerComponent.html":{}}}],["remains",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":1302,"title":{},"body":{"classes/NavigationModel.html":{}}}],["rename",{"_index":1212,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamed",{"_index":1183,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamefile",{"_index":768,"title":{"interfaces/RenameFile.html":{}},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"interfaces/RenameFile.html":{},"coverage.html":{}}}],["renamefile(file",{"_index":1284,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamefile(input",{"_index":780,"title":{},"body":{"injectables/FileService.html":{}}}],["renamefolder(folder",{"_index":1287,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamelistfile(table",{"_index":1229,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamelistfolder(table",{"_index":1195,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renames",{"_index":1189,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renameurl",{"_index":763,"title":{},"body":{"injectables/FileService.html":{}}}],["renaming",{"_index":1103,"title":{},"body":{"classes/NavigationModel.html":{}}}],["render",{"_index":1108,"title":{},"body":{"classes/NavigationModel.html":{}}}],["rendered",{"_index":1310,"title":{},"body":{"classes/NavigationModel.html":{}}}],["rendering",{"_index":447,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["renders",{"_index":401,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["req",{"_index":1735,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["req.clone",{"_index":1757,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["request",{"_index":335,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["request.files['filename",{"_index":338,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["requests",{"_index":1360,"title":{},"body":{"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["require",{"_index":1809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":597,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["res.passed",{"_index":599,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["res.points",{"_index":601,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["res.url",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["res.userid",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{}}}],["res:any",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resources",{"_index":812,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["responds",{"_index":1309,"title":{},"body":{"classes/NavigationModel.html":{}}}],["response",{"_index":390,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["rest",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomeComponent.html":{}}}],["result",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["returns",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["rgba(0",{"_index":1433,"title":{},"body":{"components/ProfileComponent.html":{}}}],["rgba(52",{"_index":1607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["right",{"_index":1452,"title":{},"body":{"components/ProfileComponent.html":{}}}],["roboto",{"_index":1475,"title":{},"body":{"components/ProfileComponent.html":{}}}],["robustness",{"_index":844,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["root'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["route",{"_index":499,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["router",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["routermodule",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":192,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/PastcontestComponent.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ruby",{"_index":544,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["run",{"_index":647,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["run.service",{"_index":1069,"title":{},"body":{"classes/NavigationModel.html":{}}}],["run_input",{"_index":1071,"title":{},"body":{"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["run_output",{"_index":1632,"title":{},"body":{"injectables/RunService.html":{}}}],["runcode",{"_index":493,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["runfile",{"_index":494,"title":{"interfaces/RunFile.html":{}},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"interfaces/RunFile.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["runfile(infile",{"_index":1624,"title":{},"body":{"injectables/RunService.html":{}}}],["runinput",{"_index":1070,"title":{"interfaces/RunInput.html":{}},"body":{"classes/NavigationModel.html":{},"interfaces/RunInput.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["running",{"_index":405,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["runoutput",{"_index":1619,"title":{"interfaces/RunOutput.html":{}},"body":{"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["runscript",{"_index":1113,"title":{},"body":{"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["runscript(input",{"_index":1626,"title":{},"body":{"injectables/RunService.html":{}}}],["runservice",{"_index":1068,"title":{"injectables/RunService.html":{}},"body":{"classes/NavigationModel.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["rxjs",{"_index":538,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1714,"title":{},"body":{"components/TimerComponent.html":{}}}],["sahasra",{"_index":859,"title":{},"body":{"components/HomeComponent.html":{}}}],["same",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/NavigationModel.html":{}}}],["sans",{"_index":865,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["save",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["savefile",{"_index":769,"title":{},"body":{"injectables/FileService.html":{}}}],["savefile(filename",{"_index":1232,"title":{},"body":{"classes/NavigationModel.html":{}}}],["savefile(input",{"_index":782,"title":{},"body":{"injectables/FileService.html":{}}}],["savefolder(foldername",{"_index":1202,"title":{},"body":{"classes/NavigationModel.html":{}}}],["scaffolding",{"_index":1855,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":269,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["schools",{"_index":1488,"title":{},"body":{"components/ProfileComponent.html":{}}}],["screen",{"_index":889,"title":{},"body":{"components/LoadingComponent.html":{},"components/PastcontestComponent.html":{}}}],["script",{"_index":554,"title":{},"body":{"components/CompetitionComponent.html":{},"interfaces/File.html":{},"classes/NavigationModel.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{}}}],["second",{"_index":1708,"title":{},"body":{"components/TimerComponent.html":{}}}],["seconds",{"_index":1636,"title":{},"body":{"components/TimerComponent.html":{}}}],["secondsinaminute",{"_index":1658,"title":{},"body":{"components/TimerComponent.html":{}}}],["secondstodday",{"_index":1659,"title":{},"body":{"components/TimerComponent.html":{}}}],["see",{"_index":442,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["select",{"_index":645,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["self",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["send",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{}}}],["sends",{"_index":310,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["sent",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{}}}],["serif",{"_index":866,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["serve",{"_index":1520,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["server",{"_index":311,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["service",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["services",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProfileComponent.html":{}}}],["session",{"_index":625,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["set",{"_index":1747,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["setfile(file",{"_index":1268,"title":{},"body":{"classes/NavigationModel.html":{}}}],["setfolder(folder",{"_index":1271,"title":{},"body":{"classes/NavigationModel.html":{}}}],["setheaders",{"_index":1758,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["shadow",{"_index":1430,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["sibasis",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{}}}],["side",{"_index":842,"title":{},"body":{"components/HomeComponent.html":{}}}],["simple",{"_index":343,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["site",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/LoginService.html":{}}}],["sites",{"_index":824,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{},"components/TimerComponent.html":{}}}],["sizing",{"_index":1473,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sm",{"_index":1451,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sm>.col",{"_index":1454,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sm>[class*=col",{"_index":1455,"title":{},"body":{"components/ProfileComponent.html":{}}}],["solid",{"_index":653,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["solve",{"_index":644,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["solved/unsolved",{"_index":1350,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"index.html":{}}}],["spacing",{"_index":1718,"title":{},"body":{"components/TimerComponent.html":{}}}],["span",{"_index":1719,"title":{},"body":{"components/TimerComponent.html":{}}}],["spec\\.ts",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specification",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["specifying",{"_index":1638,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:13",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:25",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/comp",{"_index":261,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"coverage.html":{}}}],["src/app/comp.ts",{"_index":255,"title":{},"body":{"interfaces/Comp.html":{},"coverage.html":{}}}],["src/app/competition.service.ts",{"_index":655,"title":{},"body":{"injectables/CompetitionService.html":{},"coverage.html":{}}}],["src/app/competition.service.ts:17",{"_index":711,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:18",{"_index":702,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:19",{"_index":706,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:20",{"_index":700,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:21",{"_index":704,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:22",{"_index":717,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:23",{"_index":719,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:24",{"_index":698,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:25",{"_index":708,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:26",{"_index":678,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:30",{"_index":687,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:34",{"_index":688,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:38",{"_index":685,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:42",{"_index":692,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:46",{"_index":683,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:50",{"_index":694,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:54",{"_index":696,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:58",{"_index":686,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:62",{"_index":690,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:66",{"_index":681,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition/competition.component.ts",{"_index":444,"title":{},"body":{"components/CompetitionComponent.html":{},"coverage.html":{}}}],["src/app/competition/competition.component.ts:116",{"_index":505,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:120",{"_index":504,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:129",{"_index":503,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:138",{"_index":515,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:146",{"_index":508,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:167",{"_index":502,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:174",{"_index":511,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:178",{"_index":510,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:187",{"_index":513,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:197",{"_index":509,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:217",{"_index":507,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:40",{"_index":521,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:42",{"_index":525,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:43",{"_index":530,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:45",{"_index":531,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:47",{"_index":517,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:48",{"_index":522,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:50",{"_index":528,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:51",{"_index":529,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:53",{"_index":518,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:54",{"_index":535,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:56",{"_index":524,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:58",{"_index":534,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:59",{"_index":519,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:61",{"_index":533,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:62",{"_index":527,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:64",{"_index":501,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:67",{"_index":523,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:85",{"_index":506,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/contest.ts",{"_index":733,"title":{},"body":{"interfaces/Contest.html":{},"coverage.html":{}}}],["src/app/editor",{"_index":736,"title":{},"body":{"components/EditorDialogComponent.html":{},"coverage.html":{}}}],["src/app/editor/editor.component.ts",{"_index":1060,"title":{},"body":{"classes/NavigationModel.html":{},"coverage.html":{}}}],["src/app/editor/editor.component.ts:736",{"_index":1066,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:737",{"_index":1067,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:738",{"_index":1065,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:739",{"_index":1064,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:740",{"_index":1063,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/file.service.ts",{"_index":761,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/app/file.service.ts:17",{"_index":790,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:18",{"_index":770,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:22",{"_index":788,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:26",{"_index":783,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:31",{"_index":779,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:37",{"_index":777,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:42",{"_index":773,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:48",{"_index":775,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:54",{"_index":781,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.ts",{"_index":758,"title":{},"body":{"interfaces/File.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":802,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:14",{"_index":818,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:18",{"_index":819,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/loading/loading.component.ts",{"_index":884,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/loading/loading.component.ts:13",{"_index":892,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/loading/loading.component.ts:16",{"_index":893,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/login.service.ts",{"_index":1002,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login.service.ts:15",{"_index":1038,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:16",{"_index":1012,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:25",{"_index":1036,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:32",{"_index":1032,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:39",{"_index":1029,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:45",{"_index":1021,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:51",{"_index":1024,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:61",{"_index":1018,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:67",{"_index":1019,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:73",{"_index":1016,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:79",{"_index":1020,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login/login.component.ts",{"_index":934,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:20",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/user.ts",{"_index":1762,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/pastcontest/pastcontest.component.ts",{"_index":1345,"title":{},"body":{"components/PastcontestComponent.html":{},"coverage.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:19",{"_index":1367,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:20",{"_index":1370,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:22",{"_index":1368,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:23",{"_index":1369,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:25",{"_index":1371,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:26",{"_index":1365,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:28",{"_index":1366,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:29",{"_index":1356,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:50",{"_index":1361,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:74",{"_index":1358,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/profile.service.ts",{"_index":1490,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/profile.service.ts:14",{"_index":1498,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:15",{"_index":1493,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:19",{"_index":1500,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:26",{"_index":1494,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:33",{"_index":1496,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1376,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:18",{"_index":1396,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:19",{"_index":1397,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:20",{"_index":1393,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:21",{"_index":1395,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:22",{"_index":1391,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:23",{"_index":1390,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:24",{"_index":1394,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:25",{"_index":1392,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:26",{"_index":1385,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:42",{"_index":1386,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.ts",{"_index":1374,"title":{},"body":{"interfaces/Profile.html":{},"coverage.html":{}}}],["src/app/reg.service.ts",{"_index":1507,"title":{},"body":{"injectables/RegService.html":{},"coverage.html":{}}}],["src/app/reg.service.ts:13",{"_index":1509,"title":{},"body":{"injectables/RegService.html":{}}}],["src/app/reg.service.ts:16",{"_index":1513,"title":{},"body":{"injectables/RegService.html":{}}}],["src/app/reg.service.ts:22",{"_index":1511,"title":{},"body":{"injectables/RegService.html":{}}}],["src/app/register/newuser.ts",{"_index":1320,"title":{},"body":{"classes/NewUser.html":{},"coverage.html":{}}}],["src/app/register/newuser.ts:10",{"_index":1328,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:5",{"_index":1333,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:6",{"_index":1329,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:7",{"_index":1332,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:8",{"_index":1331,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:9",{"_index":1330,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/register.component.ts",{"_index":1519,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:105",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:127",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:32",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:46",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:50",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:53",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:54",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:55",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:60",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:68",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:92",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/renamefile.ts",{"_index":1616,"title":{},"body":{"interfaces/RenameFile.html":{},"coverage.html":{}}}],["src/app/run.service.ts",{"_index":1622,"title":{},"body":{"injectables/RunService.html":{},"coverage.html":{}}}],["src/app/run.service.ts:17",{"_index":1623,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run.service.ts:21",{"_index":1628,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run.service.ts:25",{"_index":1627,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run.service.ts:31",{"_index":1625,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run_file.ts",{"_index":1617,"title":{},"body":{"interfaces/RunFile.html":{},"coverage.html":{}}}],["src/app/run_input.ts",{"_index":1618,"title":{},"body":{"interfaces/RunInput.html":{},"coverage.html":{}}}],["src/app/run_output.ts",{"_index":1620,"title":{},"body":{"interfaces/RunOutput.html":{},"coverage.html":{}}}],["src/app/timer/timer.component.ts",{"_index":1634,"title":{},"body":{"components/TimerComponent.html":{},"coverage.html":{}}}],["src/app/timer/timer.component.ts:21",{"_index":1667,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:22",{"_index":1668,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:24",{"_index":1675,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:25",{"_index":1666,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:35",{"_index":1680,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:36",{"_index":1677,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:37",{"_index":1682,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:38",{"_index":1684,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:40",{"_index":1686,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:41",{"_index":1685,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:42",{"_index":1683,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:43",{"_index":1678,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:44",{"_index":1674,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:47",{"_index":1671,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:62",{"_index":1670,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:69",{"_index":1673,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:78",{"_index":1672,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/token",{"_index":1722,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":329,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["start",{"_index":370,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{}}}],["start\"/\"end",{"_index":1639,"title":{},"body":{"components/TimerComponent.html":{}}}],["started",{"_index":1844,"title":{"index.html":{}},"body":{}}],["startexecution",{"_index":484,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["starting",{"_index":1091,"title":{},"body":{"classes/NavigationModel.html":{}}}],["starttime",{"_index":259,"title":{},"body":{"interfaces/Comp.html":{}}}],["statement",{"_index":321,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["statements",{"_index":470,"title":{},"body":{"components/CompetitionComponent.html":{},"coverage.html":{}}}],["static",{"_index":354,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["status",{"_index":1349,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["std",{"_index":1119,"title":{},"body":{"classes/NavigationModel.html":{}}}],["still",{"_index":465,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["storage",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["store",{"_index":330,"title":{},"body":{"components/CompCreateComponent.html":{},"interfaces/Profile.html":{},"components/RegisterComponent.html":{}}}],["stored",{"_index":1017,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["stores",{"_index":1322,"title":{},"body":{"classes/NewUser.html":{}}}],["storing",{"_index":461,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{}}}],["string",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comp.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interfaces/User.html":{}}}],["stringify",{"_index":1501,"title":{},"body":{"injectables/ProfileService.html":{}}}],["strings",{"_index":1152,"title":{},"body":{"classes/NavigationModel.html":{}}}],["structure",{"_index":1096,"title":{},"body":{"classes/NavigationModel.html":{}}}],["struture",{"_index":1105,"title":{},"body":{"classes/NavigationModel.html":{}}}],["studied",{"_index":1077,"title":{},"body":{"classes/NavigationModel.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["styling",{"_index":1486,"title":{},"body":{"components/ProfileComponent.html":{}}}],["subdirectory",{"_index":1153,"title":{},"body":{"classes/NavigationModel.html":{}}}],["submit",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitcode",{"_index":674,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitcode(id",{"_index":693,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitcode(id,code",{"_index":726,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitcodeurl",{"_index":664,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfile",{"_index":675,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfile(id",{"_index":695,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfile(id,code",{"_index":728,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfileurl",{"_index":665,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitform",{"_index":290,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["subscribe",{"_index":617,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(data",{"_index":1401,"title":{},"body":{"components/ProfileComponent.html":{}}}],["subscribe(receivied",{"_index":1318,"title":{},"body":{"classes/NavigationModel.html":{}}}],["subscribe(x",{"_index":564,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["subscription",{"_index":448,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["success",{"_index":1621,"title":{},"body":{"interfaces/RunOutput.html":{}}}],["successfully",{"_index":1602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["suitable",{"_index":809,"title":{},"body":{"components/HomeComponent.html":{}}}],["supply",{"_index":266,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["support",{"_index":834,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["supported",{"_index":830,"title":{},"body":{"components/HomeComponent.html":{}}}],["supports",{"_index":1084,"title":{},"body":{"classes/NavigationModel.html":{}}}],["svg",{"_index":1872,"title":{},"body":{"modules.html":{}}}],["synced",{"_index":835,"title":{},"body":{"components/HomeComponent.html":{}}}],["system",{"_index":935,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{}}}],["table",{"_index":1150,"title":{},"body":{"classes/NavigationModel.html":{},"coverage.html":{}}}],["table.filter(f",{"_index":1171,"title":{},"body":{"classes/NavigationModel.html":{}}}],["table.push(item",{"_index":1178,"title":{},"body":{"classes/NavigationModel.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":610,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{}}}],["takes",{"_index":1034,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["tamper",{"_index":1750,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["task",{"_index":887,"title":{},"body":{"components/LoadingComponent.html":{}}}],["team",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["temp",{"_index":1140,"title":{},"body":{"classes/NavigationModel.html":{}}}],["temp.push(item",{"_index":1144,"title":{},"body":{"classes/NavigationModel.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["templates",{"_index":1489,"title":{},"body":{"components/ProfileComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["test",{"_index":1864,"title":{},"body":{"index.html":{}}}],["testcase",{"_index":267,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["tests",{"_index":1863,"title":{},"body":{"index.html":{}}}],["text",{"_index":1425,"title":{},"body":{"components/ProfileComponent.html":{}}}],["textarea",{"_index":1311,"title":{},"body":{"classes/NavigationModel.html":{}}}],["theme",{"_index":485,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this._router.navigate(['/dashboard",{"_index":1697,"title":{},"body":{"components/TimerComponent.html":{}}}],["this._router.navigate(['/home",{"_index":1054,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._router.navigate(['/login",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["this._router.navigate(['/profile",{"_index":611,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{}}}],["this._router.onsameurlnavigation",{"_index":1695,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.aceeditor",{"_index":590,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.aceeditor.getsession",{"_index":626,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.aceeditor.session.getvalue",{"_index":613,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setmode('ace/mode",{"_index":594,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.aceeditor.session.setmode('ace/mode/'+this.lang",{"_index":1116,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setvalue",{"_index":628,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setvalue(file.file.script",{"_index":1270,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setvalue(this.filestring",{"_index":1304,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.aceeditor.settheme('ace/theme",{"_index":592,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.aceeditor.settheme('ace/theme/'+this.theme",{"_index":1115,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.allocatetimeunits(this.timedifference",{"_index":1698,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.allowed",{"_index":603,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.body",{"_index":568,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.checkrunning",{"_index":570,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.code",{"_index":612,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.cpservice.contestpassed(this.id).subscribe",{"_index":596,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.cpservice.fetchcompetitionbyid(this.id).subscribe",{"_index":566,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.cpservice.fetchpastcompetetions().subscribe",{"_index":434,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.cpservice.fetchpoints().subscribe",{"_index":1416,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.cpservice.fetchrunningcompetetions().subscribe",{"_index":429,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.cpservice.fetchupcomingcompetetions().subscribe",{"_index":431,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.cpservice.iscontestrunning(this.id).subscribe",{"_index":602,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.cpservice.regcontest(formdata).subscribe",{"_index":389,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.cpservice.submitcode",{"_index":614,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.cpservice.submitfile",{"_index":639,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.currentfile",{"_index":1233,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.date_joined",{"_index":1408,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.daystodday",{"_index":1707,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.ddate",{"_index":1710,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.ddate.gettime",{"_index":1690,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.deletefilestruc(item.children",{"_index":1221,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletefilestruc(this.list,dirs,file.file",{"_index":1276,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletefolderstruc(item.children",{"_index":1174,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletefolderstruc(this.list,dirs",{"_index":1281,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletestructure(item.children",{"_index":1168,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletestructure(this.list",{"_index":1261,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk",{"_index":1127,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk).subscribe",{"_index":1237,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk).subscribe(err",{"_index":1278,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk.lastindexof",{"_index":1263,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk.split",{"_index":1209,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk.substring(0,loc",{"_index":1265,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfile(item.children",{"_index":1228,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfile(this.list",{"_index":1238,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfolder(item.children",{"_index":1179,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfolder(this.list",{"_index":1211,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editorbeautify",{"_index":576,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.editorbeautify.beautify(session",{"_index":627,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.email",{"_index":1406,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.email=email",{"_index":1341,"title":{},"body":{"classes/NewUser.html":{}}}],["this.errormessage",{"_index":1597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.fb.group",{"_index":365,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.files",{"_index":1146,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.files.filter(f",{"_index":1253,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.files=files",{"_index":1252,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.deletefile(file.title,this.uservice.getuser",{"_index":1277,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.deletefolder(this.uservice.getuser",{"_index":1282,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.getfiles(this.uservice.getuser(),this.dirk).subscribe",{"_index":1251,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.renamefile",{"_index":1214,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.savefile",{"_index":1203,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.filestring",{"_index":1300,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.first_name",{"_index":1412,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.first_name=first_name",{"_index":1343,"title":{},"body":{"classes/NewUser.html":{}}}],["this.fixurl(item.children",{"_index":1187,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fixurl(item.children,item.url",{"_index":1196,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.folders",{"_index":1142,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.form",{"_index":364,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.get('infile').setvalue(file",{"_index":380,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.form.get('input').updatevalueandvalidity",{"_index":1307,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.form.get('language').updatevalueandvalidity",{"_index":630,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.get('language').value",{"_index":638,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.form.get('outfile').setvalue(file",{"_index":381,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.form.get('script').updatevalueandvalidity",{"_index":633,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.get('script').value",{"_index":636,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.form.patchvalue",{"_index":629,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.setvalue",{"_index":394,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.getfiles(false,false",{"_index":1114,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.getfiles(false,true",{"_index":1291,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.getfiles(true,false",{"_index":1274,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.getpoints",{"_index":571,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.gettimedifference",{"_index":1709,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.gotcontest",{"_index":1372,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["this.gotpoints",{"_index":1373,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["this.hoursinaday",{"_index":1706,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.hourstodday",{"_index":1705,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.http.delete(url",{"_index":798,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.get(`${this.getpointsurl}/${localstorage.getitem('username",{"_index":730,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(`${this.geturl}/${index",{"_index":725,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(`${this.isrunningurl}/${id",{"_index":731,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(`${this.passurl}/${id}/${localstorage.getitem('username",{"_index":732,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(this.getpurl",{"_index":723,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(this.getrurl",{"_index":721,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(this.getuurl",{"_index":722,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(url",{"_index":796,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.post('http://127.0.0.1:8000/api/image',fd",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.http.post(`${this.submitcodeurl}/${id}`,code",{"_index":727,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.post(`${this.submitfileurl}/${id}`,code",{"_index":729,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.post(this.firstry",{"_index":1045,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post(this.geturl",{"_index":1504,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.http.post(this.getuserurl",{"_index":1506,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.http.post(this.posturl",{"_index":1048,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegService.html":{}}}],["this.http.post(this.posturl,formdata",{"_index":724,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.post(url,infile,this.httpoptions",{"_index":1633,"title":{},"body":{"injectables/RunService.html":{}}}],["this.http.post(url,input,this.httpoptions",{"_index":794,"title":{},"body":{"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["this.httpoptions",{"_index":1046,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{}}}],["this.id",{"_index":558,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.image",{"_index":1402,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.image=image",{"_index":1339,"title":{},"body":{"classes/NewUser.html":{}}}],["this.imgerr",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.imgerr=\"invalid",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.imgurl",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.inbutton.nativeelement.value",{"_index":395,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.injector.get(loginservice",{"_index":1746,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.input",{"_index":1306,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.inputready",{"_index":376,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.insert(this.dirk",{"_index":1267,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.insert(url",{"_index":1156,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.insertstructure(item.children",{"_index":1161,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.insertstructure(this.list",{"_index":1257,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.is_staff",{"_index":1410,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.lang",{"_index":595,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.last_name",{"_index":1414,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.last_name=last_name",{"_index":1344,"title":{},"body":{"classes/NewUser.html":{}}}],["this.link",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.list",{"_index":1176,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.load",{"_index":433,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.localcall",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password').value",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username').value",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logserv.trytoken(this.myuser",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.millisecondsinasecond",{"_index":1701,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.minutesinanhour",{"_index":1704,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.minutestodday",{"_index":1703,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.mynewuser",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.myuser",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.newnamefile(oldname,result,url",{"_index":1131,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.newnamefolder(oldname,result,url",{"_index":1132,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.notsuccess",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onupload",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.opendialog(\"file\",\"create",{"_index":1235,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.opendialog(\"file\",\"rename",{"_index":1285,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.opendialog(\"folder\",\"rename",{"_index":1288,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.outbutton.nativeelement.value",{"_index":396,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.output",{"_index":1315,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.outputready",{"_index":377,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.passed",{"_index":598,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.password=password",{"_index":1342,"title":{},"body":{"classes/NewUser.html":{}}}],["this.pcomps",{"_index":435,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.points",{"_index":600,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.points=pts",{"_index":1418,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.posturl}/${username}/${dirk",{"_index":793,"title":{},"body":{"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["this.posturl}/${username}/${dirk}/${id",{"_index":797,"title":{},"body":{"injectables/FileService.html":{}}}],["this.profileservice.getuserdetail(this.user",{"_index":1400,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.rcomps",{"_index":430,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.regform.get('email').value",{"_index":1592,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('first_name').value",{"_index":1594,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('last_name').value",{"_index":1595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('password').value",{"_index":1593,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('username').value",{"_index":1591,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regserv.tryreg(this.mynewuser",{"_index":1596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.renamelistfile(item.children",{"_index":1231,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renamelistfile(this.list",{"_index":1242,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renamelistfolder(item.children",{"_index":1197,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renamelistfolder(this.list",{"_index":1217,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renameurl}/${username}/${dirk",{"_index":800,"title":{},"body":{"injectables/FileService.html":{}}}],["this.route.params.subscribe",{"_index":556,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.runscript.runscript(send,this.uservice.getuser",{"_index":1317,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.runscript.runscript(send,this.uservice.getuser(),this.currentfile.url).subscribe(receivied",{"_index":1313,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.savefile(file",{"_index":1128,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.savefolder(folder",{"_index":1129,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.secondsinaminute",{"_index":1702,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.secondstodday",{"_index":1699,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.startexecution",{"_index":560,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.subscription",{"_index":562,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":640,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["this.theme",{"_index":593,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.timedifference",{"_index":1689,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.title",{"_index":567,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.ucomps",{"_index":432,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.user",{"_index":1399,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet",{"_index":1404,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.date_joined",{"_index":1409,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.email",{"_index":1407,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.first_name",{"_index":1413,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.is_staff",{"_index":1411,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.last_name",{"_index":1415,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.username=username",{"_index":1340,"title":{},"body":{"classes/NewUser.html":{}}}],["this.uservice.getuser",{"_index":616,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["this.validate",{"_index":565,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.visible=false",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.working",{"_index":604,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["three",{"_index":402,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["through",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{}}}],["throughout",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["till",{"_index":346,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["time",{"_index":278,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/TimerComponent.html":{}}}],["timedifference",{"_index":1660,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["timer.component.html",{"_index":1650,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.scss",{"_index":1649,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer/timer.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["timercomponent",{"_index":91,"title":{"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["times",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"interfaces/Contest.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{}}}],["token",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["tokeninterceptor",{"_index":1743,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["tokeninterceptorservice",{"_index":113,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["tokens",{"_index":850,"title":{},"body":{"components/HomeComponent.html":{}}}],["top",{"_index":651,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["transform",{"_index":902,"title":{},"body":{"components/LoadingComponent.html":{}}}],["transition",{"_index":908,"title":{},"body":{"components/LoadingComponent.html":{},"components/ProfileComponent.html":{}}}],["translatex",{"_index":903,"title":{},"body":{"components/LoadingComponent.html":{}}}],["trash.trash",{"_index":1204,"title":{},"body":{"classes/NavigationModel.html":{}}}],["trash.trash\").map(f=>f.script",{"_index":1255,"title":{},"body":{"classes/NavigationModel.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["true",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["trying",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["trylogin",{"_index":1010,"title":{},"body":{"injectables/LoginService.html":{}}}],["trylogin(user",{"_index":1028,"title":{},"body":{"injectables/LoginService.html":{}}}],["trylogin(user:user):observable",{"_index":1047,"title":{},"body":{"injectables/LoginService.html":{}}}],["tryreg",{"_index":1508,"title":{},"body":{"injectables/RegService.html":{}}}],["tryreg(user",{"_index":1510,"title":{},"body":{"injectables/RegService.html":{}}}],["tryreg(user:newuser):observable",{"_index":1518,"title":{},"body":{"injectables/RegService.html":{}}}],["trytoken",{"_index":1011,"title":{},"body":{"injectables/LoginService.html":{}}}],["trytoken(user",{"_index":1031,"title":{},"body":{"injectables/LoginService.html":{}}}],["trytoken(user:user):observable",{"_index":1044,"title":{},"body":{"injectables/LoginService.html":{}}}],["tsd",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1014,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type':'application/json",{"_index":787,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["types",{"_index":403,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["types/jwt",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1294,"title":{},"body":{"classes/NavigationModel.html":{}}}],["ucomps",{"_index":417,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["unique",{"_index":1754,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["unit",{"_index":1862,"title":{},"body":{"index.html":{}}}],["until",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{}}}],["up",{"_index":739,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["upcoming",{"_index":325,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{}}}],["update",{"_index":454,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["updatelang",{"_index":495,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["updates",{"_index":1191,"title":{},"body":{"classes/NavigationModel.html":{}}}],["updatetheme",{"_index":496,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["upload",{"_index":1296,"title":{},"body":{"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["uploaded",{"_index":1601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["uploadinput",{"_index":291,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploadinput(files",{"_index":326,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploadoutput",{"_index":292,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploadoutput(files",{"_index":340,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploads",{"_index":1095,"title":{},"body":{"classes/NavigationModel.html":{}}}],["uploadsource",{"_index":497,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["uploadsource(event",{"_index":512,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["upoads",{"_index":334,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["url",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["url(\"/back",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{}}}],["url,this.uservice.getuser()).subscribe",{"_index":1215,"title":{},"body":{"classes/NavigationModel.html":{}}}],["url.split",{"_index":1216,"title":{},"body":{"classes/NavigationModel.html":{}}}],["use",{"_index":317,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["useclass",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["useful",{"_index":823,"title":{},"body":{"components/HomeComponent.html":{}}}],["user",{"_index":226,"title":{"interfaces/User.html":{}},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user_fk",{"_index":1375,"title":{},"body":{"interfaces/Profile.html":{}}}],["userdet",{"_index":1382,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userid",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["userimage",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["username",{"_index":615,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"injectables/RunService.html":{},"interfaces/User.html":{}}}],["username/password",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["username:new",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["username:string",{"_index":799,"title":{},"body":{"injectables/FileService.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/RunService.html":{},"interfaces/User.html":{}}}],["users",{"_index":1389,"title":{},"body":{"components/ProfileComponent.html":{}}}],["users.we",{"_index":810,"title":{},"body":{"components/HomeComponent.html":{}}}],["uservice",{"_index":498,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["uses",{"_index":271,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{}}}],["using",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["val",{"_index":1145,"title":{},"body":{"classes/NavigationModel.html":{}}}],["val.filename",{"_index":1147,"title":{},"body":{"classes/NavigationModel.html":{}}}],["validate",{"_index":293,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/RegisterComponent.html":{}}}],["validates",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1181,"title":{},"body":{"classes/NavigationModel.html":{}}}],["var",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["variable",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1763,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1041,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["version",{"_index":1847,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["via",{"_index":337,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"index.html":{}}}],["view",{"_index":1080,"title":{},"body":{"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{}}}],["viewchild",{"_index":359,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["viewchild('codeeditor",{"_index":520,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["viewchild('inacceptor",{"_index":353,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewchild('inacceptor',{static",{"_index":362,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewchild('outacceptor",{"_index":357,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewchild('outacceptor',{static",{"_index":363,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewed",{"_index":1247,"title":{},"body":{"classes/NavigationModel.html":{}}}],["visible",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{}}}],["visit",{"_index":436,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["void",{"_index":300,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["w3",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["way",{"_index":1297,"title":{},"body":{"classes/NavigationModel.html":{}}}],["webkit",{"_index":901,"title":{},"body":{"components/LoadingComponent.html":{}}}],["website",{"_index":804,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["weight",{"_index":1476,"title":{},"body":{"components/ProfileComponent.html":{}}}],["welcome",{"_index":820,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["went",{"_index":620,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["whether",{"_index":1022,"title":{},"body":{"injectables/LoginService.html":{}}}],["while(!this.startexecution",{"_index":561,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["whole",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["width",{"_index":895,"title":{},"body":{"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["width:30em",{"_index":1484,"title":{},"body":{"components/ProfileComponent.html":{}}}],["window",{"_index":740,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["word",{"_index":1441,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["working",{"_index":486,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["workspaces",{"_index":846,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrap",{"_index":1442,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["wresslemaniacs",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["wressler",{"_index":1420,"title":{},"body":{"components/ProfileComponent.html":{}}}],["wresslers",{"_index":821,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrong",{"_index":621,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["you're",{"_index":608,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["yourself",{"_index":1598,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _loginserv\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_loginserv: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loginserv\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _loginserv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ocde'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                        Title remains same throughout the site \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LoginService } from './login.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n/**\n * The root component of the project which has all the other components as a part of it\n */\nexport class AppComponent {\n  /**Title remains same throughout the site */\n  title = 'ocde';\n\n  constructor(public _loginserv:LoginService){}\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n      \n        Home\n      \n      \n        Profile\n      \n    \n    \n        Login\n        Register\n        Logout        \n    \n  \n    \n -->\n\n              \n\n\n\n    Made with  by Team WreSSLemaniacs.      \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Home                    Profile                      Login        Register        Logout                   -->                  Made with  by Team WreSSLemaniacs.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompCreateComponent\n\nCompCreateComponent\n\nAppModule -->\n\nCompCreateComponent->AppModule\n\n\n\n\n\nCompDashboardComponent\n\nCompDashboardComponent\n\nAppModule -->\n\nCompDashboardComponent->AppModule\n\n\n\n\n\nCompetitionComponent\n\nCompetitionComponent\n\nAppModule -->\n\nCompetitionComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nEditorDialogComponent\n\nEditorDialogComponent\n\nAppModule -->\n\nEditorDialogComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPastcontestComponent\n\nPastcontestComponent\n\nAppModule -->\n\nPastcontestComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nRegService\n\nRegService\n\nAppModule -->\n\nRegService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            All the modules that were required for the whole site are declared here\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CompCreateComponent\n                        \n                        \n                            CompDashboardComponent\n                        \n                        \n                            CompetitionComponent\n                        \n                        \n                            EditorComponent\n                        \n                        \n                            EditorDialogComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PastcontestComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TimerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EditorDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                        \n                            RegService\n                        \n                        \n                            TokenInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegService } from './reg.service';\nimport { LoginService } from './login.service';\nimport { AuthGuard } from './auth.guard';\nimport { EditorComponent } from './editor/editor.component';\nimport { EditorDialogComponent } from './editor-dialog/editor-dialog.component';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { CompDashboardComponent } from './comp-dashboard/comp-dashboard.component';\nimport { CompCreateComponent } from './comp-create/comp-create.component';\nimport { CompetitionComponent } from './competition/competition.component';\nimport { NgxMatDatetimePickerModule, NgxMatTimepickerModule } from '@angular-material-components/datetime-picker';\nimport { NgxMatMomentModule } from \"@angular-material-components/moment-adapter\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { TimerComponent } from './timer/timer.component';\nimport { PastcontestComponent } from './pastcontest/pastcontest.component';\nimport { LoadingComponent } from './loading/loading.component';\n/**\n * All the modules that were required for the whole site are declared here\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    HomeComponent,\n    EditorComponent,\n    EditorDialogComponent,\n    CompDashboardComponent,\n    CompCreateComponent,\n    CompetitionComponent,\n    TimerComponent,\n    PastcontestComponent,\n    LoadingComponent\n  ],\n  entryComponents: [EditorDialogComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatMomentModule,\n    MatDatepickerModule\n  ],\n  providers: [RegService,LoginService,AuthGuard,\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component'\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AuthGuard } from './auth.guard';\nimport { EditorComponent } from './editor/editor.component';\nimport { CompCreateComponent } from './comp-create/comp-create.component';\nimport { CompDashboardComponent } from \"./comp-dashboard/comp-dashboard.component\";\nimport { CompetitionComponent } from \"./competition/competition.component\";\nimport { PastcontestComponent } from \"./pastcontest/pastcontest.component\";\n\n/**\n * Specification of all the routes that are used by the site. All the routes are self-explanatory from their names\n */\nconst routes: Routes = [\n  { path: 'login',component:LoginComponent },\n  { path: 'register', component: RegisterComponent},\n  { path: 'home', component: HomeComponent },\n  { path: 'profile', component: ProfileComponent,canActivate:[ AuthGuard ]},\n  { path: 'editor', component: EditorComponent, canActivate:[ AuthGuard ]},\n  { path: 'create', component: CompCreateComponent, canActivate:[ AuthGuard ] },\n  { path: 'dashboard', component: CompDashboardComponent, canActivate:[ AuthGuard ] },\n  { path: 'competition/:id', component: CompetitionComponent, canActivate:[ AuthGuard ] },\n  { path: 'pastcompetition/:id', component: PastcontestComponent, canActivate:[ AuthGuard ] },\n  { path: '**', redirectTo:'home',pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [BrowserModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_login: LoginService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor instantiates required services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _login\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To call the functions of login service class\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To call the functions of router class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:25\n                \n            \n\n\n            \n                \n                    The user can activate the component url only if this function returns True, which is determined using a function from loginservice.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * An essential class that implements CanActivate from router module.\n * This class been used to prevent the acess of the rest of the site to the user until the user is logged in.\n */\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor instantiates required services\n   * @param _login To call the functions of login service class\n   * @param _router To call the functions of router class\n   */\n  constructor(private _login:LoginService, private _router:Router){}\n\n  /**\n   * The user can activate the component url only if this function returns True, which is determined using a function from loginservice.\n   */\n  canActivate():boolean{\n    if(this._login.loggedIn()){\n      return true\n    }\n    else{\n      this._router.navigate(['/login'])\n      return false\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comp.html":{"url":"interfaces/Comp.html","title":"interface - Comp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/comp.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endtime\n                                \n                                \n                                        id\n                                \n                                \n                                        problem\n                                \n                                \n                                        starttime\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endtime\n                                    \n                                \n                                \n                                    \n                                        endtime:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        problem\n                                    \n                                \n                                \n                                    \n                                        problem:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starttime\n                                    \n                                \n                                \n                                    \n                                        starttime:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Comp {\n    title : String,\n    problem : String,\n    id : number,\n    starttime,\n    endtime\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompCreateComponent.html":{"url":"components/CompCreateComponent.html","title":"component - CompCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comp-create/comp-create.component.ts\n\n\n    \n        Description\n    \n    \n        This component is essentially a form. \nIt lets you supply a problem and a testcase along with a schedule of your contest.\nIt uses Angular's NgxDateTimeModule and NgxMomentModule which uses Moment.js to accept Date and Time accurate to the minute.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comp-create\n            \n\n            \n                styleUrls\n                ./comp-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comp-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                inbutton\n                            \n                            \n                                inputReady\n                            \n                            \n                                outbutton\n                            \n                            \n                                outputReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                uploadInput\n                            \n                            \n                                uploadOutput\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, cpservice: CompetitionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comp-create/comp-create.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitForm\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:87\n                \n            \n\n\n            \n                \n                    The submitForm function is called when a user presses the Create button after providing the relevant information.\nThis button accumulates all the information into a FormData component and sends it to the server.\nAlongside, it clears the form so that you can be ready to create another contest.\nNote : Use the first 100 or so characters of your problem statement to generate interest. These are displayed when your problem is upcoming!\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadInput\n                        \n                        \n                    \n                \n            \n            \n                \nuploadInput(files)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:58\n                \n            \n\n\n            \n                \n                    The following are standard function to store File type data in a form to facilitate easy upoads\nIn a request, the file is accesible via request.FILES['filename']\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadOutput\n                        \n                        \n                    \n                \n            \n            \n                \nuploadOutput(files)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:44\n                \n            \n\n\n            \n                \n                    A simple boolean function which keeps the Create button disabled till all the relevant information is provided\n\n\n                    \n                        Returns :         Boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inbutton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('inAcceptor', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outbutton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('outAcceptor', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outputReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup,FormBuilder } from \"@angular/forms\";\nimport { CompetitionService } from \"../competition.service\";\n\n/**\n * This component is essentially a form. \n * It lets you supply a problem and a testcase along with a schedule of your contest.\n * It uses Angular's NgxDateTimeModule and NgxMomentModule which uses Moment.js to accept Date and Time accurate to the minute.\n */\n\n@Component({\n  selector: 'app-comp-create',\n  templateUrl: './comp-create.component.html',\n  styleUrls: ['./comp-create.component.scss']\n})\n\nexport class CompCreateComponent implements OnInit {\n\n  @ViewChild('inAcceptor',{static: false}) inbutton : ElementRef;\n  @ViewChild('outAcceptor',{static: false}) outbutton : ElementRef;\n\n  form: FormGroup;\n\n  inputReady : Boolean = false;\n  outputReady : Boolean = false;\n\n  constructor(\n    public fb: FormBuilder,\n    private cpservice: CompetitionService\n    ) {\n    this.form = this.fb.group({\n      title: [''],\n      problem_st: [''],\n      infile :[null],\n      outfile: [null],\n      start: [''],\n      end: [''],\n    })\n  }\n\n  /**\n   * A simple boolean function which keeps the Create button disabled till all the relevant information is provided\n   */\n  validate(): Boolean {\n    if(this.form.get('title').value=='') return false;\n    if(this.form.get('problem_st').value=='') return false;\n    if(this.form.get('start').value=='') return false;\n    if(this.form.get('end').value=='') return false;\n    return true && this.inputReady && this.outputReady;\n  }\n\n  ngOnInit() { }\n\n  /**\n   * The following are standard function to store File type data in a form to facilitate easy upoads\n   * In a request, the file is accesible via request.FILES['filename']\n   */\n  uploadInput(files) {\n    if(files.length>0) {\n      const file = files.item(0);\n      this.form.get('infile').setValue(file);\n      this.inputReady = true;\n    }\n    else {\n      this.inputReady = false;\n    }\n  }\n\n  uploadOutput(files) {\n    if(files.length>0) {\n      const file = files.item(0);\n      this.form.get('outfile').setValue(file);\n      this.outputReady = true;\n    }\n    else {\n      this.outputReady = false;\n    }\n  }\n\n  /**\n   * The submitForm function is called when a user presses the Create button after providing the relevant information.\n   * This button accumulates all the information into a FormData component and sends it to the server.\n   * Alongside, it clears the form so that you can be ready to create another contest.\n   * \n   * Note : Use the first 100 or so characters of your problem statement to generate interest. These are displayed when your problem is upcoming!\n   */\n  submitForm() {\n    const formData = new FormData();\n    formData.append('title',this.form.get('title').value);\n    formData.append('problem_st',this.form.get('problem_st').value);\n    formData.append('infile',this.form.get('infile').value);\n    formData.append('outfile',this.form.get('outfile').value);\n    formData.append('start',this.form.get('start').value.format());\n    formData.append('end',this.form.get('end').value.format());\n    this.cpservice.regContest(formData).subscribe(\n      (response) => alert(response),\n      (err) => console.log(console.error()\n      )\n    );\n    this.form.setValue({\n      title: [''],\n      problem_st: [''],\n      infile :[null],\n      outfile: [null],\n      start: [''],\n      end: ['']\n    });\n    this.inbutton.nativeElement.value = null;\n    this.outbutton.nativeElement.value = null;\n  }\n\n}\n    \n\n    \n        \n    \n        \n            \n                \n                    Title\n                    \n                \n            \n         -->\n\n        \n            \n                Problem Statement\n                \n            \n        \n        \n        \n            \n                Input\n                \n            \n    \n            \n                Expected Output\n                \n            \n            \n            \n            \n            \n    \n            \n            \n            \n    \n            \n                \n                    Create\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./comp-create.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Title                                                         -->                                    Problem Statement                                                                                Input                                                            Expected Output                                                                                                                                                                        Create                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompDashboardComponent.html":{"url":"components/CompDashboardComponent.html","title":"component - CompDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comp-dashboard/comp-dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders the three types of competitions :\n\nRunning\nUpcoming\nPast\nand provides link to appropriate pages.\nIt uses TimerComponent as a child component.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comp-dashboard\n            \n\n            \n                styleUrls\n                ./comp-dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comp-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                pcomps\n                            \n                            \n                                rcomps\n                            \n                            \n                                running\n                            \n                            \n                                ucomps\n                            \n                            \n                                upcoming\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cpservice: CompetitionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comp-dashboard/comp-dashboard.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pcomps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comp[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rcomps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comp[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"end:\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ucomps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comp[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upcoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"start:\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CompetitionService } from \"../competition.service\";\nimport { Comp } from \"../comp\"\n\n/**\n * This component renders the three types of competitions :\n * 1. Running\n * 2. Upcoming\n * 3. Past\n * and provides link to appropriate pages.\n * It uses TimerComponent as a child component.\n */\n\n@Component({\n  selector: 'app-comp-dashboard',\n  templateUrl: './comp-dashboard.component.html',\n  styleUrls: ['./comp-dashboard.component.scss']\n})\n\nexport class CompDashboardComponent implements OnInit {\n\n  upcoming: String = \"start:\";\n  running: String = \"end:\";\n\n  rcomps : Comp[] = [];\n  ucomps : Comp[] = [];\n  pcomps : Comp[] = [];\n  load: boolean= true;\n  \n  constructor(\n    private cpservice : CompetitionService\n  ) { }\n\n  ngOnInit(): void {\n    this.cpservice.fetchRunningCompetetions().subscribe(\n      running => {\n        this.rcomps = running;\n      }\n    );\n    this.cpservice.fetchUpcomingCompetetions().subscribe(\n      running => {\n        this.ucomps = running;\n        this.load = false;\n      }\n    );\n    this.cpservice.fetchPastCompetetions().subscribe(\n      running => {\n        this.pcomps = running;\n      }\n    );\n  }\n}\n    \n\n    \n        \n    \n\n\n\n\n    \n        \n            \n                \n                    Running Competitions\n\n                    \n                        No Competitions Running! Visit again later!\n                    \n\n                    \n                        \n                            \n                                {{comp.title}}\n                                \n                            \n                            \n                                {{comp.problem.substr(0,100)}}\n                                Participate\n                            \n                        \n                    \n                \n            \n            \n                \n                    Past Competitions\n\n                    \n                        \n                            \n                                {{comp.title}}\n                            \n                            \n                                {{comp.problem.substr(0,100)}}\n                                See Your Performance\n                            \n                        \n                    \n                \n            \n            \n                \n                    Upcoming Competitions\n\n                    \n                        No Upcoming Competitions! Create your own!\n                    \n\n                    \n                        \n                            \n                                {{comp.title}}\n                                \n                            \n                            \n                                {{comp.problem.substr(0,100)}}\n                                Participate\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./comp-dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Running Competitions                                            No Competitions Running! Visit again later!                                                                                                                            {{comp.title}}                                                                                                                        {{comp.problem.substr(0,100)}}                                Participate                                                                                                                                                    Past Competitions                                                                                                        {{comp.title}}                                                                                        {{comp.problem.substr(0,100)}}                                See Your Performance                                                                                                                                                    Upcoming Competitions                                            No Upcoming Competitions! Create your own!                                                                                                                            {{comp.title}}                                                                                                                        {{comp.problem.substr(0,100)}}                                Participate                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompetitionComponent.html":{"url":"components/CompetitionComponent.html","title":"component - CompetitionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompetitionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/competition/competition.component.ts\n\n\n    \n        Description\n    \n    \n        This component is essentially EditorComponent - File Handling + Live Rendering\nThe component has a Subscription which keeps checking that the contest is running\nAt the end of a contest, the user is given a prompt and redirected to the profile page\nUPDATE : In the next update, we would like to make this process happen completely on the frontend by storing the endtime of the contest, reducing API calls\nUPDATE : We would still maintain a connection with the server for mid-contest information like errors in problem statements and clarifications\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-competition\n            \n\n            \n                styleUrls\n                ./competition.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./competition.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aceEditor\n                            \n                            \n                                allowed\n                            \n                            \n                                body\n                            \n                            \n                                code\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                editorBeautify\n                            \n                            \n                                    Public\n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                LANG\n                            \n                            \n                                passed\n                            \n                            \n                                points\n                            \n                            \n                                startexecution\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                THEME\n                            \n                            \n                                title\n                            \n                            \n                                working\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                beautifyContents\n                            \n                            \n                                checkRunning\n                            \n                            \n                                getPoints\n                            \n                            \n                                loaded\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                runCode\n                            \n                            \n                                runFile\n                            \n                            \n                                    Public\n                                updateLang\n                            \n                            \n                                    Public\n                                updateTheme\n                            \n                            \n                                uploadSource\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, uservice: LoginService, cpservice: CompetitionService, _router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/competition/competition.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uservice\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            beautifyContents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beautifyContents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkRunning\n                        \n                        \n                    \n                \n            \n            \n                \ncheckRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPoints\n                        \n                        \n                    \n                \n            \n            \n                \ngetPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loaded\n                        \n                        \n                    \n                \n            \n            \n                \nloaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            runCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    runCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runFile\n                        \n                        \n                    \n                \n            \n            \n                \nrunFile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateLang\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLang()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadSource\n                        \n                        \n                    \n                \n            \n            \n                \nuploadSource(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aceEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ace.Ace.Editor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('codeEditor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editorBeautify\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LANG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'c_cpp'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startexecution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            THEME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'github'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            working\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { LoginService } from \"../login.service\";\n\nimport { interval, Subscription } from \"rxjs\";\nimport { ActivatedRoute,Router } from \"@angular/router\";\n\nimport * as ace from 'ace-builds';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-ruby';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-ambiance';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-chaos';\nimport 'ace-builds/src-noconflict/theme-chrome';\nimport 'ace-builds/src-noconflict/theme-cobalt';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-beautify';\n\nimport { CompetitionService } from '../competition.service';\n\n/**\n * This component is essentially EditorComponent - File Handling + Live Rendering\n * \n * The component has a Subscription which keeps checking that the contest is running\n * At the end of a contest, the user is given a prompt and redirected to the profile page\n * \n * UPDATE : In the next update, we would like to make this process happen completely on the frontend by storing the endtime of the contest, reducing API calls\n * UPDATE : We would still maintain a connection with the server for mid-contest information like errors in problem statements and clarifications\n */\n\n@Component({\n  selector: 'app-competition',\n  templateUrl: './competition.component.html',\n  styleUrls: ['./competition.component.scss']\n})\n\nexport class CompetitionComponent implements AfterViewInit {\n\n  @ViewChild('codeEditor') private editor: ElementRef;\n\n  id: number;\n  startexecution: Boolean = false;\n\n  private subscription : Subscription;\n\n  private aceEditor: ace.Ace.Editor;\n  private editorBeautify;\n\n  passed: Boolean = false;\n  points: number;\n\n  allowed: Boolean = false;\n  working: Boolean = true;\n\n  form: FormGroup;\n\n  title: String;\n  body: String;\n\n  THEME: string = 'github';\n  LANG: string = 'c_cpp';\n\n  code: string = '';\n\n  constructor(\n    public fb: FormBuilder,\n    private uservice: LoginService,\n    private cpservice: CompetitionService,\n    private _router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.form = this.fb.group({\n      script: [null],\n      language: [''],\n    });\n    this.route.params.subscribe(\n      (params) => {\n        this.id = params.id;\n        this.startexecution = true;\n      }\n    )\n  }\n\n  ngAfterViewInit(): void {\n    while(!this.startexecution) {;}\n    this.subscription = interval(1000)\n      .subscribe(x => { this.validate(); });\n    this.cpservice.fetchCompetitionbyId(this.id).subscribe(\n      (comp) => {\n        this.title = comp.title;\n        this.body = comp.problem;\n      }\n    );\n    this.checkRunning();\n    this.getPoints();\n    ace.config.set('basePath', 'path');\n    ace.config.set(\"fontSize\", \"16px\");\n    ace.require('ace/ext/language_tools');\n    this.editorBeautify = ace.require('ace/ext/beautify');\n    const basicEditorOptions: Partial = {\n      highlightActiveLine: true,\n      minLines: 14,\n      maxLines: Infinity,\n    };\n    const extraEditorOptions = {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true\n    };\n    const editorOptions = Object.assign(basicEditorOptions, extraEditorOptions);\n    this.aceEditor = ace.edit(this.editor.nativeElement, editorOptions);\n    this.aceEditor.setTheme('ace/theme/' + this.THEME);\n    this.aceEditor.session.setMode('ace/mode/' + this.LANG);\n  }\n\n  loaded() : Boolean {\n    return true;\n  }\n\n  getPoints() {\n    this.cpservice.contestPassed(this.id).subscribe(\n      (res) => {\n        this.passed = res.passed;\n        this.points = res.points;\n      }\n    );\n  }\n\n  checkRunning() {\n    this.cpservice.isContestRunning(this.id).subscribe(\n      (res) => {\n        this.allowed = res;\n        this.working = res;\n      }\n    );\n  }\n\n  validate() {\n    this.checkRunning();\n    if(!this.working) {\n      alert(\"Competition Expired! You're being taken to your profile!\");\n      this._router.navigate(['/profile']);\n    }\n  }\n\n  public runCode() {\n    this.code = this.aceEditor.session.getValue();\n    this.cpservice.submitCode(\n      this.id,\n      {\n        'username' : this.uservice.getUser(),\n        'script' : this.code,\n        'language' : this.LANG\n      }\n    ).subscribe(\n      (response) => {\n        alert(response);\n        this.getPoints();\n      },\n      (error) => {\n        alert(\"Something went wrong, we are fixing the issue!\");\n        console.log(error);\n      }\n    );\n  }\n\n  public beautifyContents() {\n    if (this.aceEditor && this.editorBeautify) {\n      const session = this.aceEditor.getSession();\n      this.editorBeautify.beautify(session);\n    }\n  }\n\n  public updateTheme() {\n    this.aceEditor.setTheme('ace/theme/' + this.THEME);\n  }\n\n  public updateLang() {\n    this.aceEditor.session.setMode('ace/mode/' + this.LANG);\n    this.aceEditor.session.setValue(\"\");\n    this.form.patchValue({\n      language: this.LANG,\n    });\n    this.form.get('language').updateValueAndValidity();\n  }\n\n  uploadSource(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      script: file,\n      language: this.LANG,\n    });\n    this.form.get('script').updateValueAndValidity();\n    this.form.get('language').updateValueAndValidity();\n  }\n\n  runFile() {\n    var formData: any = new FormData();\n    formData.append(\"username\", this.uservice.getUser());\n    formData.append(\"script\", this.form.get('script').value);\n    formData.append(\"language\", this.form.get('language').value);\n    this.cpservice.submitFile(\n      this.id,\n      formData\n    ).subscribe(\n      (response) => {\n        alert(response);\n        this.getPoints();\n      },\n      (error) => {\n        alert(\"Something went wrong, we are fixing the issue!\");\n        console.log(error);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n    \n\n    \n        \n    \n\n\n\n\n    \n        \n            {{title}}\n            \n            Title description, April 7, 2014 -->\n        \n        \n        \n            {{body}}\n            \n            \n                Passed with {{points}} points!\n            \n            \n                Yet to solve!\n            \n            \n        \n    \n  \n    \n        \n            \n                Select Theme\n                \n                Github Theme\n                Ambiance Theme\n                Chaos Theme\n                Chrome Theme\n                Cobalt Theme\n                \n            \n        \n        \n            \n                Select Language\n                \n                C++\n                Python\n                Ruby\n                \n            \n        \n    \n    \n    \n    \n\n    \n        \n            \n                \n                        Run\n                \n            \n            \n            \n                \n                    Align\n                \n            \n        \n        \n            \n                \n                    \n                \n                \n                \n                    \n                        Run File\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./competition.component.scss\n                \n                hr.new1{\n    border-top: 1.5px solid;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{title}}                        Title description, April 7, 2014 -->                                    {{body}}                                        Passed with {{points}} points!                                        Yet to solve!                                                                              Select Theme                                Github Theme                Ambiance Theme                Chaos Theme                Chrome Theme                Cobalt Theme                                                                        Select Language                                C++                Python                Ruby                                                                                                                    Run                                                                                        Align                                                                                                                                                                                        Run File                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompetitionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompetitionService.html":{"url":"injectables/CompetitionService.html","title":"injectable - CompetitionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompetitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/competition.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getPointsUrl\n                            \n                            \n                                getPUrl\n                            \n                            \n                                getRUrl\n                            \n                            \n                                getUrl\n                            \n                            \n                                getUUrl\n                            \n                            \n                                isRunningUrl\n                            \n                            \n                                passUrl\n                            \n                            \n                                postUrl\n                            \n                            \n                                submitCodeUrl\n                            \n                            \n                                submitFileUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                contestPassed\n                            \n                            \n                                fetchCompetitionbyId\n                            \n                            \n                                fetchPastCompetetions\n                            \n                            \n                                fetchPoints\n                            \n                            \n                                fetchRunningCompetetions\n                            \n                            \n                                fetchUpcomingCompetetions\n                            \n                            \n                                isContestRunning\n                            \n                            \n                                regContest\n                            \n                            \n                                submitCode\n                            \n                            \n                                submitFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/competition.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contestPassed\n                        \n                        \n                    \n                \n            \n            \n                \ncontestPassed(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCompetitionbyId\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCompetitionbyId(index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchPastCompetetions\n                        \n                        \n                    \n                \n            \n            \n                \nfetchPastCompetetions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchPoints\n                        \n                        \n                    \n                \n            \n            \n                \nfetchPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchRunningCompetetions\n                        \n                        \n                    \n                \n            \n            \n                \nfetchRunningCompetetions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUpcomingCompetetions\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUpcomingCompetetions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isContestRunning\n                        \n                        \n                    \n                \n            \n            \n                \nisContestRunning(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            regContest\n                        \n                        \n                    \n                \n            \n            \n                \nregContest(formData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitCode\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitCode(id, code)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitFile\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitFile(id, code)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPointsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/points'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/get/past'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/get/running'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/competition'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/get/upcoming'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRunningUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/isrunning'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/passed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/postcontest'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:17\n                            \n                        \n\n                \n                    \n                        Provides access to multiple API endpoints\nThe service names are quite self explanatory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitCodeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/submit/code'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitFileUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/submit/file'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Comp } from './comp';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CompetitionService {\n\n  /**\n   * Provides access to multiple API endpoints\n   * The service names are quite self explanatory\n   */\n\n  postUrl = 'http://127.0.0.1:8000/api/contest/postcontest';\n  getRUrl = 'http://127.0.0.1:8000/api/contest/get/running';\n  getUUrl = 'http://127.0.0.1:8000/api/contest/get/upcoming';\n  getPUrl = 'http://127.0.0.1:8000/api/contest/get/past';\n  getUrl = 'http://127.0.0.1:8000/api/competition';\n  submitCodeUrl = 'http://127.0.0.1:8000/api/submit/code';\n  submitFileUrl = 'http://127.0.0.1:8000/api/submit/file';\n  getPointsUrl = 'http://127.0.0.1:8000/api/points';\n  isRunningUrl = 'http://127.0.0.1:8000/api/contest/isrunning';\n  passUrl = 'http://127.0.0.1:8000/api/contest/passed';\n\n  constructor(private http : HttpClient) { }\n\n  fetchRunningCompetetions() : Observable {\n    return this.http.get(this.getRUrl);\n  }\n\n  fetchUpcomingCompetetions() : Observable {\n    return this.http.get(this.getUUrl);\n  }\n\n  fetchPastCompetetions() : Observable {\n    return this.http.get(this.getPUrl);\n  }\n\n  regContest(formData) {\n    return this.http.post(this.postUrl,formData);\n  }\n\n  fetchCompetitionbyId(index) : Observable {\n    return this.http.get(`${this.getUrl}/${index}`);\n  }\n\n  submitCode(id,code) : Observable {\n    return this.http.post(`${this.submitCodeUrl}/${id}`,code);\n  }\n\n  submitFile(id,code) : Observable {\n    return this.http.post(`${this.submitFileUrl}/${id}`,code);\n  }\n\n  fetchPoints() : Observable {\n    return this.http.get(`${this.getPointsUrl}/${localStorage.getItem('username')}`);\n  }\n\n  isContestRunning(id): Observable {\n    return this.http.get(`${this.isRunningUrl}/${id}`);\n  }\n\n  contestPassed(id) {\n    return this.http.get(`${this.passUrl}/${id}/${localStorage.getItem('username')}`);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contest.html":{"url":"interfaces/Contest.html","title":"interface - Contest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Contest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/contest.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        in_tc\n                                \n                                \n                                        out_tc\n                                \n                                \n                                        problem_st\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        in_tc\n                                    \n                                \n                                \n                                    \n                                        in_tc:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out_tc\n                                    \n                                \n                                \n                                    \n                                        out_tc:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        problem_st\n                                    \n                                \n                                \n                                    \n                                        problem_st:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contest {\n    title: String,\n    problem_st : String,\n    in_tc: File[],\n    out_tc: File[]\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorDialogComponent.html":{"url":"components/EditorDialogComponent.html","title":"component - EditorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editor-dialog/editor-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Pop up window to enter name of new file/folder\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor-dialog\n            \n\n            \n                styleUrls\n                ./editor-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./editor-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/editor-dialog/editor-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-dialog/editor-dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor-dialog/editor-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n\n/**\n * Pop up window to enter name of new file/folder\n */\n\n@Component({\n  selector: 'app-editor-dialog',\n  templateUrl: './editor-dialog.component.html',\n  styleUrls: ['./editor-dialog.component.scss']\n})\nexport class EditorDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{data.text2}}\n\n         {{data.text}} name \n        \n\n\n     Cancel\n     Done \n\n\n    \n\n    \n                \n                    ./editor-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.text2}}         {{data.text}} name              Cancel     Done '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filename\n                                \n                                \n                                        script\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                    \n                                \n                                \n                                    \n                                        script:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface File {\n    filename : string,\n    script : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                            \n                                renameUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteFile\n                            \n                            \n                                deleteFolder\n                            \n                            \n                                getFile\n                            \n                            \n                                getFiles\n                            \n                            \n                                renameFile\n                            \n                            \n                                saveFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/file.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFile\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFile(id: String, username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFolder\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFolder(username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFile\n                        \n                        \n                    \n                \n            \n            \n                \ngetFile(id: String, username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFiles\n                        \n                        \n                    \n                \n            \n            \n                \ngetFiles(username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renameFile\n                        \n                        \n                    \n                \n            \n            \n                \nrenameFile(input: RenameFile, dirk: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RenameFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveFile\n                        \n                        \n                    \n                \n            \n            \n                \nsaveFile(input: File, username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/display'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file.service.ts:17\n                            \n                        \n\n                \n                    \n                        Provides access to multiple API endpoints\nThe service names are quite self explanatory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renameUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/rename'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { File } from './file';\nimport { RenameFile } from './renameFile';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  /**\n   * Provides access to multiple API endpoints\n   * The service names are quite self explanatory\n   */\n\n  postUrl = 'http://127.0.0.1:8000/api/display';\n  renameUrl = 'http://127.0.0.1:8000/api/rename';\n\n  constructor(private http : HttpClient) { }\n\n  httpOptions = {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  };\n\n  saveFile(input: File, username: String, dirk: String): Observable{\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    return this.http.post(url,input,this.httpOptions);\n  }\n\n  getFiles(username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    console.log(url);\n    return this.http.get(url);\n  }\n\n  getFile(id: String, username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}/${id}`;\n    return this.http.get(url)\n  }\n\n  deleteFile(id: String, username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}/${id}`;\n    console.log(url);\n    return this.http.delete(url);\n  }\n\n  deleteFolder(username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    console.log(url);\n    return this.http.delete(url);\n  }\n\n  renameFile(input: RenameFile, dirk: string, username:string): Observable{\n    const url = `${this.renameUrl}/${username}/${dirk}`;\n    console.log(input);\n    return this.http.post(url,input,this.httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        This is the homepage of our website.\nIt is publicly accessible and API free, which make it completely fast and suitable for our users.We have our team details, some resources and key features of the project are listed on the homepage.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * This is the homepage of our website.\n * It is publicly accessible and API free, which make it completely fast and suitable for our users.We have our team details, some resources and key features of the project are listed on the homepage.\n */\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n  \n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    WELCOME WreSSLers\n    New to coding ? Here are some useful sites.\n    C++\n    Python\n    Ruby\n\n\n\n\n  KEY FEATURES OF WreSSLemaniacs\n  \n    \n      \n      Competition Environment\n      Programming contest platform C++,Python,Ruby compatible and supported by an online IDE\n    \n    \n      \n      Directory Support\n      Directory support for every user synced with backend, with options to add and delete files and folders\n    \n    \n      \n      Environment Isolation\n      Environment isolation on the server side to improve the robustness of individual workspaces.\n    \n    \n        \n        Authenticated\n        Authenticated API end-points with Django Rest Framework tokens and Angular Http Interceptor\n    \n  \n\n\n\n\n    THE TEAM\n    \n      \n      \n        \n          \n          \n            Dhruv Arora\n            WreSSLemaniacs\n             Github\n          \n        \n      \n      \n            \n              \n              \n                Sibasis Nayak\n                WreSSLemaniacs\n                 Github\n              \n            \n          \n      \n        \n          \n          \n            Raj Aryan Agrawal\n            WreSSLemaniacs\n             Github\n          \n        \n      \n      \n        \n          \n          \n            Sahasra Ranjan\n            WreSSLemaniacs\n             Github \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                body,h1,h2,h3,h4,h5,h6 {font-family: \"Raleway\", sans-serif}\n\nbody, html {\n  height: 100%;\n  line-height: 1.8;\n}\n\n/* Full height image header */\n.bgimg-1 {\n  background-position: center;\n  background-size: cover;\n  background-image: url(\"/back\");\n  min-height: 100%;\n}\n\n.w3-bar .w3-button {\n  padding: 16px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    WELCOME WreSSLers    New to coding ? Here are some useful sites.    C++    Python    Ruby  KEY FEATURES OF WreSSLemaniacs                  Competition Environment      Programming contest platform C++,Python,Ruby compatible and supported by an online IDE                    Directory Support      Directory support for every user synced with backend, with options to add and delete files and folders                    Environment Isolation      Environment isolation on the server side to improve the robustness of individual workspaces.                        Authenticated        Authenticated API end-points with Django Rest Framework tokens and Angular Http Interceptor          THE TEAM                                                        Dhruv Arora            WreSSLemaniacs             Github                                                                                      Sibasis Nayak                WreSSLemaniacs                 Github                                                                                  Raj Aryan Agrawal            WreSSLemaniacs             Github                                                                      Sahasra Ranjan            WreSSLemaniacs             Github                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/loading/loading.component.ts\n\n\n    \n        Description\n    \n    \n        This component performs the basic task of providing a loading screen\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/loading/loading.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/loading/loading.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * This component performs the basic task of providing a loading screen\n */\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\n\nexport class LoadingComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n\n\n    \n        \n        \n        \n    \n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                .buffer {\n    width: 20em;\n    position: absolute;\n    left: 50%;\n    top: 16em;\n    -webkit-transform: translateX(-50%);\n        -ms-transform: translateX(-50%);\n            transform: translateX(-50%); }\n  \n  .layer {\n    fill: #4b4b4b;\n    -webkit-transition: all 21s ease-out;\n            transition: all 21s ease-out; }\n  \n  .loading .layer1 {\n    -webkit-animation: 4s linear infinite;\n            animation: 4s linear infinite;\n    -webkit-animation-name: cycle1;\n            animation-name: cycle1; }\n  \n  .loading .layer2 {\n    -webkit-animation: 4s linear infinite;\n            animation: 4s linear infinite;\n    -webkit-animation-name: cycle2;\n            animation-name: cycle2; }\n  \n  .loading .layer3 {\n    -webkit-animation: 4s linear infinite;\n            animation: 4s linear infinite;\n    -webkit-animation-name: cycle3;\n            animation-name: cycle3; }\n  \n  \n  @-webkit-keyframes cycle1 {\n    0%, 65% {\n      fill: #b2b2b2; }\n    75%, 82% {\n      fill: #4b4b4b; }\n    92%, 100% {\n      fill: #b2b2b2; } }\n  \n  @keyframes cycle1 {\n    0%, 65% {\n      fill: #b2b2b2; }\n    75%, 82% {\n      fill: #4b4b4b; }\n    92%, 100% {\n      fill: #b2b2b2; } }\n  \n  @-webkit-keyframes cycle2 {\n    0%, 40% {\n      fill: #b2b2b2; }\n    50%, 86% {\n      fill: #4b4b4b; }\n    96%, 100% {\n      fill: #b2b2b2; } }\n  \n  @keyframes cycle2 {\n    0%, 40% {\n      fill: #b2b2b2; }\n    50%, 86% {\n      fill: #4b4b4b; }\n    96%, 100% {\n      fill: #b2b2b2; } }\n  \n  @-webkit-keyframes cycle3 {\n    0%, 15% {\n      fill: #b2b2b2; }\n    25%, 90% {\n      fill: #4b4b4b; }\n    100% {\n      fill: #b2b2b2; } }\n  \n  @keyframes cycle3 {\n    0%, 15% {\n      fill: #b2b2b2; }\n    25%, 90% {\n      fill: #4b4b4b; }\n    100% {\n      fill: #b2b2b2; } }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the login system for our website.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                myuser\n                            \n                            \n                                notsuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                localcall\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logserv: LoginService, _router: Router, locallogserv: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            We define the constructor of the class hear\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logserv\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of class login service\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of the class router\n\n                                                        \n                                                \n                                                \n                                                        locallogserv\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Another instacne of login service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            localcall\n                        \n                        \n                    \n                \n            \n            \n                \nlocalcall()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:51\n                \n            \n\n\n            \n                \n                    This function will fetch the userid and the userimage after a authenticated login is made.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:65\n                \n            \n\n\n            \n                \n                    This function is to submit the form to the backend. We are also storing the username and the password of this user in myuser variable. This variable is sent through the POST request.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    username:new FormControl('', Validators.required), \n    password:new FormControl('',Validators.required)\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        A Formgroup created that will be send through the POST request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myuser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notsuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from './user';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { LoginService } from '../login.service';\n\n/**\n * This component is the login system for our website.\n */\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n  myuser : User; /**{\n        localStorage.setItem('userimage',res.image);\n        localStorage.setItem('userid',res.userid);\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n  /**\n   * This function is to submit the form to the backend. We are also storing the username and the password of this user in myuser variable. This variable is sent through the POST request.\n   */\n  onSubmit(){\n    this.myuser={\n      username: this.loginForm.get('username').value,\n      password: this.loginForm.get('password').value,\n    }\n\n    /**\n     * We are trying to make an API call and get a token, with the obtained token we are storing it in local storage, so that we can further use this token to authenticate further API calls.\n     */\n\n    this.logserv.trytoken(this.myuser)\n      .subscribe(\n        (res:any) => {\n          // console.log(res)\n          this.notsuccess =\"\";\n          /**\n           * This local call function is to fetch the login details of the user after the token has been obtained.\n           */\n          this.localcall();\n          localStorage.setItem('token',res.token);\n          // localStorage.setItem('userimage',res.image);\n          // localStorage.setItem('userid', res.userid);\n          localStorage.setItem('username',this.myuser.username);\n          this._router.navigate(['/profile']);\n        },\n        err => {\n          // this.notsuccess = \"fail\";\n          alert(\"Invalid credentials. Try Again!\")\n          console.log(err);\n\n        }\n      )\n  }\n\n}\n\n    \n\n    \n        User Login\n\n    Username: \n    password: \n\nSubmit -->\n\n\n    \n        \n            \n\n                \n                    Login\n                \n\n                \n                    \n                        \n                            \n                                Username\n                                \n                                Password\n                                \n                            \n                            \n                                Login\n                                \n                                    &times;\n                                    Incorrect username/password! Try again.\n                                \n                            \n\n                        \n                    \n                \n\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'User Login    Username:     password: Submit -->                                                            Login                                                                                                                                        Username                                                                Password                                                                                                                        Login                                                                    ×                                    Incorrect username/password! Try again.                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstry\n                            \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImage\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserId\n                            \n                            \n                                loggedIn\n                            \n                            \n                                logoutUser\n                            \n                            \n                                trylogin\n                            \n                            \n                                trytoken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor creates two instances\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of a HttpClient class\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of the Router class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:73\n                \n            \n\n\n            \n                \n                    Function to get the userimage stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:61\n                \n            \n\n\n            \n                \n                    Function to get the token stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:67\n                \n            \n\n\n            \n                \n                    Function to get the username stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:79\n                \n            \n\n\n            \n                \n                    Function to get the userid stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nloggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:45\n                \n            \n\n\n            \n                \n                    Function that returns whether the user is currently logged in using the token\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:51\n                \n            \n\n\n            \n                \n                    Function that logs out the user and deletes all the items stored in local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trylogin\n                        \n                        \n                    \n                \n            \n            \n                \ntrylogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:39\n                \n            \n\n\n            \n                \n                    Function used to fetch the details of the logined user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The details of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trytoken\n                        \n                        \n                    \n                \n            \n            \n                \ntrytoken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:32\n                \n            \n\n\n            \n                \n                    Function to get the token which will be used in site authentication\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Takes the login details as the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/auth/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/login'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse , HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './login/user';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * A class that has been used to define various functions that place the API calls.\n */\nexport class LoginService {\n  postUrl = 'http://127.0.0.1:8000/api/login'\n  firstry = 'http://127.0.0.1:8000/auth/'\n\n  /**\n   * Constructor creates two instances\n   * @param http  An instance of a HttpClient class\n   * @param _router An instance of the Router class\n   */\n  constructor(private http:HttpClient,private _router:Router) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  };\n  /**\n   * Function to get the token which will be used in site authentication\n   * @param user Takes the login details as the input\n   */\n  trytoken(user:User):Observable{\n    return this.http.post(this.firstry, user, this.httpOptions)\n  }\n  /**\n   * Function used to fetch the details of the logined user\n   * @param user The details of the user\n   */\n  trylogin(user:User):Observable{\n    return this.http.post(this.postUrl, user, this.httpOptions)\n  }\n  /**\n   * Function that returns whether the user is currently logged in using the token\n   */\n  loggedIn(){\n    return !!localStorage.getItem('token');\n  }\n  /**\n   * Function that logs out the user and deletes all the items stored in local storage\n   */\n  logoutUser(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('userimage');\n    localStorage.removeItem('userid');\n    this._router.navigate(['/home']);\n  }\n  /**\n   * Function to get the token stored in local storage\n   */\n  getToken(){\n    return localStorage.getItem('token');\n  }\n  /**\n   * Function to get the username stored in local storage\n   */\n  getUser() {\n    return localStorage.getItem('username');\n  }\n  /**\n   * Function to get the userimage stored in local storage\n   */\n  getImage(){\n    return localStorage.getItem('userimage');\n  }\n  /**\n   * Function to get the userid stored in local storage\n   */\n  getUserId(){\n    return localStorage.getItem('userid');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigationModel.html":{"url":"classes/NavigationModel.html","title":"class - NavigationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/editor/editor.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                children\n                            \n                            \n                                    Public\n                                    Optional\n                                file\n                            \n                            \n                                    Public\n                                isFile\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NavigationModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:740\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:739\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:738\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:736\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:737\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup,FormBuilder } from \"@angular/forms\";\nimport { RunService } from '../run.service';\nimport { RunInput } from '../run_input';\nimport { RenameFile } from '../renameFile';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginService } from \"../login.service\";\n\nimport * as ace from 'ace-builds';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-ruby';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-ambiance';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-chaos';\nimport 'ace-builds/src-noconflict/theme-chrome';\nimport 'ace-builds/src-noconflict/theme-cobalt';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-beautify';\nimport { EditorDialogComponent } from '../editor-dialog/editor-dialog.component';\nimport { FileService } from '../file.service';\n\nimport { File } from '../file';\nimport { Navigation } from '@angular/router';\n\n/**\n   * \n   * The life of the project, the editor component. Its functionality can be studied in 2 parts\n   * \n   * 1. Editor :\n   * The editor is created using the \"Ace\" library\n   * The view uses ngAfterViewInit which is needed for @ViewChild decorator\n   * The code is stored as a formatted string, along with the language and theme\n   * \n   * The editor supports basic autocomplete and align (beautify) capabilities\n   * The code uses https://medium.com/@ofir3322/create-an-online-ide-with-angular-6-nodejs-part-1-163a939a7929 as a starting point\n   * \n   * The project also allows for running files via direct uploads\n   * \n   * 2. Directory Structure\n   * The directory is stored as a recursive list of objects of class type NavigationModel\n   * The structure supports file and folder creation, deletion and renaming\n   * \n   * Provides a system for modularising code and running with various imports and dependencies\n   * \n   * The code for directory struture is with help of https://trungk18.com/experience/angular-recursive-view-render/\n   */\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\n\nexport class EditorComponent implements AfterViewInit {\n\n  @ViewChild('codeEditor') private editor: ElementRef;\n  private aceEditor : ace.Ace.Editor;\n  private editorBeautify;\n  public fileString;\n\n  files: File[] = [];\n  folders: string[] = [];\n  list: NavigationModel[] = [];\n  currentfile: NavigationModel = {\n        title: '',\n        isFile: true,\n        children: [],\n  };\n  dirk: string = '.';\n  form: FormGroup;\n\n  THEME : string = 'github';\n  LANG : string = 'c_cpp';\n\n  code : string = '';\n  input : string = '';\n  output : string = '';\n\n  constructor(\n    public fb: FormBuilder,\n    private runscript : RunService,\n    public dialog: MatDialog,\n    private fileService: FileService,\n    private uservice: LoginService\n    ) { \n      this.form = this.fb.group({\n        script: [null],\n        language: [''],\n        input: ['']\n      });\n    }\n\n  ngOnInit() {\n      this.getFiles(false,false);\n  }\n\n  ngAfterViewInit(): void {\n    ace.config.set('basePath', 'path');\n    ace.config.set(\"fontSize\", \"16px\");\n    ace.require('ace/ext/language_tools');\n    this.editorBeautify = ace.require('ace/ext/beautify');\n    const basicEditorOptions: Partial = {\n      highlightActiveLine: true,\n      minLines: 14,\n      maxLines: Infinity,\n    };\n    const extraEditorOptions = {\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true\n    };\n    const editorOptions = Object.assign(basicEditorOptions, extraEditorOptions);\n    this.aceEditor = ace.edit(this.editor.nativeElement, editorOptions);\n    this.aceEditor.setTheme('ace/theme/'+this.THEME);\n    this.aceEditor.session.setMode('ace/mode/'+this.LANG);\n    this.aceEditor.session.setValue(\n`#include\nusing namespace std;\nint main() {\n  cout \nusing namespace std;\nint main() {\n  cout {\n      if(!result){return;}\n      console.log(`Dialog Result: ${result}`);\n      if(!rename){\n        if(text == \"File\") {\n          const file: NavigationModel = {\n            title: result,\n            isFile: true,\n            children: [],\n            url: this.dirk\n          }\n          this.saveFile(file);\n        }\n        else {\n          const folder: NavigationModel = {\n            title: result,\n            isFile: false,\n            children: [],\n            url: this.dirk\n          }\n          this.saveFolder(folder);\n        }\n      }\n      else{\n        if(text==\"File\") {\n          this.newNameFile(oldName,result,url)\n        }\n        else {\n          this.newNameFolder(oldName,result,url)\n        }\n      }\n    },err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    });\n  }\n\n  // ---------------FOLDER EDITINGS---------------------\n\n  /**\n     * Create new list of objects containing the obtained files and folders\n     * @param url local path address of objects inserted\n     */\n  insert(url:string): NavigationModel[] {\n    var temp: NavigationModel[] = []\n    for(var folder of this.folders) {\n      const item: NavigationModel = {\n        title: folder,\n        isFile: false,\n        children: [],\n        url: url\n      }\n      temp.push(item);\n    }\n\n    for (var val of this.files) {\n      const item: NavigationModel = {\n        title: val.filename,\n        isFile: true,\n        children: [],\n        file: val,\n        url: url\n      }\n      temp.push(item);\n    }\n\n    return temp;\n  }\n\n  /** \n     * Insert list of files and folders at given local path location\n     * @param table list of objects containing files and folders\n     * @param dir  list of strings containing individual subdirectory names\n     * @param url local path address of objects inserted\n     */\n  insertStructure(table: NavigationModel[], dir: string[], url: string): NavigationModel[] {\n    if(dir.length == 0) {\n      return this.insert(url);\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.insertStructure(item.children, dir, url);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Deletes all children of the folder but not folder itself\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     */\n  deleteStructure(table: NavigationModel[], dir: string[]): NavigationModel[] {\n    console.log(dir);\n    if(dir.length == 0) {\n      var empty: NavigationModel[] = [];\n      return empty;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title===dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.deleteStructure(item.children, dir);\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Deletes folder and all its children\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param folder string for name of folder to be deleted\n     */\n  deleteFolderStruc(table: NavigationModel[], dir: string[], folder: string): NavigationModel[] {\n    if(dir.length == 0) {\n      table = table.filter(f=> f.isFile ||  f.title != folder)\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.deleteFolderStruc(item.children, dir, folder);\n        break;\n      }\n    }\n    return table;\n  }\n\n   /**\n     * Creates new folder and adds to the list of objects  @param this.list\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param folder string for name of new folder\n     */\n  editFolder(table: NavigationModel[], dir: string[], folder: string): NavigationModel[] {\n    if(dir.length == 0) {\n      var item: NavigationModel = {\n        title: folder,\n        isFile: false,\n        url: this.dirk,\n        children: []\n      }\n      table.push(item);\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.editFolder(item.children, dir, folder);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Fix local path values for al children of renamed folder\n     * @param table list of objects containing files and folders\n     * @param url name of new url of all objects in table\n     */\n  fixUrl(table: NavigationModel[],url: string): NavigationModel[] {\n    console.log(url);\n    for(var item of table){\n      item.url = url;\n      if(!item.isFile) {\n        item.children = this.fixUrl(item.children, url + \"/\" + item.title)\n      }\n    }\n    return table;\n  }\n\n   /**\n     * Renames an existing folder and updates local path values to objects in @param this.list\n     * @param table  list of objects containing files and folders\n     * @param dir  list of strings containing individual subdirectory names\n     * @param newName string for name of renamed folder\n     * @param oldName  string for original name of folder\n     */\n  renameListFolder(table: NavigationModel[], dir: string[], newName: string, oldName: string): NavigationModel[] {\n    if(dir.length == 0) {\n      for(var item of table){\n        if(!item.isFile && item.title == oldName){\n          item.title = newName;\n          item.children = this.fixUrl(item.children,item.url + \"/\" + newName);\n          break;\n        }\n      } \n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.renameListFolder(item.children, dir, newName,oldName);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Function calls FileService method to create new folder on backend database\n     * @param foldername object containing folder name and local path location\n     */\n  saveFolder(foldername: NavigationModel): void{\n    this.fileService.saveFile(\n      {\n        filename: \"trash.trash\",\n        script: foldername.title\n      } as File, this.uservice.getUser(), this.dirk + \"/\" + foldername.title).subscribe(\n      file=>{\n        console.log(file);\n\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.editFolder(this.list, dirs, foldername.title);\n      },\n      err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      }); \n  }\n\n  /**\n     * Function calls FileService method to rename folder on backend database\n     * @param oldName string for original name of folder\n     * @param newName string for new name of folder\n     * @param url local path location for folder\n     */\n  newNameFolder(oldName: string, newName: string, url: string): void {\n    this.fileService.renameFile(\n      {\n        newName: newName, \n        oldName: oldName,\n        file: false} as RenameFile, url,this.uservice.getUser()).subscribe(\n      file=>{\n        var dirs: string[] = url.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.renameListFolder(this.list, dirs, newName, oldName);\n      },\n      err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      });\n  }\n\n  // ------------------------ FILE HELPERS -------------------\n\n  /**\n     * Deletes file from @param this.list of objects\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param file File object containing filename and code script\n     */\n  deleteFileStruc(table: NavigationModel[], dir: string[], file: File): NavigationModel[] {\n    if(dir.length == 0) {\n      table = table.filter(f=> !f.isFile || f.file != file)\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.deleteFileStruc(item.children, dir, file);\n        break;\n      }\n    }\n    return table;\n  }\n\n   /**\n     * Creates new file and adds to the list of objects @param this.list\n     * @param table list of objects containing files and folders\n     * @param dir  list of strings containing individual subdirectory names\n     * @param file File object containing filename and code script\n     */\n  editFile(table: NavigationModel[], dir: string[], file: File): NavigationModel[] {\n    if(dir.length == 0) {\n      var flag: boolean = false;\n      for(var item of table) {\n        if(item.title == file.filename){\n          item.file = file;\n          flag = true;\n          break;\n        }\n      }\n      if(!flag){\n        var item: NavigationModel = {\n          title: file.filename,\n          isFile: true,\n          url: this.dirk,\n          children: [],\n          file: file\n        }\n        table.push(item);\n      }\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.editFile(item.children, dir, file);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Renames an existing file in list of objects @param this.list\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param newName  string for name of renamed file\n     * @param oldName string for original name of file\n     */\n  renameListFile(table: NavigationModel[], dir: string[], newName: string, oldName: string): NavigationModel[] {\n    if(dir.length == 0) {\n      for(var item of table){\n        if(item.isFile && item.title == oldName){\n          item.title = newName;\n        }\n      }\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.renameListFile(item.children, dir, newName,oldName);\n        break;\n      }\n    }\n    return table;\n  }\n\n  \n  /** \n     * Function calls FileService method to create new file on backend database\n     * @param filename File object containing filename and code script\n     */\n  saveFile(filename = this.currentfile): void{\n    if(filename.title==''){\n      return this.openDialog(\"File\",\"Create New File\");\n    }\n    this.code = this.aceEditor.session.getValue();\n    this.fileService.saveFile(\n      {\n        filename: filename.title,\n        script: this.code\n      } as File, this.uservice.getUser(), this.dirk).subscribe(\n      file=>{\n        console.log(file);\n\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.editFile(this.list, dirs,file);\n        console.log(this.list);\n      },err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      }); \n  }\n\n  /**\n     * Function calls FileService method to rename file on backend database\n     * @param oldName string for original name of file\n     * @param newName string for new name of file\n     * @param url local path location for file\n     */\n  newNameFile(oldName: string, newName: string, url: string): void {\n    this.fileService.renameFile(\n      {\n        newName: newName, \n        oldName: oldName,\n        file: true} as RenameFile, url,this.uservice.getUser()).subscribe(\n      file=>{\n        var dirs: string[] = url.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.renameListFile(this.list, dirs, newName, oldName);\n      },\n      err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      });\n  }\n\n  /**\n     * Function executed on ngInit and every time nested folder contents is to be viewed or closed\n     * @param newFolder True if nested folder contents is to be viewed\n     * @param deleteFolder True if nested folder is closed\n     */\n  getFiles(newFolder: boolean, deleteFolder: boolean): void {\n    this.fileService.getFiles(this.uservice.getUser(),this.dirk).subscribe(\n      files => {this.files=files;\n      this.folders = this.files.filter(f=> f.filename === \"trash.trash\").map(f=>f.script)\n      this.files = this.files.filter(f => f.filename !== \"trash.trash\");\n      if(newFolder) {\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.insertStructure(this.list, dirs,this.dirk);\n      }\n      else if(deleteFolder) {\n        if(this.dirk == '.')\n          return;\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.deleteStructure(this.list, dirs);\n        var loc = this.dirk.lastIndexOf(\"/\");\n        if(loc !== -1) {\n          this.dirk = this.dirk.substring(0,loc);\n        }\n        console.log(this.dirk);\n      }\n      else{\n        this.list = this.insert(this.dirk);\n      }\n      console.log(this.list);\n    },err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    }\n    );\n}\n\n  // ------------------------- LOAD FILE/FOLDER INFORMATION --------------------\n\n\n  setFile(file: NavigationModel){\n    this.currentfile = file;\n    this.dirk = file.url;\n    this.aceEditor.session.setValue(file.file.script);\n  }\n\n  setFolder(folder: NavigationModel){\n    this.dirk = folder.url + \"/\" + folder.title;\n    console.log(this.dirk);\n    this.getFiles(true,false);\n  }\n\n  deleteFile(file: NavigationModel): void {\n    this.dirk = file.url;\n    var dirs: string[] = this.dirk.split('/')\n    dirs = dirs.splice(1);\n    this.list = this.deleteFileStruc(this.list,dirs,file.file);\n    this.fileService.deleteFile(file.title,this.uservice.getUser(), this.dirk).subscribe(err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    });\n  }\n\n  deleteFolder(folder: NavigationModel): void {\n    this.dirk = folder.url;\n    var drk: string = this.dirk + \"/\" + folder.title\n    var dirs: string[] = this.dirk.split('/')\n    dirs = dirs.splice(1);\n    this.list = this.deleteFolderStruc(this.list,dirs, folder.title);\n    this.fileService.deleteFolder(this.uservice.getUser(), drk).subscribe(err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    });\n  }\n\n  renameFile(file: NavigationModel): void {\n    this.openDialog(\"File\",\"Rename File\",true,file.title, file.url);\n  }\n\n  renameFolder(folder: NavigationModel): void {\n    this.openDialog(\"Folder\",\"Rename Folder\",true, folder.title, folder.url);\n  }\n\n  goBack(): void {\n    this.getFiles(false,true);\n  }\n\n\n  // ------------------- EXECUTE CODE OPERATIONS -------------------\n\n  /**\n     * Here, we use the typescript FileReader to upload files the same way we upload editor code\n     * UPDATE : We would like to render the contents of the file into the editor in the next update\n     */\n  uploadSource(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n\n    let fileReader = new FileReader();\n    fileReader.onloadend = (e) => {\n      this.fileString = fileReader.result;\n    }\n\n    /// remove comment to UPDATE :\n    /// this.aceEditor.session.setValue(this.fileString); \n\n    fileReader.readAsText(file)\n    \n    this.form.patchValue({\n      script: this.fileString,\n      language: this.LANG,\n      input: this.input\n    });\n    this.form.get('script').updateValueAndValidity();\n    this.form.get('language').updateValueAndValidity();\n    this.form.get('input').updateValueAndValidity();\n  }\n\n  /**\n     * Executed when the user presses the Run button, this function sends the editor content to the server\n     * Along with the code, the \"input\" contents are also sent to the server\n     * The server responds with the output which is rendered in the output textarea\n     */\n  public runCode() {\n    this.code = this.aceEditor.session.getValue();\n    const send : RunInput = {\n      username : this.uservice.getUser(),\n      script : this.code,\n      language : this.LANG,\n      input : this.input\n    };\n    console.log(send);\n    this.runscript.runScript(send,this.uservice.getUser(),this.currentfile.url).subscribe(receivied =>\n      {\n        if(receivied.success==true) {\n          this.output = receivied.output;\n        }   \n        else {\n          this.output = \"Error: \" + receivied.output;\n        }\n      },err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      });\n}\n\n  /**\n     * Executed when the user presses the Run File button, this function sends the file content to the server\n     * Along with the code, the \"input\" contents are also sent to the server\n     * The server responds with the output which is rendered in the output textarea\n     */\n  runFile() {\n    const send : RunInput = {\n      username : this.uservice.getUser(),\n      script : this.fileString,\n      language : this.LANG,\n      input : this.input\n    };\n    console.log(send);\n    this.runscript.runScript(send,this.uservice.getUser(), \"\").subscribe(receivied =>\n      {\n        if(receivied.success==true) {\n          this.output = receivied.output;\n        }   \n        else {\n          this.output = \"Error: \" + receivied.output;\n        }\n      },err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      }); \n  } \n} \n\nclass NavigationModel {\n  public title: string;\n  public url?: string;\n  public isFile: boolean;\n  public file?: File;\n  public children: NavigationModel[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewUser.html":{"url":"classes/NewUser.html","title":"class - NewUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/register/newuser.ts\n        \n\n            \n                Description\n            \n            \n                Description\nCreates a NewUser class that basically stores all the user credentials, and is used to send an API request to get the user registered.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                image\n                            \n                            \n                                last_name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, password: string, image: string, first_name: string, last_name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/newuser.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        image\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        first_name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        last_name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewUser{\n\tusername='';\n\temail='';\n\tpassword='';\n\timage = '';\n\tfirst_name = '';\n\tlast_name = '';\n\n\tconstructor(\n\t\tusername:string,\n\t\temail:string,\n\t\tpassword:string,\n\t\timage:string,\n\t\tfirst_name:string,\n\t\tlast_name:string\n\t)\n\t{\t\n\t\tthis.image=image;\n\t\tthis.username=username;\n\t\tthis.email=email;\n\t\tthis.password=password;\n\t\tthis.first_name=first_name;\n\t\tthis.last_name=last_name;\n\t}\n\t\t\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PastcontestComponent.html":{"url":"components/PastcontestComponent.html","title":"component - PastcontestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PastcontestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pastcontest/pastcontest.component.ts\n\n\n    \n        Description\n    \n    \n        This component lets a user view the contests that are over\nIt displays the problem statement along with their status\n(solved/unsolved) and points obtained \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pastcontest\n            \n\n            \n                styleUrls\n                ./pastcontest.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pastcontest.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                gotContest\n                            \n                            \n                                gotPoints\n                            \n                            \n                                id\n                            \n                            \n                                passed\n                            \n                            \n                                points\n                            \n                            \n                                startexecution\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cpservice: CompetitionService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pastcontest/pastcontest.component.ts:29\n                            \n                        \n\n                \n                    \n                            Rendering is done via Angular's parametrized routes\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loaded\n                        \n                        \n                    \n                \n            \n            \n                \nloaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pastcontest/pastcontest.component.ts:74\n                \n            \n\n\n            \n                \n                    A simple boolean function to know the status of requests\nUsed for loading screen rendering\n\n\n                    \n                        Returns :         Boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pastcontest/pastcontest.component.ts:50\n                \n            \n\n\n            \n                \n                    The loop prevents execution till the id is obtained\nThis id is needed in backend requests\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gotContest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gotPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startexecution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CompetitionService } from '../competition.service';\n\n/**\n * This component lets a user view the contests that are over\n * It displays the problem statement along with their status\n * (solved/unsolved) and points obtained \n */\n\n@Component({\n  selector: 'app-pastcontest',\n  templateUrl: './pastcontest.component.html',\n  styleUrls: ['./pastcontest.component.scss']\n})\n\nexport class PastcontestComponent implements OnInit {\n\n  id: number;\n  startexecution: Boolean = false;\n\n  passed: Boolean = false;\n  points: number;\n\n  title: String;\n  body: String;\n\n  gotContest: Boolean = false;\n  gotPoints: Boolean = false;\n\n  /**\n  * Rendering is done via Angular's parametrized routes\n  */\n  constructor(\n    private cpservice: CompetitionService,\n    private route: ActivatedRoute\n  ) {\n    this.route.params.subscribe(\n      (params) => {\n        this.id = params.id;\n        this.startexecution = true;\n      }\n    )\n  }\n\n  /**\n   * The loop prevents execution till the id is obtained\n   * This id is needed in backend requests\n   */\n  ngOnInit(): void {\n\n    while (!this.startexecution) { ; }\n\n    this.cpservice.fetchCompetitionbyId(this.id).subscribe(\n      (comp) => {\n        this.title = comp.title;\n        this.body = comp.problem;\n        this.gotContest = true;\n      }\n    );\n    this.cpservice.contestPassed(this.id).subscribe(\n      (res) => {\n        this.passed = res.passed;\n        this.points = res.points;\n        this.gotPoints = true;\n      }\n    );\n  }\n\n  /**\n   * A simple boolean function to know the status of requests\n   * Used for loading screen rendering\n   */\n  loaded(): Boolean {\n    return this.gotContest && this.gotPoints;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n        \n            {{title}}\n            \n            Title description, April 7, 2014 -->\n        \n\n        \n            {{body}}\n            \n                \n                    You passed with {{points}} points!\n                \n                \n                    You could not solve this problem!\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./pastcontest.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{title}}                        Title description, April 7, 2014 -->                            {{body}}                                                You passed with {{points}} points!                                                    You could not solve this problem!                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PastcontestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profile.html":{"url":"interfaces/Profile.html","title":"interface - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.ts\n        \n\n            \n                Description\n            \n            \n                Description\nA profile interface to store the details of the user which will be used to send the API request.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        image\n                                \n                                \n                                        password\n                                \n                                \n                                        user_fk\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_fk\n                                    \n                                \n                                \n                                    \n                                        user_fk:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Profile{\n    user_fk: any;\n    username:string;\n    password:string;\n    email: string;\n    image:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n    \n        Description\n    \n    \n        Created the profile component, to display the profile page of the website.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date_joined\n                            \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                image\n                            \n                            \n                                is_staff\n                            \n                            \n                                last_name\n                            \n                            \n                                points\n                            \n                            \n                                user\n                            \n                            \n                                userDet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uservice: LoginService, cpservice: CompetitionService, profileservice: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor to create the instances of the services required.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        uservice\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to fetch user details is of Loginservice instance.\n\n                                                        \n                                                \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to fetch the points is of Competition service instance.\n\n                                                        \n                                                \n                                                \n                                                        profileservice\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to fetch all the profile details of the logged in user.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:42\n                \n            \n\n\n            \n                \n                    Quite self-explanatory. Three GET requests to corresponding APIs to get the details of the users and the required display properties.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_joined\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_staff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CompetitionService } from '../competition.service';\nimport { LoginService } from \"../login.service\";\nimport { ProfileService } from '../profile.service'\n\n/**\n * Created the profile component, to display the profile page of the website.\n */\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\n\nexport class ProfileComponent implements OnInit {\n\n  user: String;\n  userDet: any;\n  image: String;\n  points: number = 0;\n  email: String;\n  date_joined: String;\n  is_staff: Boolean;\n  first_name: String;\n  last_name: String;\n  /**\n   * Constructor to create the instances of the services required.\n   * @param uservice Used to fetch user details is of Loginservice instance.\n   * @param cpservice Used to fetch the points is of Competition service instance.\n   * @param profileservice Used to fetch all the profile details of the logged in user.\n   */\n  constructor(\n    private uservice: LoginService,\n    private cpservice: CompetitionService,\n    private profileservice: ProfileService\n  ) { }\n  \n  /**\n   * Quite self-explanatory. Three GET requests to corresponding APIs to get the details of the users and the required display properties.\n   */\n  ngOnInit(): void {\n    this.user = this.uservice.getUser();\n    this.profileservice.getUserDetail(this.user)\n      .subscribe(data => {\n        this.image = data.image;\n        this.userDet = data.user_fk;\n        this.email = this.userDet.email;\n        this.date_joined = this.userDet.date_joined;\n        this.is_staff = this.userDet.is_staff;\n        this.first_name = this.userDet.first_name;\n        this.last_name = this.userDet.last_name;\n      });\n      this.cpservice.fetchPoints().subscribe(\n        (pts) => this.points=pts\n      );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n\n\n\n\n    Welcome {{user}} !\n    Code, compile, create and participate\n\n\n\n    \n        \n            \n                \n                    \n                        \n                            \n                            \n                            {{user}}\n                            WreSSLer\n                             Resources  \n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                                Name\n                            \n                            \n                                {{first_name}} {{last_name}}\n                            \n                        \n                        \n                        \n                            \n                                Email\n                            \n                            \n                                {{email}}\n                            \n                        \n                        \n                        \n                            \n                                Points\n                            \n                            \n                                {{points}}\n                            \n                        \n                        \n                        \n                        \n                            \n                                Code Editor\n\n                            \n                            \n                                Create a Contest\n\n                            \n                            \n                                Contest Dashboard\n\n                            \n                         \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                body {\n    margin-top: 20px;\n    color: #1a202c;\n    text-align: left;\n    background-color: #e2e8f0;\n}\n\n.main-body {\n    padding: 15px;\n}\n\n.card {\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .1), 0 1px 2px 0 rgba(0, 0, 0, .06);\n}\n\n* .button {\n    color: #e15241;\n}\n\n.card {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    min-width: 0;\n    word-wrap: break-word;\n    background-color: #fff;\n    background-clip: border-box;\n    border: 0 solid rgba(0, 0, 0, .125);\n    border-radius: .25rem;\n}\n\n.card-body {\n    flex: 1 1 auto;\n    min-height: 1px;\n    padding: 1rem;\n}\n\n.gutters-sm {\n    margin-right: -8px;\n    margin-left: -8px;\n}\n\n.gutters-sm>.col,\n.gutters-sm>[class*=col-] {\n    padding-right: 8px;\n    padding-left: 8px;\n}\n\n.mb-3,\n.my-3 {\n    margin-bottom: 1rem!important;\n}\n\n.bg-gray-300 {\n    background-color: #e2e8f0;\n}\n\n.h-100 {\n    height: 100%!important;\n}\n\n.shadow-none {\n    box-shadow: none!important;\n}\n\na.button3 {\n    display: inline-block;\n    padding: 0.3em 1.2em;\n    height: 1cm;\n    margin: 0 0.3em 0.3em 0;\n    border-radius: 0.5em;\n    box-sizing: border-box;\n    text-decoration: none;\n    font-family: 'Roboto', sans-serif;\n    font-weight: 300;\n    color: #FFFFFF;\n    background-color: #1c9ee9;\n    text-align: center;\n    transition: all 0.2s;\n}\n\na.button3:hover {\n    background-color: #3bb7ff;\n}\n\n@media all and (max-width:30em) {\n    a.button3 {\n        display: block;\n        margin: 0.2em auto;\n    }\n}\nbody,h1,h2,h3,h4,h5,h6 {font-family: \"Raleway\", sans-serif}\n\nbody, html {\n  height: 100%;\n  line-height: 1.8;\n}\n//some parts of the styling of lot of components has been taken from w3-schools templates\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Welcome {{user}} !    Code, compile, create and participate                                                                                                                                                                        {{user}}                            WreSSLer                             Resources                                                                                                                                                                                                                                          Name                                                                                        {{first_name}} {{last_name}}                                                                                                                                                                Email                                                                                        {{email}}                                                                                                                                                                Points                                                                                        {{points}}                                                                                                                                                                                        Code Editor                                                                                        Create a Contest                                                                                        Contest Dashboard                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getUrl\n                            \n                            \n                                getUserUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUserDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile.service.ts:26\n                \n            \n\n\n            \n                \n                    Function has been used to make a POST request and return the profile of the user.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserDetail\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserDetail(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile.service.ts:33\n                \n            \n\n\n            \n                \n                    Function has been used to make a POST request and return the details of the user to display in the profile.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/profile/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/profile/pk'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { stringify } from 'querystring';\nimport { Profile } from './profile/profile'\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * A class that has been used to make two service requests- The service to get the user and the service to get the details\n */\nexport class ProfileService {\n  getUrl = 'http://127.0.0.1:8000/api/profile/'\n  getUserUrl = 'http://127.0.0.1:8000/api/profile/pk'\n\n  constructor(private http:HttpClient,private _router:Router) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  };\n\n  /**\n   * Function has been used to make a POST request and return the profile of the user.\n   */\n  getUser(){\n    return this.http.post(this.getUrl, this.httpOptions)\n  }\n\n  /**\n   * Function has been used to make a POST request and return the details of the user to display in the profile.\n   */\n  getUserDetail(username : String){\n    console.log({'username':username})\n    return this.http.post(this.getUserUrl, {'username': username}, this.httpOptions)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegService.html":{"url":"injectables/RegService.html","title":"injectable - RegService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reg.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tryreg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/reg.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tryreg\n                        \n                        \n                    \n                \n            \n            \n                \ntryreg(user: NewUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reg.service.ts:22\n                \n            \n\n\n            \n                \n                    function which places the POST request and returns and Observable of New user type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                NewUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reg.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/profile/add'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reg.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse , HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NewUser } from './register/newuser';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n *A service used to register the user. Recive the details from the register component and make the API call.\n */\nexport class RegService {\n  postUrl = 'http://127.0.0.1:8000/api/profile/add'\n  constructor(private http:HttpClient) { }\n  \n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  };\n  /**\n   * function which places the POST request and returns and Observable of New user type.\n   */\n  tryreg(user:NewUser):Observable{\n    return this.http.post(this.postUrl, user, this.httpOptions)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        This is our Register Component and this will serve as the registration forum for our project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errormessage\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Public\n                                imagePath\n                            \n                            \n                                imgerr\n                            \n                            \n                                imgURL\n                            \n                            \n                                link\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                myfile\n                            \n                            \n                                mynewuser\n                            \n                            \n                                regForm\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFileListener\n                            \n                            \n                                onSubmit\n                            \n                            \n                                onUpload\n                            \n                            \n                                preview\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(regserv: RegService, _router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regserv\n                                                  \n                                                        \n                                                                        RegService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileListener\n                        \n                        \n                    \n                \n            \n            \n                \nonFileListener(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:60\n                \n            \n\n\n            \n                \n                    This is function that listns to the click on choose file and sends an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:127\n                \n            \n\n\n            \n                \n                    Function is used to submit the form credentials to the api to get the user registered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpload\n                        \n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:105\n                \n            \n\n\n            \n                \n                    Function is used to upload an image to the backend and recieve an url for the image.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preview\n                        \n                        \n                    \n                \n            \n            \n                \npreview(files)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:68\n                \n            \n\n\n            \n                \n                    This function is used to pick an image to the file reader and then upload the image\nand collect the url from the api to make further requests for the image when required.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        To store the file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:92\n                \n            \n\n\n            \n                \n                    Validates all the fields in the input form and returns a boolean to activate/deactivate the register button\n\n\n                    \n                        Returns :         Boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errormessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders ({ 'Content-Type': 'application/json' })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:44\n                            \n                        \n\n                \n                    \n                        Constructs a Http Header object with the params of content type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imagePath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgerr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         File\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mynewuser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    first_name: new FormControl('',Validators.required),\n    last_name: new FormControl('',Validators.required),\n    username:new FormControl('', Validators.required),\n    email: new FormControl('',Validators.required),\n    password:new FormControl('',Validators.required),\n    image:new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n                \n                    \n                        We create a Formgroup that we are using to collect the credentials and will POST it to the backend  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NewUser } from './newuser'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Observable } from 'rxjs';\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router'\n\nimport { RegService } from '../reg.service'; \n\n  /**\n   * This is our Register Component and this will serve as the registration forum for our project.\n   */\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  mynewuser: NewUser; /** { \n      this.imgURL = reader.result; \n      this.onUpload();\n\n    }\n  };\n\n  /**\n   * Validates all the fields in the input form and returns a boolean to activate/deactivate the register button\n   */\n  validate(): Boolean {\n    if(this.regForm.get('first_name').value=='') return false;\n    if(this.regForm.get('last_name').value=='') return false;\n    if(this.regForm.get('username').value=='') return false;\n    if(this.regForm.get('email').value=='') return false;\n    if(this.regForm.get('password').value=='') return false;\n    if(this.link=='') return false;\n    return true;\n  }\n\n  /**\n   * Function is used to upload an image to the backend and recieve an url for the image.\n   */\n  onUpload(){\n    this.visible=false;\n    const fd = new FormData();\n    fd.append('image',this.myfile,this.myfile.name);\n\n    this.http.post('http://127.0.0.1:8000/api/image',fd)\n      .subscribe(\n        (res:any) => {\n        // console.log(res);\n        this.imgerr=\"\";\n        this.link = res.url;\n\n      },\n      err => {\n        console.log(err);\n        this.imgerr=\"Invalid upload! Please upload again.\";\n      });\n  };\n\n  /**\n   * Function is used to submit the form credentials to the api to get the user registered.\n   */\n  onSubmit(){\n    this.mynewuser={\n      image: this.link,\n      username: this.regForm.get('username').value,\n      email: this.regForm.get('email').value,\n      password: this.regForm.get('password').value,\n      first_name: this.regForm.get('first_name').value,\n      last_name: this.regForm.get('last_name').value,\n    }\n\n    this.regserv.tryreg(this.mynewuser)\n      .subscribe(\n        res => {\n          this.errormessage=\"\";\n          this._router.navigate(['/login'])\n        },\n        err => {\n          console.log(err);\n          this.errormessage = err;\n        }\n      )\n  }\n\n}\n\n    \n\n    \n         Register Yourself \n\n    Name: \n    Email Id: \n    Password: \n    Image: \n  \nSubmit -->\n\n      -->\n\n    Upload -->\n\n\n    \n        \n            \n\n                \n                    Hello\n                    \n                        Register yourself here.\n                    \n                \n\n                \n                    \n                        \n                            Upload Avatar\n                            \n                            \n                            &times;\n                                Avatar Uploaded successfully!\n                            \n                            \n                                &times;\n                                {{ imgerr }}\n                            \n                            \n                                \n                                    Username\n                                    \n                                \n                                \n                                    First Name\n                                    \n                                \n                                \n                                    Last Name\n                                    \n                                \n                                \n                                    Email\n                                    \n                                \n                                \n                                    Password\n                                    \n                                \n                            \n                            \n                                Register\n                            \n                            \n                            \n                                &times;\n                            Could not register! Try again with non-empty credentials.\n                            \n\n                        \n                    \n                \n\n            \n        \n    \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                body {\n    margin-top: 20px;\n    background-color: #f2f3f8;\n}\n\n.card {\n    margin-bottom: 1.5rem;\n    box-shadow: 0 1px 15px 1px rgba(52, 40, 104, .08);\n}\n\n.card {\n    position: relative;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    min-width: 0;\n    word-wrap: break-word;\n    background-color: #fff;\n    background-clip: border-box;\n    border: 1px solid #e5e9f2;\n    border-radius: .2rem;\n}\n\n.avatar {\n    vertical-align: middle;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Register Yourself     Name:     Email Id:     Password:     Image:   Submit -->      -->    Upload -->                                                            Hello                                            Register yourself here.                                                                                                                            Upload Avatar                                                                                    ×                                Avatar Uploaded successfully!                                                                                        ×                                {{ imgerr }}                                                                                                                            Username                                                                                                                                        First Name                                                                                                                                        Last Name                                                                                                                                        Email                                                                                                                                        Password                                                                                                                                                            Register                                                                                                                    ×                            Could not register! Try again with non-empty credentials.                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenameFile.html":{"url":"interfaces/RenameFile.html","title":"interface - RenameFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RenameFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/renameFile.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        file\n                                \n                                \n                                        newName\n                                \n                                \n                                        oldName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newName\n                                    \n                                \n                                \n                                    \n                                        newName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldName\n                                    \n                                \n                                \n                                    \n                                        oldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenameFile {\n    oldName : string,\n    newName : string,\n    file: boolean\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunFile.html":{"url":"interfaces/RunFile.html","title":"interface - RunFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RunFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run_file.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                                \n                                        language\n                                \n                                \n                                        script\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                    \n                                \n                                \n                                    \n                                        script:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RunFile {\n    username: string,\n    script : any,\n    language : string,\n    input : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunInput.html":{"url":"interfaces/RunInput.html","title":"interface - RunInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RunInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run_input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                                \n                                        language\n                                \n                                \n                                        script\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                    \n                                \n                                \n                                    \n                                        script:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RunInput {\n    username: string,\n    script : string,\n    language : string,\n    input : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunOutput.html":{"url":"interfaces/RunOutput.html","title":"interface - RunOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RunOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run_output.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        output\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                    \n                                \n                                \n                                    \n                                        output:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RunOutput {\n    success : boolean,\n    output : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RunService.html":{"url":"injectables/RunService.html","title":"injectable - RunService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RunService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runFile\n                            \n                            \n                                runScript\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/run.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runFile\n                        \n                        \n                    \n                \n            \n            \n                \nrunFile(infile: FormData, username: string, dirk: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/run.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infile\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runScript\n                        \n                        \n                    \n                \n            \n            \n                \nrunScript(input: RunInput, username: string, dirk: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/run.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RunInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/run.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/compile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/run.service.ts:17\n                            \n                        \n\n                \n                    \n                        Provides access to compiling API endpoint for compile and execution of code\nThe service names are quite self explanatory\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RunInput } from './run_input';\nimport { RunOutput } from './run_output';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RunService {\n\n  /**\n   * Provides access to compiling API endpoint for compile and execution of code\n   * The service names are quite self explanatory\n   */\n\n  postUrl = 'http://127.0.0.1:8000/api/compile';\n\n  constructor(private http : HttpClient) { }\n\n  httpOptions = {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  };\n\n  runScript(input : RunInput, username:string, dirk: string) : Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    console.log(input);\n    return this.http.post(url,input,this.httpOptions);\n  }\n\n  runFile(infile : FormData, username:string, dirk: string) : Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    return this.http.post(url,infile,this.httpOptions);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer/timer.component.ts\n\n\n    \n        Description\n    \n    \n        This component displays the time remaining accurate to seconds for an event\nEvent datetime and type (a string specifying \"start\"/\"end\") are passed as @Input parameters\nThe element also refreshes the page when an event expires\nThe code used is essentially a modification of code that can be found at :\nhttps://medium.com/javascript-in-plain-english/implement-a-countdown-timer-with-rxjs-in-angular-3852f21a4ea0\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timer\n            \n\n            \n                styleUrls\n                ./timer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                daysToDday\n                            \n                            \n                                    Public\n                                dDate\n                            \n                            \n                                hoursInADay\n                            \n                            \n                                    Public\n                                hoursToDday\n                            \n                            \n                                milliSecondsInASecond\n                            \n                            \n                                minutesInAnHour\n                            \n                            \n                                    Public\n                                minutesToDday\n                            \n                            \n                                SecondsInAMinute\n                            \n                            \n                                    Public\n                                secondsToDday\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Public\n                                timeDifference\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allocateTimeUnits\n                            \n                            \n                                    Private\n                                getTimeDifference\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                endsAt\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer/timer.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        endsAt\n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            allocateTimeUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    allocateTimeUnits(timeDifference)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeDifference\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTimeDifference\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimeDifference()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            daysToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dDate\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoursInADay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 24\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hoursToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            milliSecondsInASecond\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minutesInAnHour\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minutesToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SecondsInAMinute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            secondsToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeDifference\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Subscription, interval } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\n  /**\n   * This component displays the time remaining accurate to seconds for an event\n   * Event datetime and type (a string specifying \"start\"/\"end\") are passed as @Input parameters\n   * The element also refreshes the page when an event expires\n   * The code used is essentially a modification of code that can be found at :\n   * https://medium.com/javascript-in-plain-english/implement-a-countdown-timer-with-rxjs-in-angular-3852f21a4ea0\n   */\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss']\n})\n\nexport class TimerComponent implements OnInit {\n\n  @Input() endsAt;\n  @Input() type;\n\n  public dDate;\n  private subscription: Subscription;\n\n\n  constructor(\n    /**\n     * This is needed for the refresh capability\n     */\n    private _router: Router\n  ) {}\n\n  milliSecondsInASecond = 1000;\n  hoursInADay = 24;\n  minutesInAnHour = 60;\n  SecondsInAMinute = 60;\n\n  public timeDifference;\n  public secondsToDday;\n  public minutesToDday;\n  public hoursToDday;\n  public daysToDday;\n\n\n  private getTimeDifference() {\n    this.timeDifference = this.dDate.getTime() - new Date().getTime();\n    \n    /**\n     * The logic for refresh on event expiration\n     */\n    if(this.timeDifference false;\n      this._router.onSameUrlNavigation = 'reload';\n      this._router.navigate(['/dashboard']);\n    }\n    \n    this.allocateTimeUnits(this.timeDifference);\n  }\n\n  private allocateTimeUnits(timeDifference) {\n    this.secondsToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond) % this.SecondsInAMinute);\n    this.minutesToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour) % this.SecondsInAMinute);\n    this.hoursToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour * this.SecondsInAMinute) % this.hoursInADay);\n    this.daysToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour * this.SecondsInAMinute * this.hoursInADay));\n  }\n\n  ngOnInit() {\n    /**\n     * Subscription is used to refresh the timer every second\n     */\n    this.subscription = interval(1000)\n      .subscribe(x => { this.getTimeDifference(); });\n    this.dDate = new Date(this.endsAt);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n     To event {{type}}\n         {{daysToDday}} Day(s)\n         {{hoursToDday}} Hrs\n         {{minutesToDday}} Min\n         {{secondsToDday}} S\n    \n\n    \n\n    \n                \n                    ./timer.component.scss\n                \n                .timer {\n    font-family: Arial, sans-serif;\n    font-size: 0.8em;\n    letter-spacing: -1px;\n  }\n  .timer span {\n    font-size: 1em;;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     To event {{type}}         {{daysToDday}} Day(s)         {{hoursToDday}} Hrs         {{minutesToDday}} Min         {{secondsToDday}} S    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptorService.html":{"url":"interceptors/TokenInterceptorService.html","title":"interceptor - TokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/token-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/token-interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor to create an injector\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To prevent a cyclic dependancy we use this injector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req, next)\n                \n            \n\n\n            \n                \n                    Defined in src/app/token-interceptor.service.ts:28\n                \n            \n\n\n            \n                \n                    This fucntion intercepts all the http calls that the frontend makes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Takes the incoming request\n\n                                    \n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Used to pass on to the next interceptor if present, in our case none.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable,Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { LoginService } from './login.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * An important class for the frontend part of the authentication of the website.\n * The injectable class Tokeninterceptor implements HttpInterceptor class.\n */\n\nexport class TokenInterceptorService implements HttpInterceptor{\n  /**\n   * Constructor to create an injector\n   * @param injector To prevent a cyclic dependancy we use this injector\n   */\n\n  constructor(private injector: Injector) { }\n  /**\n   * This fucntion intercepts all the http calls that the frontend makes\n   * @param req Takes the incoming request\n   * @param next Used to pass on to the next interceptor if present, in our case none.\n   */\n  intercept(req,next){\n    let logser = this.injector.get(LoginService);\n    /**\n     * If the token is set then, that means the token has been obtained after login, we will try to clone the request to not tamper with the original request.\n     * To the cloned request we add a authization header with the appended unique token of the user, which makes our requests authorized.\n     */\n    if(localStorage.getItem('token')){\n        req   = req.clone({\n        setHeaders: {\n          Authorization: `token ${logser.getToken()}`\n        }\n      })\n    }\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/user.ts\n        \n\n            \n                Description\n            \n            \n                Description\nThis is an interface that has two variables, username and password.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    username:string;\n    password:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/comp-create/comp-create.component.ts\n            \n            component\n            CompCreateComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/comp-dashboard/comp-dashboard.component.ts\n            \n            component\n            CompDashboardComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/comp.ts\n            \n            interface\n            Comp\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/competition.service.ts\n            \n            injectable\n            CompetitionService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/competition/competition.component.ts\n            \n            component\n            CompetitionComponent\n            \n                3 %\n                (1/31)\n            \n        \n        \n            \n                \n                src/app/contest.ts\n            \n            interface\n            Contest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/editor-dialog/editor-dialog.component.ts\n            \n            component\n            EditorDialogComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/editor/editor.component.ts\n            \n            component\n            EditorComponent\n            \n                40 %\n                (20/50)\n            \n        \n        \n            \n                \n                src/app/editor/editor.component.ts\n            \n            class\n            NavigationModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/file.service.ts\n            \n            injectable\n            FileService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/file.ts\n            \n            interface\n            File\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            injectable\n            LoginService\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/login/user.ts\n            \n            interface\n            User\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pastcontest/pastcontest.component.ts\n            \n            component\n            PastcontestComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/profile/profile.ts\n            \n            interface\n            Profile\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/reg.service.ts\n            \n            injectable\n            RegService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/register/newuser.ts\n            \n            class\n            NewUser\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                42 %\n                (8/19)\n            \n        \n        \n            \n                \n                src/app/renameFile.ts\n            \n            interface\n            RenameFile\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/run.service.ts\n            \n            injectable\n            RunService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/run_file.ts\n            \n            interface\n            RunFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/run_input.ts\n            \n            interface\n            RunInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/run_output.ts\n            \n            interface\n            RunOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/timer/timer.component.ts\n            \n            component\n            TimerComponent\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/app/token-interceptor.service.ts\n            \n            interceptor\n            TokenInterceptorService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-components/datetime-picker : ^4.0.6\n        \n            @angular-material-components/moment-adapter : ^5.0.0\n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @types/jwt-decode : ^3.1.0\n        \n            ace-builds : ^1.4.12\n        \n            angular-moment : ^1.3.0\n        \n            bootstrap : ^4.5.3\n        \n            jwt-decode : ^3.1.2\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            save : ^2.4.0\n        \n            tsd : ^0.14.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOcde\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompCreateComponent\n\nCompCreateComponent\n\nAppModule -->\n\nCompCreateComponent->AppModule\n\n\n\n\n\nCompDashboardComponent\n\nCompDashboardComponent\n\nAppModule -->\n\nCompDashboardComponent->AppModule\n\n\n\n\n\nCompetitionComponent\n\nCompetitionComponent\n\nAppModule -->\n\nCompetitionComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nEditorDialogComponent\n\nEditorDialogComponent\n\nAppModule -->\n\nEditorDialogComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPastcontestComponent\n\nPastcontestComponent\n\nAppModule -->\n\nPastcontestComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nRegService\n\nRegService\n\nAppModule -->\n\nRegService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
