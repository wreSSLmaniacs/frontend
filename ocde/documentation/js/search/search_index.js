var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.3,1,0.924]],["body/components/AppComponent.html",[0,0.533,1,1.639,2,1.886,3,0.235,4,0.201,5,1.384,6,1.384,7,1.384,8,1.384,9,0.168,10,3.26,11,1.384,12,2.307,13,2.02,14,2.482,15,1.693,16,5.616,17,1.693,18,5.04,19,0.235,20,0.609,21,2.588,22,5.616,23,3.174,24,0.699,25,3.855,26,2.139,27,1.019,28,5.04,29,0.866,30,0.026,31,0.945,32,0.447,33,0.808,34,3.855,35,0.553,36,0.992,37,0.992,38,4.262,39,5.04,40,4.262,41,5.04,42,3.061,43,0.848,44,0.6,45,1.834,46,2.341,47,2.868,48,0.235,49,0.465,50,3.855,51,3.855,52,3.749,53,2.397,54,3.061,55,3.367,56,5.04,57,4.262,58,4.262,59,4.262,60,1.211,61,1.81,62,1.81,63,1.384,64,2,65,1.384,66,1.384,67,0.992,68,1.213,69,1.384,70,0.992,71,1.384,72,0.992,73,1.384,74,0.992,75,1.384,76,0.992,77,1.134,78,1.384,79,0.992,80,1.384,81,1.061,82,1.384,83,0.992,84,1.384,85,0.992,86,1.384,87,0.992,88,1.384,89,0.992,90,1.384,91,1.061,92,1.384,93,1.384,94,1.384,95,0.014,96,0.019,97,0.014]],["title/modules/AppModule.html",[98,2.039,99,2.243]],["body/modules/AppModule.html",[1,1.779,3,0.177,4,0.151,9,0.126,13,0.854,26,2.008,30,0.027,42,2.52,43,1.172,44,0.452,45,1.381,48,0.177,49,0.35,60,0.912,67,1.497,68,0.998,70,1.497,72,1.497,74,1.497,76,1.576,77,0.854,79,1.497,81,1.6,83,1.497,85,1.497,87,1.497,89,1.497,91,1.6,95,0.011,96,0.015,97,0.011,98,1.763,99,4.68,100,2.942,101,1.763,102,4.096,103,3.604,104,4.096,105,2.16,106,2.455,107,2.455,108,2.455,109,2.455,110,2.455,111,3.532,112,3.114,113,3.532,114,3.51,115,2.455,116,1.763,117,2.903,118,0.698,119,2.772,120,4.151,121,4.151,122,2.772,123,4.151,124,3.087,125,3.51,126,3.087,127,1.939,128,3.51,129,4.151,130,2.903,131,4.151,132,2.131,133,4.151,134,2.903,135,2.903,136,4.151,137,2.903,138,4.151,139,2.903,140,4.151,141,2.903,142,4.151,143,2.903,144,4.151,145,2.16,146,4.151,147,2.903,148,4.151,149,4.151,150,1.283,151,2.903,152,2.903,153,2.455,154,2.455,155,2.455,156,4.151,157,2.455,158,2.455,159,1.763,160,2.455,161,2.455,162,1.939,163,2.455,164,1.939,165,2.903,166,1.939,167,2.455,168,1.939,169,2.455,170,2.455,171,4.151,172,4.151,173,2.311,174,3.51,175,2.455,176,2.455,177,4.151,178,2.455,179,2.455,180,4.151,181,2.903,182,2.903,183,2.455,184,2.903,185,2.903,186,2.903,187,2.903,188,2.903,189,1.283]],["title/modules/AppRoutingModule.html",[98,2.039,111,2.039]],["body/modules/AppRoutingModule.html",[0,0.59,3,0.244,4,0.208,9,0.174,30,0.027,42,2.425,43,1.152,44,0.622,48,0.244,49,0.482,52,2.971,53,1.9,55,2.668,67,1.327,68,1.241,70,1.327,72,1.327,74,1.327,77,1.174,79,1.327,83,1.028,85,1.327,87,1.028,89,1.327,95,0.015,96,0.019,97,0.015,100,2.425,105,2.971,111,3.132,124,2.971,125,4.361,126,2.971,127,2.668,128,4.361,153,3.377,154,3.377,155,3.377,157,3.377,159,3.955,160,3.377,161,3.377,166,2.668,167,3.377,168,2.668,169,3.377,170,3.377,183,3.377,190,3.994,191,3.994,192,3.795,193,5.158,194,1.535,195,3.994,196,1.434,197,2.425,198,2.425,199,2.425,200,2.051,201,4.492,202,3.994,203,3.994,204,5.285,205,2.051,206,2.971,207,3.994,208,3.994,209,3.994,210,3.994]],["title/guards/AuthGuard.html",[159,2.039,211,2.498]],["body/guards/AuthGuard.html",[0,0.472,3,0.253,4,0.216,9,0.18,14,1.828,19,0.253,24,1.053,26,2.269,27,0.957,29,0.929,30,0.026,31,0.696,32,0.33,33,0.867,42,2.512,43,0.977,44,0.644,45,1.968,48,0.253,49,0.793,54,3.203,95,0.015,96,0.02,97,0.015,98,2.512,118,0.995,119,3.523,159,3.203,189,2.567,194,1.59,196,1.485,204,5.463,212,4.137,213,3.498,214,1.185,215,4.137,216,2.982,217,3.317,218,4.137,219,5.275,220,4.46,221,5.275,222,4.55,223,5.172,224,2.509,225,4.137,226,1.374,227,5.275,228,3.203,229,2.704,230,1.217,231,5.275,232,3.523,233,1.59,234,1.551,235,1.968,236,4.137,237,1.657,238,3.498,239,4.137,240,3.498,241,4.137,242,3.077,243,3.203,244,1.968,245,4.137,246,1.968,247,3.077,248,4.137,249,4.137,250,1.771,251,3.498,252,1.828]],["title/interfaces/Comp.html",[68,0.808,253,0.754]],["body/interfaces/Comp.html",[3,0.303,4,0.259,9,0.216,19,0.303,20,0.713,23,3.348,30,0.026,32,0.502,35,0.97,48,0.303,68,1.42,95,0.018,96,0.022,97,0.018,253,1.116,254,2.045,255,4.199,256,5.513,257,3.63,258,4.354,259,6.519,260,3.826]],["title/components/CompCreateComponent.html",[0,0.3,67,0.864]],["body/components/CompCreateComponent.html",[0,0.494,1,0.62,2,1.155,3,0.138,4,0.118,5,0.809,6,0.809,7,0.809,8,0.809,9,0.24,11,0.809,12,2.127,13,1.863,15,1.155,17,1.155,19,0.138,20,0.415,21,2.143,23,2.399,24,0.624,27,1.113,29,0.938,30,0.026,31,0.847,32,0.465,33,0.874,36,0.885,37,0.885,43,0.702,44,0.351,48,0.138,49,0.272,60,0.708,61,1.235,62,1.235,63,0.809,64,1.569,65,0.809,66,0.809,67,1.202,68,1.403,69,0.809,70,0.58,71,0.809,72,0.58,73,0.809,74,0.58,75,0.809,76,0.58,77,0.662,78,0.809,79,0.58,80,0.809,81,0.62,82,0.809,83,0.58,84,0.809,85,0.58,86,0.809,87,0.58,88,0.809,89,0.58,90,0.809,91,0.62,92,0.809,93,0.809,94,0.809,95,0.008,96,0.013,97,0.008,118,0.542,132,1.156,168,4.149,189,2.224,200,2.143,205,3.055,214,0.773,226,0.773,229,2.345,230,1.112,233,2.187,237,1.081,246,1.071,250,1.69,252,2.775,258,3.801,261,4.621,262,1.904,263,2.559,264,3.541,265,2.909,266,3.44,267,3.44,268,2.559,269,3.44,270,2.222,271,3.475,272,2.909,273,3.44,274,3.44,275,3.44,276,3.44,277,3.44,278,2.559,279,2.909,280,3.44,281,1.718,282,4.173,283,3.44,284,3.475,285,4.173,286,4.173,287,4.173,288,4.173,289,1.795,290,5.305,291,3.44,292,3.44,293,3.475,294,1.904,295,3.475,296,2.534,297,2.222,298,3.44,299,2.252,300,1.569,301,2.252,302,3.44,303,2.909,304,3.221,305,2.909,306,4.672,307,3.946,308,3.44,309,2.837,310,2.559,311,2.089,312,3.44,313,3.44,314,3.44,315,2.909,316,3.44,317,2.089,318,2.909,319,2.297,320,3.44,321,3.95,322,2.909,323,3.44,324,3.44,325,2.559,326,3.44,327,2.252,328,3.44,329,3.44,330,2.559,331,2.909,332,3.44,333,3.44,334,3.44,335,1.766,336,3.44,337,2.297,338,3.44,339,1.915,340,3.44,341,2.252,342,2.252,343,2.909,344,2.909,345,3.44,346,2.909,347,3.44,348,2.065,349,2.909,350,2.909,351,2.252,352,2.089,353,2.252,354,3.743,355,2.559,356,2.252,357,3.44,358,2.252,359,2.252,360,2.252,361,2.252,362,1.675,363,1.904,364,1.368,365,2.252,366,2.252,367,1.675,368,1.675,369,2.909,370,2.909,371,3.543,372,3.44,373,2.909,374,2.089,375,2.252,376,2.252,377,2.252,378,2.252,379,4.173,380,4.173,381,3.44,382,3.44,383,2.252,384,2.252,385,0.662,386,2.252,387,2.252,388,2.252,389,2.252,390,2.252,391,2.252,392,2.252,393,1.904,394,1.904,395,1.504,396,2.252,397,2.252,398,2.252,399,2.252,400,3.44,401,2.297]],["title/components/CompDashboardComponent.html",[0,0.3,70,0.864]],["body/components/CompDashboardComponent.html",[0,0.537,1,0.804,2,1.401,3,0.179,4,0.153,5,1.05,6,1.05,7,1.05,8,1.05,9,0.127,11,1.05,12,2.223,13,1.947,15,1.401,17,1.401,19,0.179,20,0.504,24,0.757,27,1.113,29,0.657,30,0.026,31,0.818,32,0.478,33,0.612,35,0.761,36,1.5,37,1.5,43,0.818,44,0.455,48,0.179,49,0.353,60,0.918,61,1.498,62,1.498,63,1.05,64,1.781,65,1.05,66,1.05,67,0.752,68,1.61,69,1.05,70,1.365,71,1.05,72,0.752,73,1.05,74,0.752,75,1.05,76,0.752,77,0.86,78,1.05,79,0.752,80,1.05,81,0.804,82,1.05,83,0.752,84,1.05,85,0.752,86,1.05,87,0.752,88,1.05,89,0.752,90,1.05,91,1.338,92,1.05,93,1.05,94,1.05,95,0.011,96,0.015,97,0.011,118,0.703,166,4.171,189,1.844,205,2.142,206,3.103,214,0.937,230,0.612,233,1.603,237,1.311,246,1.39,252,1.292,261,4.645,271,3.103,281,2.002,289,2.038,296,2.533,297,2.522,300,1.401,325,4.645,364,1.775,373,3.527,374,2.533,402,2.472,403,4.171,404,3.527,405,4.171,406,5.474,407,4.02,408,4.484,409,2.533,410,3.527,411,4.171,412,4.171,413,4.171,414,4.863,415,4.171,416,4.112,417,4.863,418,4.863,419,4.863,420,2.472,421,4.171,422,2.923,423,2.923,424,2.923,425,2.923,426,2.923,427,2.923,428,1.775,429,2.174,430,2.174,431,2.923,432,2.923,433,2.923,434,2.923,435,2.923,436,2.923,437,2.923,438,4.171,439,3.103,440,4.171,441,4.337,442,5.83,443,4.484,444,4.171,445,4.171]],["title/components/CompetitionComponent.html",[0,0.3,72,0.864]],["body/components/CompetitionComponent.html",[0,0.444,1,0.471,2,0.93,3,0.105,4,0.089,5,0.614,6,0.614,7,0.614,8,0.614,9,0.216,11,0.614,12,2.008,13,1.759,15,0.93,17,0.93,19,0.105,20,0.335,21,3.071,23,2.551,24,0.503,26,1.441,27,1.191,29,0.622,30,0.027,31,0.675,32,0.487,33,0.581,35,0.788,36,1.279,37,1.279,43,1.028,44,0.266,45,0.814,48,0.105,49,0.207,53,1.661,60,0.538,61,0.995,62,0.995,63,0.614,64,1.481,65,0.614,66,0.614,67,0.44,68,0.84,69,0.614,70,0.44,71,0.614,72,1.033,73,0.614,74,0.899,75,0.614,76,0.44,77,1.18,78,0.614,79,0.44,80,0.614,81,0.471,82,0.614,83,0.44,84,0.614,85,0.44,86,0.614,87,0.44,88,0.614,89,0.44,90,0.614,91,0.471,92,0.614,93,0.614,94,0.614,95,0.006,96,0.01,97,0.006,118,0.84,132,0.879,189,2.196,194,0.658,200,2.264,201,1.143,214,0.622,216,1.793,217,1.793,226,0.622,230,1.2,233,2.11,237,0.871,246,2.877,250,0.575,252,2.086,256,2.343,257,1.944,258,1.851,260,2.437,263,2.061,264,2.12,270,2.461,284,2.986,293,2.986,294,1.447,295,3.28,296,2.12,297,1.909,300,1.923,307,2.061,309,2.12,311,1.683,344,2.343,352,2.12,354,2.597,355,1.273,362,1.273,364,1.039,367,1.273,368,1.273,371,1.143,374,1.683,385,0.503,393,2.343,394,2.343,407,1.683,441,1.273,446,1.447,447,2.771,448,2.771,449,2.343,450,4.375,451,2.771,452,1.851,453,2.771,454,2.771,455,2.061,456,3.99,457,2.061,458,1.543,459,2.771,460,2.771,461,2.343,462,2.343,463,2.343,464,2.771,465,0.995,466,1.683,467,2.771,468,2.771,469,2.771,470,2.771,471,2.771,472,2.343,473,2.771,474,2.952,475,1.851,476,3.492,477,2.771,478,2.952,479,3.492,480,2.677,481,1.793,482,2.952,483,2.952,484,3.28,485,3.017,486,2.952,487,5.057,488,3.492,489,4.014,490,4.014,491,4.014,492,3.394,493,3.394,494,3.394,495,3.394,496,2.235,497,4.014,498,4.014,499,2.771,500,2.597,501,2.952,502,2.597,503,2.771,504,1.711,505,1.711,506,1.711,507,1.711,508,1.711,509,1.711,510,1.711,511,1.711,512,1.711,513,1.711,514,2.343,515,1.711,516,1.273,517,1.711,518,2.343,519,1.711,520,1.711,521,1.711,522,2.343,523,1.711,524,1.711,525,1.711,526,1.711,527,1.711,528,2.952,529,1.711,530,1.711,531,1.711,532,1.711,533,1.711,534,3.28,535,1.711,536,1.711,537,1.711,538,1.447,539,1.447,540,0.756,541,1.711,542,4.259,543,1.273,544,4.643,545,2.952,546,2.597,547,2.597,548,3.728,549,2.952,550,2.952,551,2.952,552,2.952,553,2.343,554,1.447,555,1.447,556,2.12,557,3.152,558,1.447,559,1.273,560,2.952,561,1.447,562,1.447,563,1.711,564,1.447,565,1.447,566,1.447,567,1.711,568,1.447,569,1.447,570,1.447,571,1.447,572,2.771,573,3.492,574,1.447,575,1.447,576,1.273,577,1.447,578,2.343,579,1.447,580,1.447,581,1.447,582,1.447,583,1.447,584,1.447,585,1.447,586,1.447,587,2.343,588,1.447,589,1.447,590,2.343,591,1.447,592,2.343,593,1.447,594,2.771,595,2.771,596,2.771,597,3.728,598,1.447,599,2.986,600,1.447,601,1.447,602,1.447,603,1.447,604,1.711,605,1.711,606,1.711,607,1.711,608,1.711,609,1.711,610,1.711,611,1.711,612,1.447,613,1.447,614,2.343,615,1.447,616,1.711,617,0.575,618,2.061,619,2.061,620,2.343,621,2.771,622,2.771,623,2.771,624,2.771,625,2.771,626,2.771,627,1.711,628,1.711,629,1.711,630,1.447,631,2.343,632,2.343,633,1.447,634,1.447,635,1.447,636,1.711,637,1.711,638,1.711,639,1.711,640,1.711,641,1.711,642,1.447,643,2.343,644,2.343,645,2.343,646,2.343,647,4.014,648,2.343,649,2.986,650,1.851,651,1.711,652,1.273,653,1.143,654,1.711,655,1.273]],["title/injectables/CompetitionService.html",[234,0.987,297,1.597]],["body/injectables/CompetitionService.html",[3,0.166,4,0.142,9,0.203,14,1.202,19,0.242,20,0.478,24,0.493,27,1.223,29,1.319,30,0.027,31,0.988,32,0.503,33,1.23,35,0.895,36,1.604,37,1.604,43,0.863,44,0.423,48,0.166,49,0.328,68,0.953,95,0.01,96,0.015,97,0.01,150,1.202,197,2.405,198,2.405,199,2.405,214,0.89,224,1.884,226,0.89,230,1.388,234,1.165,235,1.294,244,1.294,250,2.093,257,3.167,270,1.884,297,1.884,309,1.652,325,2.946,406,4.811,407,2.405,408,3.349,409,2.405,452,3.426,465,1.422,475,2.645,481,2.921,485,2.405,540,1.202,656,1.397,657,2.3,658,4.67,659,4.67,660,4.67,661,3.949,662,4.67,663,4.67,664,4.67,665,2.836,666,4.67,667,4.67,668,3.96,669,3.96,670,5.129,671,5.129,672,5.129,673,5.129,674,3.96,675,3.96,676,3.96,677,3.96,678,1.515,679,2.634,680,3.96,681,1.751,682,3.96,683,2.72,684,3.96,685,2.72,686,3.688,687,1.631,688,2.72,689,4.232,690,2.72,691,3.96,692,2.72,693,2.72,694,3.96,695,2.72,696,3.96,697,2.72,698,2.72,699,2.72,700,3.816,701,3.816,702,2.72,703,2.72,704,3.96,705,2.72,706,3.96,707,2.72,708,3.96,709,2.72,710,3.96,711,2.72,712,3.96,713,2.72,714,3.96,715,2.72,716,3.96,717,3.96,718,2.72,719,2.946,720,3.349,721,3.349,722,2.645,723,3.96,724,2.72,725,3.96,726,2.72,727,1.397,728,2.72,729,2.72,730,2.72,731,2.72,732,2.72,733,2.72,734,2.72,735,2.72,736,2.72,737,2.72,738,2.72,739,2.72]],["title/interfaces/Contest.html",[253,0.754,270,1.597]],["body/interfaces/Contest.html",[3,0.304,4,0.26,9,0.297,19,0.304,20,0.714,23,3.35,30,0.026,32,0.52,35,0.97,48,0.304,95,0.018,96,0.022,97,0.018,253,1.118,254,2.049,270,2.811,369,5.516,740,4.207,741,6.523,742,6.523]],["title/components/EditorDialogComponent.html",[0,0.3,76,0.864]],["body/components/EditorDialogComponent.html",[0,0.497,1,1.04,2,1.671,3,0.231,4,0.197,5,1.358,6,1.358,7,1.358,8,1.358,9,0.165,11,1.358,12,2.302,13,2.016,15,1.671,17,1.671,19,0.231,20,0.601,21,2.856,24,0.686,27,1.009,29,0.849,30,0.026,31,1.082,32,0.397,33,0.792,43,0.837,44,0.588,48,0.231,49,0.456,60,1.188,61,1.787,62,1.787,63,1.358,64,1.985,65,1.358,66,1.358,67,0.973,68,1.197,69,1.358,70,0.973,71,1.358,72,0.973,73,1.358,74,0.973,75,1.358,76,1.521,77,1.918,78,1.358,79,0.973,80,1.358,81,1.04,82,1.358,83,0.973,84,1.358,85,0.973,86,1.358,87,0.973,88,1.358,89,0.973,90,1.358,91,1.04,92,1.358,93,1.358,94,1.358,95,0.014,96,0.018,97,0.014,118,0.91,145,2.813,162,3.948,214,1.118,230,0.792,237,1.564,281,2.291,289,2.271,300,1.671,331,4.998,355,2.813,385,1.463,743,4.998,744,3.197,745,4.977,746,4.977,747,4.977,748,4.977,749,4.208,750,4.208,751,5.563,752,4.977,753,3.781,754,3.781,755,3.781,756,3.781,757,3.781,758,3.781,759,3.781,760,3.781,761,4.977,762,4.977,763,4.977,764,4.208]],["title/interfaces/File.html",[9,0.146,253,0.754]],["body/interfaces/File.html",[3,0.314,4,0.269,9,0.278,19,0.314,20,0.728,30,0.026,32,0.48,35,0.977,48,0.314,95,0.019,96,0.022,97,0.019,253,1.156,254,2.119,556,4.005,765,4.352,766,5.577]],["title/injectables/FileService.html",[234,0.987,767,2.243]],["body/injectables/FileService.html",[3,0.172,4,0.147,9,0.288,14,1.245,19,0.172,20,0.49,24,0.511,27,1.14,29,1.333,30,0.026,31,0.999,32,0.501,33,1.244,35,1.008,36,1.226,37,1.226,43,0.93,44,0.438,48,0.172,49,0.34,95,0.01,96,0.015,97,0.01,150,1.245,197,2.466,198,2.466,199,2.466,200,2.957,201,2.713,214,0.912,224,1.932,228,3.496,230,1.347,234,1.194,235,1.34,244,1.34,250,1.934,257,2.261,339,2.261,348,1.795,385,1.194,409,2.466,452,2.713,465,1.458,540,1.245,617,2.179,656,1.446,665,2.892,678,1.568,679,2.677,681,1.795,686,3.612,687,2.371,689,3.021,700,3.021,701,3.021,719,3.021,720,3.434,721,3.434,722,2.713,727,1.446,767,2.713,768,2.382,769,2.652,770,4.763,771,4.061,772,3.434,773,4.061,774,4.061,775,3.604,776,4.061,777,4.061,778,4.061,779,5.016,780,2.817,781,4.283,782,3.434,783,4.061,784,2.817,785,2.266,786,3.434,787,4.061,788,2.817,789,3.021,790,4.061,791,2.817,792,3.021,793,4.061,794,3.434,795,4.061,796,2.817,797,3.166,798,4.061,799,2.817,800,2.261,801,2.466,802,2.466,803,2.817,804,4.061,805,2.817,806,4.061,807,2.817,808,4.028,809,3.434,810,4.028,811,4.061,812,4.061,813,4.061,814,1.71,815,2.817,816,2.382]],["title/components/HomeComponent.html",[0,0.3,79,0.864]],["body/components/HomeComponent.html",[0,0.442,1,0.829,2,1.431,3,0.184,4,0.157,5,1.082,6,1.082,7,1.082,8,1.082,9,0.131,11,1.082,12,2.233,13,1.955,15,1.431,17,1.431,19,0.184,24,0.897,27,0.773,30,0.026,31,0.717,43,0.507,44,0.469,46,2.588,48,0.184,49,0.364,52,3.17,58,4.545,59,5.391,60,0.947,61,1.775,62,1.53,63,1.082,64,1.805,65,1.082,66,1.082,67,0.775,68,1.025,69,1.082,70,0.775,71,1.082,72,0.775,73,1.082,74,0.775,75,1.082,76,0.775,77,0.886,78,1.082,79,1.383,80,1.082,81,0.829,82,1.082,83,0.775,84,1.082,85,0.775,86,1.082,87,0.775,88,1.082,89,0.775,90,1.082,91,0.829,92,1.082,93,1.082,94,1.082,95,0.011,96,0.016,97,0.011,118,0.725,122,2.846,173,2.373,214,0.957,226,0.957,230,0.631,237,1.339,240,3.603,270,2.027,281,2.036,289,2.066,300,1.431,304,1.83,311,2.588,319,2.846,339,2.373,374,2.588,385,1.253,428,1.83,458,2.373,461,3.603,465,1.93,475,2.846,480,1.83,485,2.588,534,4.6,546,3.17,547,3.17,576,2.241,648,3.603,681,1.884,687,1.755,782,3.603,792,3.17,817,2.548,818,5.375,819,2.846,820,4.261,821,4.261,822,4.261,823,4.261,824,4.261,825,4.261,826,3.603,827,5.375,828,5.375,829,4.261,830,4.945,831,4.261,832,3.013,833,3.013,834,3.603,835,4.261,836,4.261,837,4.261,838,4.261,839,4.38,840,4.261,841,4.261,842,4.261,843,4.261,844,4.261,845,3.603,846,3.603,847,3.999,848,4.545,849,4.261,850,2.588,851,4.261,852,3.603,853,5.375,854,4.261,855,4.261,856,4.261,857,3.603,858,4.261,859,4.545,860,4.261,861,4.261,862,4.261,863,2.846,864,4.261,865,4.261,866,4.261,867,4.261,868,4.261,869,4.261,870,4.261,871,4.261,872,4.261,873,2.548,874,2.241,875,2.241,876,2.548,877,2.241,878,2.241,879,3.999,880,2.548,881,2.548,882,3.013,883,2.588,884,2.241,885,3.013,886,3.678,887,2.012,888,2.548,889,2.548,890,3.013,891,3.013,892,2.012,893,3.603,894,3.013,895,2.548]],["title/components/LoadingComponent.html",[0,0.3,81,0.924]],["body/components/LoadingComponent.html",[0,0.505,1,0.819,2,1.419,3,0.182,4,0.155,5,1.069,6,1.069,7,1.069,8,1.069,9,0.13,11,1.069,12,2.229,13,1.952,15,1.419,17,1.419,19,0.182,24,0.891,27,0.767,30,0.027,31,1.037,43,0.501,44,0.463,48,0.182,49,0.359,60,0.936,61,1.517,62,1.517,63,1.069,64,1.796,65,1.069,66,1.069,67,0.766,68,1.017,69,1.069,70,0.766,71,1.069,72,0.766,73,1.069,74,0.766,75,1.069,76,0.766,77,0.876,78,1.069,79,0.766,80,1.069,81,1.471,82,1.069,83,0.766,84,1.069,85,0.766,86,1.069,87,0.766,88,1.069,89,0.766,90,1.069,91,0.819,92,1.069,93,1.069,94,1.069,95,0.011,96,0.016,97,0.011,116,2.566,118,0.716,214,0.949,230,0.624,237,1.328,281,2.023,289,2.055,300,1.419,305,3.574,319,3.918,653,1.989,887,1.989,896,2.518,897,4.226,898,3.574,899,4.226,900,5.102,901,3.574,902,4.913,903,4.226,904,2.978,905,2.978,906,2.978,907,2.215,908,2.978,909,2.978,910,2.518,911,4.96,912,2.978,913,6.433,914,4.913,915,4.913,916,2.518,917,2.978,918,6.764,919,6.033,920,3.574,921,4.226,922,4.226,923,2.978,924,6.496,925,5.866,926,5.866,927,5.866,928,5.347,929,2.978,930,5.347,931,2.978,932,5.347,933,5.866,934,3.562,935,4.226,936,6.496,937,4.226,938,4.226,939,4.226,940,3.144,941,4.226,942,4.226,943,4.226,944,3.574,945,4.226]],["title/components/LoginComponent.html",[0,0.3,83,0.864]],["body/components/LoginComponent.html",[0,0.499,1,0.796,2,1.39,3,0.177,4,0.151,5,1.039,6,1.039,7,1.039,8,1.039,9,0.126,11,1.039,12,2.22,13,1.944,15,1.39,17,1.39,19,0.177,20,0.5,24,0.751,26,2.005,27,1.085,29,0.65,30,0.026,31,0.814,32,0.385,33,0.606,35,0.415,36,1.066,37,1.066,43,0.978,44,0.45,45,1.376,48,0.177,49,0.637,54,3.988,57,2.446,60,0.909,61,1.487,62,1.487,63,1.039,64,1.772,65,1.039,66,1.039,67,0.745,68,0.996,69,1.039,70,0.745,71,1.039,72,0.745,73,1.039,74,0.745,75,1.039,76,0.745,77,0.851,78,1.039,79,0.745,80,1.039,81,0.796,82,1.039,83,1.358,84,1.039,85,0.745,86,1.039,87,0.745,88,1.039,89,0.745,90,1.039,91,0.796,92,1.039,93,1.039,94,1.039,95,0.011,96,0.015,97,0.011,118,0.996,132,1.486,164,3.525,194,1.591,214,0.93,216,2.126,217,2.71,222,3.08,224,1.969,226,1.399,229,2.333,230,1.013,237,1.301,264,2.514,281,1.991,289,1.858,300,1.624,315,2.446,317,1.757,335,2.483,352,2.936,385,0.851,395,2.765,439,3.597,458,1.611,463,4.089,465,1.487,466,1.757,502,2.152,613,2.446,617,2.009,619,2.152,687,1.191,781,3.08,797,2.936,819,2.765,850,2.514,859,2.446,946,2.446,947,3.501,948,4.835,949,4.14,950,4.14,951,5.585,952,4.14,953,4.835,954,4.463,955,2.893,956,4.14,957,2.893,958,2.446,959,2.893,960,2.893,961,3.08,962,2.893,963,2.893,964,3.08,965,2.446,966,2.446,967,2.893,968,2.893,969,4.463,970,3.633,971,4.463,972,4.835,973,2.446,974,3.501,975,2.446,976,2.446,977,2.446,978,2.893,979,2.152,980,1.932,981,2.893,982,2.893,983,2.446,984,4.14,985,2.893,986,3.08,987,2.893,988,2.893,989,2.893,990,2.893,991,2.765,992,3.08,993,2.446,994,3.08,995,2.893,996,2.893,997,2.446,998,2.446,999,4.14,1000,2.893,1001,2.893,1002,2.893,1003,2.893,1004,2.893,1005,2.893,1006,2.893,1007,2.152,1008,3.597,1009,2.446,1010,4.14,1011,4.14]],["title/injectables/LoginService.html",[26,1.206,234,0.987]],["body/injectables/LoginService.html",[3,0.177,4,0.151,9,0.126,14,1.283,19,0.177,20,0.501,24,0.879,26,1.49,27,1.173,29,1.088,30,0.027,31,0.815,32,0.463,33,1.015,35,0.596,36,1.247,37,1.247,42,2.52,43,0.941,44,0.452,48,0.177,49,0.702,54,2.52,95,0.011,96,0.015,97,0.011,116,2.52,118,1.165,150,1.283,164,3.885,194,1.116,196,2.008,214,0.932,216,2.488,217,2.872,223,2.455,226,1.515,229,2.94,230,1.325,232,2.772,233,1.116,234,1.22,235,1.381,242,3.087,243,3.21,244,1.381,247,2.16,250,2.011,300,0.975,348,1.835,385,1.22,465,1.042,466,1.763,540,1.283,617,1.394,656,1.491,665,2.942,678,1.616,679,2.872,681,1.835,686,2.697,687,2.395,727,1.491,769,2.697,785,1.381,800,2.311,801,2.52,802,2.52,958,2.455,961,3.932,964,3.087,965,3.51,966,3.51,992,4.705,993,5.348,1012,2.455,1013,4.844,1014,5.286,1015,5.286,1016,4.47,1017,5.286,1018,5.286,1019,5.286,1020,4.151,1021,4.151,1022,4.151,1023,3.087,1024,3.087,1025,3.51,1026,2.903,1027,4.705,1028,2.903,1029,2.903,1030,2.903,1031,2.903,1032,4.151,1033,4.151,1034,2.903,1035,4.151,1036,3.51,1037,4.151,1038,2.903,1039,2.903,1040,4.151,1041,2.903,1042,2.903,1043,3.51,1044,3.51,1045,4.151,1046,2.903,1047,4.151,1048,2.903,1049,2.16,1050,2.903,1051,2.455,1052,2.903,1053,2.455,1054,2.903,1055,2.903,1056,3.087,1057,2.903,1058,2.455,1059,4.151,1060,2.903,1061,2.903,1062,2.903,1063,2.903,1064,2.903,1065,2.903,1066,2.903,1067,2.903]],["title/classes/NavigationModel.html",[49,0.405,1068,2.498]],["body/classes/NavigationModel.html",[0,0.207,3,0.06,4,0.051,9,0.284,12,0.329,13,0.289,15,0.329,17,0.329,19,0.06,20,0.209,21,2.794,23,2.276,24,0.178,26,0.621,27,0.578,30,0.027,31,0.798,32,0.28,33,0.586,35,0.932,40,0.83,43,0.948,44,0.153,45,0.467,46,1.05,47,0.73,48,0.06,49,0.28,64,1.744,74,0.253,76,0.253,77,1.303,95,0.012,96,0.006,97,0.004,101,0.596,122,0.655,124,0.73,132,0.504,145,0.73,162,0.655,163,0.83,173,0.546,189,2.032,194,0.377,199,2.452,200,2.276,201,2.838,205,1.19,226,0.388,228,3.487,229,1.678,230,0.929,232,1.548,233,1.225,237,0.308,243,3.781,246,1.673,250,1.85,252,1.409,264,0.596,268,1.725,271,1.286,278,0.73,284,0.73,289,0.377,295,0.73,300,1.543,303,1.462,304,1.05,307,0.73,310,1.286,311,2.135,317,0.596,337,0.655,339,2.987,348,1.678,352,0.596,354,1.286,362,1.286,363,0.83,367,0.73,368,0.73,371,0.655,385,1.467,395,2.697,401,2.129,407,1.05,409,0.596,416,0.83,428,1.408,429,1.286,452,1.866,456,1.96,457,0.73,466,1.697,474,1.462,478,0.83,481,2.435,482,0.83,483,0.83,487,1.462,493,1.462,495,0.83,496,0.546,500,0.73,514,0.83,518,0.83,522,0.83,528,1.462,534,1.286,542,3.625,543,0.73,544,3.748,545,1.96,546,0.73,547,0.73,548,2.695,549,0.83,550,0.83,551,0.83,552,0.83,553,1.462,554,0.83,555,1.462,556,2.58,557,2.129,574,0.83,575,0.83,576,0.73,577,0.83,578,0.83,579,0.83,580,0.83,581,0.83,582,0.83,583,0.83,584,0.83,585,0.83,586,0.83,587,1.462,588,0.83,589,0.83,590,1.462,591,0.83,592,0.83,593,0.83,597,1.96,614,2.363,615,1.462,617,0.581,618,2.079,620,4.01,630,0.83,631,0.83,632,0.83,633,0.83,634,0.83,635,0.83,649,1.286,650,0.655,687,0.712,689,4.554,749,0.83,750,0.83,766,2.974,767,2.536,772,1.462,775,1.697,779,0.73,781,1.286,785,1.329,786,4.936,789,1.286,792,3.864,794,3.415,810,0.83,845,0.83,846,0.83,847,1.725,850,1.697,857,3.415,898,0.83,934,2.452,947,0.83,979,0.73,980,1.155,986,3.298,991,0.655,992,3.004,1023,1.286,1027,1.286,1036,1.96,1051,0.83,1068,4.665,1069,0.73,1070,0.83,1071,4.873,1072,4.433,1073,0.981,1074,0.981,1075,0.981,1076,0.981,1077,0.981,1078,1.155,1079,0.981,1080,1.408,1081,0.83,1082,1.729,1083,0.981,1084,0.981,1085,0.981,1086,0.981,1087,0.981,1088,0.83,1089,0.981,1090,1.462,1091,0.73,1092,0.981,1093,0.981,1094,1.729,1095,0.981,1096,0.981,1097,0.981,1098,0.83,1099,0.981,1100,0.981,1101,0.981,1102,0.981,1103,0.981,1104,0.981,1105,0.981,1106,1.729,1107,1.729,1108,5.44,1109,6.122,1110,0.981,1111,0.981,1112,1.729,1113,0.981,1114,0.981,1115,0.83,1116,0.981,1117,1.729,1118,0.981,1119,0.981,1120,0.981,1121,0.981,1122,0.83,1123,0.981,1124,0.981,1125,0.981,1126,0.981,1127,1.729,1128,1.729,1129,1.729,1130,1.462,1131,1.729,1132,0.981,1133,0.981,1134,0.981,1135,0.981,1136,4.596,1137,0.981,1138,0.981,1139,0.981,1140,0.981,1141,0.981,1142,4.433,1143,4.433,1144,0.981,1145,1.729,1146,1.729,1147,0.981,1148,1.729,1149,4.873,1150,1.729,1151,5.194,1152,1.729,1153,1.729,1154,1.729,1155,0.981,1156,0.981,1157,2.794,1158,5.284,1159,6.062,1160,4.038,1161,4.433,1162,0.981,1163,4.038,1164,0.981,1165,4.433,1166,3.797,1167,4.038,1168,4.433,1169,0.981,1170,3.16,1171,0.981,1172,4.038,1173,0.981,1174,0.981,1175,1.462,1176,0.981,1177,0.981,1178,1.729,1179,0.981,1180,1.729,1181,1.729,1182,0.981,1183,0.981,1184,1.729,1185,4.99,1186,1.729,1187,0.981,1188,1.729,1189,0.981,1190,0.981,1191,1.729,1192,0.981,1193,3.187,1194,1.729,1195,0.981,1196,0.981,1197,0.981,1198,0.981,1199,3.187,1200,1.729,1201,1.729,1202,0.981,1203,4.468,1204,4.22,1205,2.363,1206,0.981,1207,0.981,1208,0.981,1209,1.729,1210,2.794,1211,2.794,1212,0.981,1213,0.981,1214,1.729,1215,1.729,1216,1.729,1217,0.981,1218,1.729,1219,5.51,1220,3.517,1221,4.038,1222,0.981,1223,1.729,1224,0.981,1225,1.729,1226,1.729,1227,1.729,1228,0.981,1229,0.981,1230,0.981,1231,0.981,1232,0.981,1233,0.981,1234,0.981,1235,1.462,1236,0.981,1237,1.729,1238,0.981,1239,0.981,1240,0.981,1241,0.981,1242,0.981,1243,0.981,1244,0.981,1245,1.729,1246,0.981,1247,0.981,1248,0.981,1249,0.981,1250,0.981,1251,0.981,1252,1.729,1253,0.981,1254,0.981,1255,2.318,1256,0.981,1257,3.187,1258,1.729,1259,1.729,1260,0.981,1261,0.981,1262,0.981,1263,0.981,1264,1.729,1265,1.729,1266,0.981,1267,0.981,1268,0.981,1269,0.981,1270,0.981,1271,0.981,1272,0.981,1273,0.981,1274,0.981,1275,0.981,1276,0.981,1277,1.729,1278,0.981,1279,0.981,1280,2.318,1281,0.981,1282,0.981,1283,2.318,1284,2.794,1285,0.981,1286,0.981,1287,0.981,1288,0.981,1289,0.981,1290,0.981,1291,0.981,1292,0.981,1293,0.981,1294,0.981,1295,0.981,1296,0.981,1297,0.981,1298,0.981,1299,0.981,1300,0.981,1301,0.981,1302,0.981,1303,0.83,1304,0.981,1305,0.981,1306,2.318,1307,1.462,1308,0.981,1309,0.981,1310,0.981,1311,2.318,1312,0.981,1313,0.981,1314,0.981,1315,0.981,1316,0.981,1317,2.318,1318,0.981,1319,1.729,1320,1.729,1321,1.729,1322,1.729,1323,0.981,1324,1.729,1325,2.794,1326,2.794,1327,0.981,1328,0.981]],["title/classes/NewUser.html",[49,0.405,1329,2.039]],["body/classes/NewUser.html",[3,0.253,4,0.216,9,0.18,19,0.253,20,0.638,24,0.958,27,1.191,29,0.931,30,0.026,31,0.697,32,0.523,33,0.868,35,1.003,36,1.663,37,1.663,48,0.253,49,0.638,95,0.015,96,0.02,97,0.015,118,1.27,196,1.488,226,1.186,335,2.128,465,1.488,617,2.055,814,2.516,883,3.839,970,3.839,980,2.767,1007,3.082,1023,3.082,1069,3.082,1329,3.529,1330,3.504,1331,4.143,1332,4.143,1333,3.504,1334,4.222,1335,4.702,1336,4.702,1337,4.143,1338,5.28,1339,4.143,1340,4.143,1341,4.143,1342,4.143,1343,4.143,1344,4.143,1345,3.082,1346,3.504,1347,4.143,1348,4.143,1349,4.143,1350,4.143,1351,4.143,1352,4.143,1353,4.143,1354,4.143]],["title/components/PastcontestComponent.html",[0,0.3,85,0.864]],["body/components/PastcontestComponent.html",[0,0.489,1,0.754,2,1.337,3,0.167,4,0.143,5,0.984,6,0.984,7,0.984,8,0.984,9,0.119,11,0.984,12,2.201,13,1.927,15,1.337,17,1.337,19,0.167,20,0.481,23,3.022,24,0.722,27,1.147,29,0.616,30,0.026,31,0.789,32,0.49,33,0.574,35,0.739,36,1.325,37,1.325,43,0.789,44,0.427,48,0.167,49,0.331,60,0.861,61,1.43,62,1.43,63,0.984,64,1.729,65,0.984,66,0.984,67,0.705,68,1.128,69,0.984,70,0.705,71,0.984,72,0.705,73,0.984,74,0.705,75,0.984,76,0.705,77,0.806,78,0.984,79,0.705,80,0.984,81,0.754,82,0.984,83,0.705,84,0.984,85,1.325,86,0.984,87,0.705,88,0.984,89,0.705,90,0.984,91,0.754,92,0.984,93,0.984,94,0.984,95,0.01,96,0.015,97,0.01,118,1.128,189,2.417,192,2.418,194,1.053,196,1.43,214,0.895,226,0.895,229,1.76,230,0.983,233,2.458,237,1.251,246,1.894,250,0.92,252,2.665,257,3.277,258,3.438,260,3.126,265,3.367,268,2.962,272,3.367,281,1.931,289,1.978,296,2.418,297,2.448,300,1.337,321,3.367,337,2.66,343,3.367,346,3.367,364,1.664,420,2.318,441,2.039,449,4.353,465,1.43,480,3.32,484,4.067,485,3.733,486,3.966,492,4.353,501,3.966,502,3.829,558,2.318,559,2.039,560,2.318,561,2.318,562,3.367,568,2.318,569,2.318,570,2.318,571,2.318,598,2.318,599,2.039,600,2.318,601,2.318,602,2.318,603,2.318,643,3.367,644,3.367,645,3.367,646,3.367,701,3.829,764,3.367,850,2.418,900,3.367,901,3.367,991,3.438,1090,3.367,1091,2.962,1355,2.318,1356,3.982,1357,5.148,1358,3.367,1359,3.982,1360,3.982,1361,4.69,1362,3.982,1363,4.69,1364,4.69,1365,3.982,1366,3.982,1367,2.741,1368,3.982,1369,3.464,1370,3.982,1371,2.741,1372,3.982,1373,3.982,1374,3.367,1375,2.741,1376,2.741,1377,2.741,1378,2.741,1379,2.741,1380,2.741,1381,2.741,1382,3.982,1383,3.982]],["title/interfaces/Profile.html",[53,1.597,253,0.754]],["body/interfaces/Profile.html",[3,0.297,4,0.254,9,0.212,19,0.297,20,0.704,30,0.025,32,0.527,35,0.99,48,0.297,53,2.97,95,0.018,96,0.022,97,0.018,118,1.402,196,1.746,226,1.092,253,1.31,254,2.002,330,3.617,335,2.497,465,1.746,617,2.097,687,2.002,814,2.952,883,3.791,970,3.791,980,3.247,1334,4.324,1345,3.617,1346,4.111,1384,4.111,1385,6.474]],["title/components/ProfileComponent.html",[0,0.3,87,0.864]],["body/components/ProfileComponent.html",[0,0.447,1,0.61,2,1.388,3,0.135,4,0.116,5,0.796,6,0.796,7,0.796,8,0.796,9,0.097,11,0.796,12,2.121,13,1.857,15,1.141,17,1.141,19,0.135,20,0.559,24,0.84,26,1.893,27,1.093,29,0.498,30,0.026,31,0.841,32,0.472,33,0.464,35,0.878,36,0.571,37,0.571,43,0.78,44,0.345,45,1.054,48,0.135,49,0.268,53,2.693,60,0.697,61,1.484,62,1.22,63,0.796,64,1.556,65,0.796,66,0.796,67,0.571,68,0.818,69,0.796,70,0.571,71,0.796,72,0.571,73,0.796,74,0.571,75,0.796,76,0.571,77,1.215,78,0.796,79,0.571,80,0.796,81,0.61,82,0.796,83,0.571,84,0.796,85,0.571,86,0.796,87,1.192,88,0.796,89,0.571,90,0.796,91,0.61,92,0.796,93,0.796,94,0.796,95,0.008,96,0.013,97,0.008,118,0.818,119,3.095,196,1.893,197,2.064,198,2.064,205,2.707,206,2.528,214,0.763,220,2.874,224,1.616,226,1.354,230,0.464,233,1.306,237,1.068,242,2.528,243,2.51,246,1.966,260,2.064,270,2.204,281,1.702,289,1.78,296,2.814,297,2.204,300,1.141,304,1.346,319,2.27,364,1.346,404,2.874,428,2.51,430,2.528,443,2.874,455,2.528,475,2.27,480,2.814,481,2.379,485,3.525,500,3.074,612,1.874,618,1.649,650,2.27,652,3.717,653,1.481,655,1.649,687,2.171,722,2.27,819,2.27,826,2.874,834,2.874,873,1.874,874,3.074,875,2.528,876,1.874,877,2.528,878,2.528,879,3.717,880,1.874,881,1.874,883,2.51,886,3.922,887,1.481,888,1.874,892,2.27,893,1.874,895,4.225,907,1.649,910,3.495,920,1.874,934,3.868,961,3.447,964,3.922,979,2.528,1025,2.874,1088,1.874,1130,1.874,1170,1.649,1334,3.665,1335,3.717,1336,3.717,1369,2.064,1386,1.874,1387,4.082,1388,4.133,1389,3.398,1390,4.133,1391,4.133,1392,4.133,1393,2.217,1394,3.782,1395,3.398,1396,2.217,1397,3.398,1398,3.398,1399,3.398,1400,2.217,1401,2.217,1402,2.217,1403,2.217,1404,2.217,1405,2.217,1406,2.217,1407,2.217,1408,2.217,1409,2.217,1410,2.217,1411,2.217,1412,2.217,1413,2.217,1414,2.217,1415,2.217,1416,2.217,1417,2.217,1418,2.217,1419,2.217,1420,2.217,1421,2.217,1422,2.217,1423,2.217,1424,2.217,1425,2.217,1426,2.217,1427,2.217,1428,2.217,1429,2.874,1430,3.398,1431,4.458,1432,1.874,1433,4.788,1434,2.217,1435,4.133,1436,3.398,1437,1.874,1438,3.495,1439,4.225,1440,3.495,1441,3.074,1442,2.217,1443,4.133,1444,2.217,1445,2.217,1446,2.217,1447,1.874,1448,3.495,1449,1.874,1450,1.874,1451,2.874,1452,1.874,1453,1.874,1454,1.874,1455,2.217,1456,2.874,1457,2.217,1458,3.398,1459,2.217,1460,4.133,1461,2.217,1462,3.398,1463,4.633,1464,2.217,1465,2.217,1466,2.217,1467,1.874,1468,2.217,1469,2.217,1470,2.217,1471,3.398,1472,2.217,1473,2.217,1474,2.874,1475,2.217,1476,3.398,1477,2.217,1478,3.398,1479,4.133,1480,2.217,1481,2.217,1482,2.217,1483,2.217,1484,2.217,1485,2.217,1486,2.217,1487,2.217,1488,2.217,1489,2.217,1490,2.217,1491,2.217,1492,2.217,1493,2.217,1494,2.217,1495,2.217,1496,2.217,1497,2.217,1498,2.217,1499,2.217]],["title/injectables/ProfileService.html",[234,0.987,1394,2.243]],["body/injectables/ProfileService.html",[3,0.232,4,0.198,9,0.165,14,1.676,19,0.232,20,0.602,24,0.688,27,1.145,29,1.12,30,0.026,31,0.839,32,0.49,33,1.045,35,0.883,36,1.434,37,1.434,43,1.034,44,0.59,48,0.232,49,0.602,53,2.924,95,0.014,96,0.018,97,0.014,150,1.676,194,1.457,196,2.207,214,1.12,216,2.56,217,2.861,224,2.65,226,1.381,229,2.616,230,1.045,234,1.466,235,1.804,244,1.804,247,2.821,250,2.119,335,3.039,385,1.466,458,3.423,617,1.871,656,1.947,661,4.711,678,2.111,679,2.861,681,1.676,687,2.294,727,1.947,769,3.102,785,1.804,797,3.594,800,2.776,801,3.028,802,3.028,1016,5.004,1024,2.821,1053,3.207,1056,3.709,1369,2.303,1387,3.709,1394,3.33,1500,3.207,1501,5.571,1502,4.986,1503,4.986,1504,3.792,1505,4.986,1506,3.792,1507,4.986,1508,3.792,1509,4.986,1510,3.792,1511,3.792,1512,3.792,1513,3.792,1514,3.792,1515,3.792,1516,3.792]],["title/injectables/RegService.html",[112,1.869,234,0.987]],["body/injectables/RegService.html",[0,0.372,3,0.254,4,0.217,9,0.181,14,1.837,19,0.254,20,0.639,24,0.754,27,1.111,29,1.189,30,0.026,31,0.89,32,0.515,33,1.109,35,0.597,36,1.362,37,1.362,43,1.031,44,0.647,48,0.254,49,0.502,55,3.534,95,0.015,96,0.02,97,0.015,112,2.946,150,1.837,196,1.493,214,1.189,222,3.092,224,1.977,226,1.421,229,2.339,230,1.22,234,1.556,235,1.977,244,1.977,250,1.396,335,2.717,385,1.802,458,2.314,465,1.493,540,1.837,656,2.134,665,3.535,678,2.314,679,2.989,681,1.837,686,3.412,687,1.712,727,2.134,769,3.241,785,1.977,797,3.213,800,2.946,801,3.213,802,3.213,1049,3.092,1056,3.092,1058,3.515,1329,3.535,1517,3.515,1518,5.291,1519,5.291,1520,4.157,1521,4.157,1522,5.291,1523,4.157,1524,5.291,1525,4.157,1526,4.157,1527,4.157,1528,4.157]],["title/components/RegisterComponent.html",[0,0.3,89,0.864]],["body/components/RegisterComponent.html",[0,0.437,1,0.581,2,1.099,3,0.129,4,0.11,5,0.758,6,0.758,7,0.758,8,0.758,9,0.213,11,0.758,12,2.101,13,1.84,15,1.099,17,1.099,19,0.129,20,0.395,21,2.318,24,0.383,27,1.162,29,0.9,30,0.026,31,1.002,32,0.474,33,0.84,35,0.648,36,1.388,37,1.388,43,0.907,44,0.328,46,1.987,48,0.129,49,0.255,55,4.137,60,0.663,61,1.175,62,1.175,63,0.758,64,1.516,65,0.758,66,0.758,67,0.543,68,0.787,69,0.758,70,0.543,71,0.758,72,0.543,73,0.758,74,0.543,75,0.758,76,0.543,77,0.621,78,0.758,79,0.543,80,0.758,81,0.581,82,0.758,83,0.543,84,0.758,85,0.543,86,0.758,87,0.543,88,0.758,89,1.162,90,0.758,91,0.581,92,0.758,93,0.758,94,0.758,95,0.008,96,0.012,97,0.008,112,2.231,118,0.787,119,1.41,122,2.185,132,1.084,150,0.933,158,1.785,189,1.996,194,0.811,196,1.754,200,1.084,205,1.084,214,0.735,216,1.68,217,2.058,226,0.735,228,2.433,229,2.285,230,1.199,232,1.41,233,1.735,237,1.028,250,1.811,251,1.785,252,2.285,257,1.822,264,2.741,281,1.65,289,1.54,293,3.358,300,1.641,304,1.987,309,1.282,310,1.57,318,2.767,330,1.57,339,1.175,348,1.996,349,3.817,350,2.767,352,2.433,371,1.41,385,1.52,395,2.676,410,2.767,439,2.981,458,1.175,465,1.439,480,1.282,516,2.434,540,0.933,559,1.57,599,1.57,617,1.346,619,2.434,650,1.41,652,3.358,653,1.41,655,1.57,679,2.058,681,1.771,686,1.175,727,1.68,769,1.822,785,1.556,789,2.434,797,1.282,800,1.175,850,2.433,879,1.57,883,3.55,884,1.57,886,2.981,887,1.41,892,1.41,907,2.434,911,1.785,916,2.767,934,1.987,940,1.57,954,3.817,969,3.817,970,2.967,973,1.785,974,3.388,975,1.785,976,1.785,977,3.817,983,1.785,986,2.434,994,1.57,997,1.785,998,1.785,1007,3.634,1008,2.434,1009,3.388,1049,1.57,1170,1.57,1175,2.767,1307,4.838,1329,2.741,1333,2.767,1334,3.452,1335,2.434,1336,2.434,1369,1.282,1387,2.434,1431,2.767,1432,1.785,1433,2.767,1437,1.785,1438,2.767,1439,2.767,1440,1.785,1441,2.981,1447,1.785,1448,3.388,1449,2.767,1450,2.767,1451,2.767,1452,1.785,1453,1.785,1454,1.785,1456,2.767,1467,1.785,1529,1.785,1530,2.767,1531,3.272,1532,3.272,1533,4.007,1534,3.272,1535,3.272,1536,3.272,1537,4.514,1538,3.272,1539,3.272,1540,3.272,1541,4.007,1542,3.272,1543,3.272,1544,3.272,1545,4.514,1546,3.272,1547,2.11,1548,2.11,1549,2.11,1550,2.11,1551,2.11,1552,2.11,1553,2.11,1554,2.11,1555,2.11,1556,2.11,1557,2.11,1558,3.272,1559,2.11,1560,2.11,1561,2.11,1562,2.11,1563,3.272,1564,2.11,1565,3.272,1566,3.272,1567,2.11,1568,2.11,1569,2.11,1570,2.11,1571,2.11,1572,2.11,1573,2.11,1574,2.11,1575,2.11,1576,2.11,1577,2.11,1578,2.11,1579,2.11,1580,2.11,1581,2.11,1582,2.11,1583,2.11,1584,2.11,1585,2.11,1586,2.11,1587,2.11,1588,2.11,1589,2.11,1590,2.11,1591,2.11,1592,2.11,1593,2.11,1594,2.11,1595,3.272,1596,2.11,1597,2.11,1598,2.11,1599,2.11,1600,2.11,1601,2.11,1602,2.11,1603,2.11,1604,2.11,1605,2.11,1606,3.272,1607,4.514,1608,3.272,1609,4.885,1610,3.272,1611,3.272,1612,3.272,1613,3.272,1614,2.11,1615,2.11,1616,2.11,1617,2.11,1618,2.11,1619,2.11,1620,2.11,1621,2.11,1622,2.11,1623,2.11,1624,3.272]],["title/interfaces/RenameFile.html",[253,0.754,775,2.039]],["body/interfaces/RenameFile.html",[3,0.309,4,0.264,9,0.291,19,0.309,20,0.72,30,0.026,32,0.506,35,0.973,48,0.309,95,0.019,96,0.022,97,0.019,233,2.439,253,1.136,254,2.081,775,3.623,1203,5.544,1204,5.544,1625,4.274]],["title/interfaces/RunFile.html",[253,0.754,496,1.869]],["body/interfaces/RunFile.html",[3,0.304,4,0.26,9,0.217,19,0.304,20,0.714,30,0.026,32,0.52,35,0.994,48,0.304,95,0.018,96,0.022,97,0.018,253,1.12,254,2.053,348,2.885,496,3.295,556,3.964,557,4.36,617,2.192,1626,4.216]],["title/interfaces/RunInput.html",[253,0.754,1080,2.039]],["body/interfaces/RunInput.html",[3,0.303,4,0.259,9,0.216,19,0.303,20,0.712,30,0.026,32,0.519,35,1.006,48,0.303,95,0.018,96,0.022,97,0.018,253,1.113,254,2.041,348,2.88,556,3.956,557,4.351,617,2.188,1080,3.581,1627,4.191]],["title/interfaces/RunOutput.html",[253,0.754,1628,2.243]],["body/interfaces/RunOutput.html",[3,0.314,4,0.269,9,0.224,19,0.314,20,0.728,30,0.026,32,0.48,35,0.918,48,0.314,95,0.019,96,0.022,97,0.019,233,2.457,253,1.156,254,2.119,401,4.405,700,4.906,1628,4.027,1629,4.352]],["title/injectables/RunService.html",[234,0.987,1078,2.243]],["body/injectables/RunService.html",[3,0.224,4,0.191,9,0.238,14,1.619,19,0.224,20,0.588,24,0.664,27,1.102,29,1.23,30,0.027,31,0.921,32,0.484,33,1.147,35,0.959,36,1.254,37,1.254,43,1.022,44,0.57,48,0.224,49,0.442,95,0.014,96,0.018,97,0.014,150,1.619,197,2.958,198,2.958,199,2.958,200,2.502,214,1.094,224,2.317,228,2.958,230,1.223,234,1.433,235,1.742,244,1.742,250,1.636,309,3.325,348,1.619,370,3.096,385,1.433,401,3.898,409,2.958,465,1.749,481,2.997,496,2.712,540,1.619,617,1.96,656,1.88,665,3.325,678,2.039,679,2.997,681,2.154,686,3.384,719,3.624,722,3.254,727,1.88,769,3.048,779,4.649,785,1.742,800,2.712,801,2.958,802,2.958,808,4.12,809,3.096,814,2.958,816,3.096,1078,3.254,1080,3.544,1081,3.096,1122,4.12,1374,4.12,1429,4.12,1628,2.446,1630,3.096,1631,4.872,1632,4.872,1633,3.662,1634,4.935,1635,4.872,1636,3.662,1637,3.662,1638,4.872,1639,4.872,1640,4.872,1641,3.662,1642,3.662]],["title/components/TimerComponent.html",[0,0.3,91,0.924]],["body/components/TimerComponent.html",[0,0.473,1,0.694,2,1.258,3,0.154,4,0.132,5,0.905,6,0.905,7,0.905,8,0.905,9,0.11,11,0.905,12,2.171,13,1.901,15,1.258,17,1.258,19,0.154,20,0.452,21,3.383,24,0.679,27,1.195,29,1.111,30,0.026,31,0.832,32,0.506,33,0.785,35,0.538,36,1.273,37,1.273,43,0.752,44,0.392,48,0.154,49,0.304,60,0.792,61,1.345,62,1.776,63,0.905,64,1.661,65,0.905,66,0.905,67,0.649,68,0.901,69,0.905,70,0.649,71,0.905,72,0.649,73,0.905,74,0.649,75,0.905,76,0.649,77,0.741,78,0.905,79,0.649,80,0.905,81,0.694,82,0.905,83,0.649,84,0.905,85,0.649,86,0.905,87,0.649,88,0.905,89,0.649,90,0.905,91,1.361,92,2.115,93,0.905,94,0.905,95,0.009,96,0.014,97,0.009,118,0.607,173,2.085,194,0.969,196,1.604,214,0.841,216,1.923,217,2.539,230,1.036,237,1.177,246,2.912,252,1.115,260,3.003,263,2.786,278,2.786,279,3.167,281,1.84,289,1.9,300,1.661,348,2.336,385,1.101,450,4.848,455,2.786,481,2.539,484,2.786,494,4.182,516,4.476,538,2.132,539,2.132,540,1.975,564,2.132,565,2.132,566,2.132,642,2.132,874,3.324,875,1.876,877,1.876,878,1.876,889,3.167,892,2.501,1091,1.876,1358,3.167,1441,1.876,1643,2.132,1644,3.745,1645,3.745,1646,3.745,1647,3.745,1648,3.745,1649,3.745,1650,3.745,1651,3.745,1652,3.745,1653,3.745,1654,3.745,1655,3.745,1656,3.745,1657,3.745,1658,4.468,1659,3.745,1660,5.284,1661,4.468,1662,4.468,1663,5.284,1664,4.468,1665,4.468,1666,5.284,1667,4.468,1668,5.284,1669,4.945,1670,3.745,1671,4.945,1672,3.745,1673,4.468,1674,2.521,1675,3.745,1676,2.521,1677,2.521,1678,3.745,1679,2.521,1680,2.521,1681,2.521,1682,2.521,1683,2.521,1684,2.521,1685,3.745,1686,2.521,1687,2.521,1688,3.745,1689,2.521,1690,4.945,1691,2.521,1692,2.521,1693,2.521,1694,2.521,1695,2.521,1696,4.468,1697,2.521,1698,2.521,1699,2.521,1700,2.521,1701,2.521,1702,2.521,1703,2.521,1704,2.521,1705,2.132,1706,2.521,1707,2.521,1708,2.521,1709,4.945,1710,4.945,1711,4.945,1712,2.521,1713,4.468,1714,2.521,1715,3.745,1716,2.521,1717,2.521,1718,2.521,1719,2.521,1720,2.521,1721,3.745,1722,3.745,1723,3.745,1724,2.521,1725,2.521,1726,2.521,1727,2.521,1728,2.521,1729,2.521]],["title/interceptors/TokenInterceptorService.html",[113,2.039,863,2.243]],["body/interceptors/TokenInterceptorService.html",[3,0.237,4,0.202,9,0.169,14,1.714,19,0.237,24,1.022,26,1.393,27,0.918,29,1.137,30,0.026,31,0.851,32,0.309,33,1.06,43,0.948,44,0.604,45,1.845,47,2.885,48,0.237,49,0.721,54,2.355,95,0.014,96,0.019,97,0.014,113,3.073,118,1.217,150,1.714,164,3.987,196,1.817,205,2.598,214,1.137,226,0.871,230,0.813,234,1.488,235,1.845,237,1.59,238,4.279,243,3.42,244,1.845,250,1.302,317,3.073,335,3.18,457,4.606,462,4.763,466,3.073,681,2.237,819,2.591,852,3.28,863,3.38,884,2.885,991,2.591,1008,2.885,1043,3.28,1044,4.279,1205,3.28,1369,2.355,1474,4.279,1730,3.879,1731,4.763,1732,3.28,1733,5.06,1734,3.879,1735,6.691,1736,3.879,1737,5.06,1738,5.06,1739,3.879,1740,3.879,1741,5.06,1742,5.06,1743,5.632,1744,5.632,1745,5.06,1746,5.06,1747,5.06,1748,5.06,1749,3.879,1750,5.632,1751,3.879,1752,3.879,1753,3.879,1754,3.879,1755,3.879,1756,3.879,1757,3.879,1758,3.879,1759,3.879,1760,3.879,1761,3.879,1762,3.879,1763,3.879,1764,3.879,1765,3.879,1766,3.879,1767,3.879,1768,3.879,1769,3.879,1770,3.879]],["title/interfaces/User.html",[226,0.754,253,0.754]],["body/interfaces/User.html",[3,0.313,4,0.267,9,0.223,19,0.313,20,0.726,30,0.025,32,0.479,35,0.946,48,0.313,95,0.019,96,0.022,97,0.019,118,1.447,226,1.351,253,1.351,254,2.111,617,2.212,814,3.113,970,4,1024,3.813,1345,3.813,1771,4.334,1772,3.813]],["title/coverage.html",[1773,3.886]],["body/coverage.html",[0,0.605,1,1.012,9,0.213,10,3.11,26,1.32,30,0.026,32,0.293,49,0.59,53,1.749,67,0.946,68,0.885,70,0.946,72,0.946,74,0.946,76,0.946,79,0.946,81,1.012,83,0.946,85,0.946,87,0.946,89,0.946,91,1.012,95,0.014,96,0.018,97,0.014,112,2.047,113,2.233,159,2.233,162,2.456,166,2.456,168,2.456,211,2.735,213,3.11,226,0.826,234,1.84,253,1.475,255,3.11,261,3.635,262,3.11,270,1.749,297,1.749,385,1.081,402,3.11,430,2.735,446,3.11,472,3.11,496,2.047,657,3.11,740,3.11,743,3.11,744,3.11,765,3.11,767,2.456,768,3.11,775,2.233,817,3.11,839,3.635,863,2.456,896,3.11,934,4.086,940,2.735,944,4.64,946,3.11,971,4.944,1012,3.11,1068,2.735,1070,4.131,1078,2.456,1080,2.233,1158,3.11,1329,2.233,1330,3.11,1355,3.11,1384,3.11,1386,3.11,1394,2.456,1500,3.11,1517,3.11,1529,3.11,1625,3.11,1626,3.11,1627,3.11,1628,2.456,1629,3.11,1630,3.11,1643,3.11,1731,3.11,1732,3.11,1771,3.11,1773,3.11,1774,3.677,1775,3.677,1776,4.886,1777,4.886,1778,4.886,1779,3.677,1780,3.677,1781,3.677,1782,3.677,1783,4.886,1784,3.677,1785,3.677,1786,3.677,1787,5.487,1788,3.677,1789,3.11,1790,3.677,1791,4.886,1792,5.847,1793,5.487,1794,3.677,1795,3.677,1796,3.677,1797,3.677,1798,3.677,1799,3.677,1800,3.677,1801,3.677,1802,4.886,1803,4.886,1804,3.677,1805,3.677,1806,3.677,1807,3.677,1808,3.677,1809,3.677,1810,3.677,1811,3.677,1812,3.677,1813,3.11,1814,5.847,1815,3.11,1816,4.131,1817,3.11,1818,3.11,1819,3.677]],["title/dependencies.html",[101,2.454,1820,2.798]],["body/dependencies.html",[30,0.026,44,0.725,95,0.017,96,0.021,97,0.017,101,2.828,103,3.465,126,4.225,127,3.794,132,2.392,173,3.412,174,4.803,175,3.939,176,3.939,178,3.939,179,3.939,194,1.79,540,2.059,542,3.465,543,3.465,1821,4.658,1822,4.658,1823,4.658,1824,5.75,1825,4.658,1826,5.68,1827,4.658,1828,4.658,1829,4.658,1830,4.658,1831,4.658,1832,4.658,1833,4.658,1834,5.68,1835,4.658,1836,4.658,1837,5.68,1838,4.658,1839,4.658,1840,4.658,1841,4.658,1842,4.658,1843,4.658,1844,4.658,1845,4.658,1846,4.658,1847,4.658,1848,4.658,1849,4.658,1850,4.658,1851,4.658]],["title/index.html",[19,0.171,1852,2.798,1853,2.798]],["body/index.html",[0,0.545,4,0.24,13,1.355,30,0.021,31,0.775,38,3.896,46,3.426,95,0.017,96,0.021,97,0.017,116,2.798,173,3.396,311,3.426,317,3.704,322,5.158,337,3.769,339,2.565,374,3.86,385,1.355,407,3.426,481,2.366,649,4.851,847,3.427,994,3.427,1027,3.427,1115,5.158,1235,3.896,1303,4.771,1530,3.896,1634,3.896,1705,3.896,1824,3.896,1854,6.099,1855,4.607,1856,4.607,1857,6.721,1858,4.607,1859,4.607,1860,4.607,1861,4.607,1862,4.607,1863,4.607,1864,4.607,1865,6.522,1866,4.607,1867,4.607,1868,4.607,1869,3.896,1870,5.643,1871,6.357,1872,4.607,1873,4.607,1874,4.607,1875,4.607,1876,4.607,1877,4.607,1878,4.607,1879,4.607]],["title/modules.html",[100,2.791]],["body/modules.html",[30,0.023,95,0.02,96,0.023,97,0.02,99,3.612,100,3.284,111,3.284,127,3.612,848,4.573,1880,5.408,1881,6.205,1882,5.408,1883,5.408]],["title/overview.html",[1884,3.886]],["body/overview.html",[1,1.816,2,1.421,26,2.108,30,0.026,60,1.33,67,1.511,70,1.511,72,1.511,74,1.511,76,1.511,79,1.511,81,1.615,83,1.511,85,1.511,87,1.511,89,1.511,91,1.615,95,0.016,96,0.02,97,0.016,98,2.57,99,4.768,100,2.57,101,2.57,102,3.579,103,3.149,104,3.579,105,3.149,106,3.579,107,3.579,108,3.579,109,3.579,110,3.579,111,3.565,112,3.268,113,3.565,114,4.526,115,3.579,116,2.57,192,2.57,211,3.149,254,1.743,428,2.57,429,3.982,656,2.173,1069,3.149,1098,3.579,1789,3.579,1884,3.579,1885,4.233,1886,4.233]],["title/routes.html",[192,2.791]],["body/routes.html",[30,0.023,95,0.02,96,0.023,97,0.02,192,3.348]],["title/miscellaneous/variables.html",[1772,3.007,1887,2.366]],["body/miscellaneous/variables.html",[19,0.306,30,0.026,32,0.521,36,1.627,37,1.627,95,0.019,96,0.022,97,0.019,189,2.622,252,2.212,785,2.821,839,4.862,1772,3.723,1813,4.232,1815,4.232,1816,4.232,1817,5.015,1818,5.015,1869,5.015,1887,4.232,1888,5.931,1889,5.005,1890,5.005,1891,5.005,1892,5.005,1893,5.005]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":934,"title":{},"body":{"components/LoadingComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1851,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1847,"title":{},"body":{"dependencies.html":{}}}],["0.2em",{"_index":1495,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.2s",{"_index":1489,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.3em",{"_index":1479,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.5em",{"_index":1482,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.8em",{"_index":1725,"title":{},"body":{"components/TimerComponent.html":{}}}],["0/1",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1810,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1445,"title":{},"body":{"components/ProfileComponent.html":{}}}],["08",{"_index":1618,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1",{"_index":428,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"overview.html":{}}}],["1.1.11",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1480,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1.3.0",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["1.4.12",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["1.5px",{"_index":654,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["1.5rem",{"_index":1615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1.8",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["1/11",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":1812,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["1/31",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1886,"title":{},"body":{"overview.html":{}}}],["10.1.4",{"_index":1824,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":319,"title":{},"body":{"components/CompCreateComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{}}}],["100%!important",{"_index":1473,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1000",{"_index":1688,"title":{},"body":{"components/TimerComponent.html":{}}}],["104",{"_index":1617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["11",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":1455,"title":{},"body":{"components/ProfileComponent.html":{}}}],["13",{"_index":1885,"title":{},"body":{"overview.html":{}}}],["14",{"_index":584,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["15",{"_index":943,"title":{},"body":{"components/LoadingComponent.html":{}}}],["15px",{"_index":1437,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["16",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["163a939a7929",{"_index":1100,"title":{},"body":{"classes/NavigationModel.html":{}}}],["16em",{"_index":912,"title":{},"body":{"components/LoadingComponent.html":{}}}],["16px",{"_index":576,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["1a202c",{"_index":1434,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1c9ee9",{"_index":1488,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1cm",{"_index":1481,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1em",{"_index":1729,"title":{},"body":{"components/TimerComponent.html":{}}}],["1px",{"_index":1441,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["1rem",{"_index":1459,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1rem!important",{"_index":1468,"title":{},"body":{"components/ProfileComponent.html":{}}}],["2",{"_index":429,"title":{},"body":{"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{},"overview.html":{}}}],["2.0.0",{"_index":1849,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1845,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["20/50",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["2014",{"_index":645,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["20em",{"_index":908,"title":{},"body":{"components/LoadingComponent.html":{}}}],["20px",{"_index":1432,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["21s",{"_index":921,"title":{},"body":{"components/LoadingComponent.html":{}}}],["24",{"_index":1685,"title":{},"body":{"components/TimerComponent.html":{}}}],["25",{"_index":944,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["25rem",{"_index":1457,"title":{},"body":{"components/ProfileComponent.html":{}}}],["28",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":1444,"title":{},"body":{"components/ProfileComponent.html":{}}}],["2rem",{"_index":1621,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3",{"_index":430,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["3.1.0",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["3/12",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1471,"title":{},"body":{"components/ProfileComponent.html":{}}}],["33",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["3852f21a4ea0",{"_index":1657,"title":{},"body":{"components/TimerComponent.html":{}}}],["3bb7ff",{"_index":1491,"title":{},"body":{"components/ProfileComponent.html":{}}}],["3px",{"_index":1442,"title":{},"body":{"components/ProfileComponent.html":{}}}],["4",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["4.0.6",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":940,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["42",{"_index":1808,"title":{},"body":{"coverage.html":{}}}],["4b4b4b",{"_index":919,"title":{},"body":{"components/LoadingComponent.html":{}}}],["4s",{"_index":925,"title":{},"body":{"components/LoadingComponent.html":{}}}],["5",{"_index":1811,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["5/8",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":911,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegisterComponent.html":{}}}],["50px",{"_index":1624,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6",{"_index":1098,"title":{},"body":{"classes/NavigationModel.html":{},"overview.html":{}}}],["6.6.0",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1690,"title":{},"body":{"components/TimerComponent.html":{}}}],["62",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":935,"title":{},"body":{"components/LoadingComponent.html":{}}}],["66",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":644,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["75",{"_index":937,"title":{},"body":{"components/LoadingComponent.html":{}}}],["8/19",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":938,"title":{},"body":{"components/LoadingComponent.html":{}}}],["86",{"_index":941,"title":{},"body":{"components/LoadingComponent.html":{}}}],["8px",{"_index":1463,"title":{},"body":{"components/ProfileComponent.html":{}}}],["9",{"_index":1789,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9/13",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":945,"title":{},"body":{"components/LoadingComponent.html":{}}}],["92",{"_index":939,"title":{},"body":{"components/LoadingComponent.html":{}}}],["96",{"_index":942,"title":{},"body":{"components/LoadingComponent.html":{}}}],["_login",{"_index":221,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_login:loginservice",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_loginserv",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["_loginserv:loginservice",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["_router",{"_index":216,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["_router:router",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{}}}],["a.button3",{"_index":1476,"title":{},"body":{"components/ProfileComponent.html":{}}}],["a.button3:hover",{"_index":1490,"title":{},"body":{"components/ProfileComponent.html":{}}}],["absolute",{"_index":909,"title":{},"body":{"components/LoadingComponent.html":{}}}],["accept",{"_index":276,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["accesible",{"_index":336,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["access",{"_index":719,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["accessible",{"_index":821,"title":{},"body":{"components/HomeComponent.html":{}}}],["accumulates",{"_index":308,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["accurate",{"_index":279,"title":{},"body":{"components/CompCreateComponent.html":{},"components/TimerComponent.html":{}}}],["ace",{"_index":542,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"dependencies.html":{}}}],["ace.ace.editor",{"_index":518,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.config.set(\"fontsize",{"_index":575,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.config.set('basepath",{"_index":574,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.edit(this.editor.nativeelement",{"_index":593,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.require('ace/ext/beautify",{"_index":579,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.require('ace/ext/language_tools",{"_index":577,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["aceeditor",{"_index":478,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["acess",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activate",{"_index":227,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activate/deactivate",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":502,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{}}}],["activatedroute,router",{"_index":541,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["actual_component",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["adapter",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["add",{"_index":852,"title":{},"body":{"components/HomeComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["adding",{"_index":1186,"title":{},"body":{"classes/NavigationModel.html":{}}}],["address",{"_index":1145,"title":{},"body":{"classes/NavigationModel.html":{}}}],["adds",{"_index":1184,"title":{},"body":{"classes/NavigationModel.html":{}}}],["afterviewinit",{"_index":474,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["again",{"_index":439,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["agrawal",{"_index":870,"title":{},"body":{"components/HomeComponent.html":{}}}],["al",{"_index":1192,"title":{},"body":{"classes/NavigationModel.html":{}}}],["alert(\"an",{"_index":1142,"title":{},"body":{"classes/NavigationModel.html":{}}}],["alert(\"competition",{"_index":608,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["alert(\"invalid",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(\"something",{"_index":621,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["alert(response",{"_index":394,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["align",{"_index":650,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["allocatetimeunits",{"_index":1670,"title":{},"body":{"components/TimerComponent.html":{}}}],["allocatetimeunits(timedifference",{"_index":1678,"title":{},"body":{"components/TimerComponent.html":{}}}],["allowed",{"_index":479,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["allows",{"_index":1103,"title":{},"body":{"classes/NavigationModel.html":{}}}],["along",{"_index":268,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{}}}],["alongside",{"_index":312,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["ambiance",{"_index":549,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["angular",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/TimerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular's",{"_index":272,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["angular/animations",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["angular/compiler",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{}}}],["angular/material/form",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":924,"title":{},"body":{"components/LoadingComponent.html":{}}}],["another",{"_index":315,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{}}}],["api",{"_index":465,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["apis",{"_index":1398,"title":{},"body":{"components/ProfileComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["app.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appended",{"_index":1762,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["application/json",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{}}}],["appmodule",{"_index":99,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":411,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["approutingmodule",{"_index":111,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["april",{"_index":643,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["arial",{"_index":1724,"title":{},"body":{"components/TimerComponent.html":{}}}],["arora",{"_index":865,"title":{},"body":{"components/HomeComponent.html":{}}}],["artifacts",{"_index":1866,"title":{},"body":{"index.html":{}}}],["aryan",{"_index":869,"title":{},"body":{"components/HomeComponent.html":{}}}],["auth.guard",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authenticate",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{}}}],["authenticated",{"_index":859,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["authentication",{"_index":1043,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["authguard",{"_index":159,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authization",{"_index":1761,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authorization",{"_index":1768,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authorized",{"_index":1764,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["auto",{"_index":1458,"title":{},"body":{"components/ProfileComponent.html":{}}}],["autocomplete",{"_index":1095,"title":{},"body":{"classes/NavigationModel.html":{}}}],["automatically",{"_index":1861,"title":{},"body":{"index.html":{}}}],["available",{"_index":1883,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":1609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["b2b2b2",{"_index":936,"title":{},"body":{"components/LoadingComponent.html":{}}}],["backend",{"_index":850,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["background",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["bar",{"_index":894,"title":{},"body":{"components/HomeComponent.html":{}}}],["basic",{"_index":898,"title":{},"body":{"components/LoadingComponent.html":{},"classes/NavigationModel.html":{}}}],["basically",{"_index":1331,"title":{},"body":{"classes/NewUser.html":{}}}],["basiceditoroptions",{"_index":580,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["beautify",{"_index":555,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["beautifycontents",{"_index":489,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["being",{"_index":611,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["bg",{"_index":1469,"title":{},"body":{"components/ProfileComponent.html":{}}}],["bgimg",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{}}}],["block",{"_index":1478,"title":{},"body":{"components/ProfileComponent.html":{}}}],["body",{"_index":480,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["body,h1,h2,h3,h4,h5,h6",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["boolean",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunOutput.html":{}}}],["bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":652,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom",{"_index":1467,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["box",{"_index":1439,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["break",{"_index":1170,"title":{},"body":{"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["browse",{"_index":1881,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["buffer",{"_index":906,"title":{},"body":{"components/LoadingComponent.html":{}}}],["build",{"_index":1865,"title":{},"body":{"index.html":{}}}],["builds",{"_index":543,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"dependencies.html":{}}}],["builds/src",{"_index":544,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["button",{"_index":304,"title":{},"body":{"components/CompCreateComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["c",{"_index":648,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{}}}],["c++,python,ruby",{"_index":842,"title":{},"body":{"components/HomeComponent.html":{}}}],["c_cpp",{"_index":528,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["call",{"_index":222,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/RegService.html":{}}}],["called",{"_index":302,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["calls",{"_index":466,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["canactivate",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate():boolean",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":763,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["capabilities",{"_index":1096,"title":{},"body":{"classes/NavigationModel.html":{}}}],["capability",{"_index":1697,"title":{},"body":{"components/TimerComponent.html":{}}}],["card",{"_index":1438,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["case",{"_index":1748,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["center",{"_index":888,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["change",{"_index":1862,"title":{},"body":{"index.html":{}}}],["chaos",{"_index":550,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["characters",{"_index":320,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["check",{"_index":1878,"title":{},"body":{"index.html":{}}}],["checking",{"_index":451,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["checkrunning",{"_index":490,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["child",{"_index":413,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["children",{"_index":1071,"title":{},"body":{"classes/NavigationModel.html":{}}}],["choose",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chrome",{"_index":551,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["clarifications",{"_index":473,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["class",{"_index":49,"title":{"classes/NavigationModel.html":{},"classes/NewUser.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["classes",{"_index":1069,"title":{},"body":{"classes/NavigationModel.html":{},"classes/NewUser.html":{},"overview.html":{}}}],["clears",{"_index":313,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["cli",{"_index":1854,"title":{},"body":{"index.html":{}}}],["click",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["clip",{"_index":1454,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["clone",{"_index":1758,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["cloned",{"_index":1760,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["closed",{"_index":1259,"title":{},"body":{"classes/NavigationModel.html":{}}}],["cluster_appmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cobalt",{"_index":552,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["code",{"_index":481,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["coding",{"_index":836,"title":{},"body":{"components/HomeComponent.html":{}}}],["collect",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{}}}],["color",{"_index":1433,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["column",{"_index":1450,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["comment",{"_index":1314,"title":{},"body":{"classes/NavigationModel.html":{}}}],["comp",{"_index":68,"title":{"interfaces/Comp.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{}}}],["comp.problem",{"_index":571,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["comp.problem.substr(0,100",{"_index":442,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["comp.title",{"_index":441,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["compatible",{"_index":843,"title":{},"body":{"components/HomeComponent.html":{}}}],["compcreatecomponent",{"_index":67,"title":{"components/CompCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["compdashboardcomponent",{"_index":70,"title":{"components/CompDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["competition",{"_index":475,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["competition'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["competition.component.html",{"_index":477,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["competition.component.scss",{"_index":476,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["competition.service",{"_index":364,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{}}}],["competition/:id",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["competition/competition.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["competitioncomponent",{"_index":72,"title":{"components/CompetitionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["competitions",{"_index":406,"title":{},"body":{"components/CompDashboardComponent.html":{},"injectables/CompetitionService.html":{}}}],["competitionservice",{"_index":297,"title":{"injectables/CompetitionService.html":{}},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["compile",{"_index":1429,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["compiling",{"_index":1639,"title":{},"body":{"injectables/RunService.html":{}}}],["completely",{"_index":461,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{}}}],["compodoc/compodoc",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"overview.html":{}}}],["components/datetime",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["components/moment",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["connection",{"_index":469,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["console.log(`dialog",{"_index":1133,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(console.error",{"_index":396,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["console.log(dir",{"_index":1174,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(err",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["console.log(error",{"_index":626,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["console.log(file",{"_index":1218,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(input",{"_index":816,"title":{},"body":{"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["console.log(res",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(send",{"_index":1322,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(this.dirk",{"_index":1277,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(this.list",{"_index":1252,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(url",{"_index":810,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["console.log({'username':username",{"_index":1515,"title":{},"body":{"injectables/ProfileService.html":{}}}],["const",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":760,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["constructor(_login",{"_index":215,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(_loginserv",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_router",{"_index":1674,"title":{},"body":{"components/TimerComponent.html":{}}}],["constructor(cpservice",{"_index":420,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/PastcontestComponent.html":{}}}],["constructor(data",{"_index":753,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["constructor(fb",{"_index":294,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["constructor(http",{"_index":678,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["constructor(injector",{"_index":1734,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["constructor(logserv",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(private",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(public",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(regserv",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(username",{"_index":1337,"title":{},"body":{"classes/NewUser.html":{}}}],["constructor(uservice",{"_index":1393,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructs",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{}}}],["containing",{"_index":786,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["content",{"_index":789,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["contents",{"_index":1257,"title":{},"body":{"classes/NavigationModel.html":{}}}],["contest",{"_index":270,"title":{"interfaces/Contest.html":{}},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["contestpassed",{"_index":668,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["contestpassed(id",{"_index":682,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["contests",{"_index":1356,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["context",{"_index":1817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["corresponding",{"_index":1397,"title":{},"body":{"components/ProfileComponent.html":{}}}],["countdown",{"_index":1656,"title":{},"body":{"components/TimerComponent.html":{}}}],["cout",{"_index":1131,"title":{},"body":{"classes/NavigationModel.html":{}}}],["cover",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1773,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpservice",{"_index":296,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{}}}],["create",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["create'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["create.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["create.component.html",{"_index":283,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.scss",{"_index":282,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts",{"_index":262,"title":{},"body":{"components/CompCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:19",{"_index":358,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:20",{"_index":361,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:22",{"_index":353,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:24",{"_index":359,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:25",{"_index":298,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:28",{"_index":351,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:45",{"_index":342,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:53",{"_index":299,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:59",{"_index":327,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:70",{"_index":341,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:88",{"_index":301,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create/comp",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"coverage.html":{}}}],["created",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["creates",{"_index":1023,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{}}}],["creation",{"_index":1110,"title":{},"body":{"classes/NavigationModel.html":{}}}],["credentials",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{},"classes/NewUser.html":{},"components/RegisterComponent.html":{}}}],["currentfile",{"_index":1121,"title":{},"body":{"classes/NavigationModel.html":{}}}],["currently",{"_index":1033,"title":{},"body":{"injectables/LoginService.html":{}}}],["cycle1",{"_index":928,"title":{},"body":{"components/LoadingComponent.html":{}}}],["cycle2",{"_index":930,"title":{},"body":{"components/LoadingComponent.html":{}}}],["cycle3",{"_index":932,"title":{},"body":{"components/LoadingComponent.html":{}}}],["cyclic",{"_index":1737,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["dashboard",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["dashboard'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["dashboard.component",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboard.component.html",{"_index":415,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":414,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":402,"title":{},"body":{"components/CompDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:22",{"_index":427,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:23",{"_index":425,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:25",{"_index":424,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:26",{"_index":426,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:27",{"_index":423,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:28",{"_index":421,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:34",{"_index":422,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard/comp",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompDashboardComponent.html":{},"coverage.html":{}}}],["data",{"_index":331,"title":{},"body":{"components/CompCreateComponent.html":{},"components/EditorDialogComponent.html":{}}}],["data.image",{"_index":1413,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data.text",{"_index":762,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["data.text2",{"_index":761,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["data.user_fk",{"_index":1415,"title":{},"body":{"components/ProfileComponent.html":{}}}],["database",{"_index":1211,"title":{},"body":{"classes/NavigationModel.html":{}}}],["date",{"_index":277,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["date().gettime",{"_index":1700,"title":{},"body":{"components/TimerComponent.html":{}}}],["date(this.endsat",{"_index":1720,"title":{},"body":{"components/TimerComponent.html":{}}}],["date_joined",{"_index":1390,"title":{},"body":{"components/ProfileComponent.html":{}}}],["datetime",{"_index":1646,"title":{},"body":{"components/TimerComponent.html":{}}}],["day(s",{"_index":1721,"title":{},"body":{"components/TimerComponent.html":{}}}],["daystodday",{"_index":1660,"title":{},"body":{"components/TimerComponent.html":{}}}],["ddate",{"_index":1661,"title":{},"body":{"components/TimerComponent.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declared",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["decode",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["decoration",{"_index":1484,"title":{},"body":{"components/ProfileComponent.html":{}}}],["decorator",{"_index":1092,"title":{},"body":{"classes/NavigationModel.html":{}}}],["decorators",{"_index":355,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{}}}],["default",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["delete",{"_index":782,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{}}}],["deleted",{"_index":1178,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefile",{"_index":771,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefile(file",{"_index":1286,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefile(id",{"_index":778,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefilestruc(table",{"_index":1231,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefolder",{"_index":772,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["deletefolder(folder",{"_index":1290,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefolder(username",{"_index":783,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefolderstruc(table",{"_index":1179,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletes",{"_index":1036,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["deletestructure(table",{"_index":1173,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletion",{"_index":1111,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dependancy",{"_index":1738,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["dependencies",{"_index":101,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"classes/NavigationModel.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["details",{"_index":687,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{}}}],["determined",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dev",{"_index":1858,"title":{},"body":{"index.html":{}}}],["development",{"_index":1856,"title":{},"body":{"index.html":{}}}],["dhruv",{"_index":864,"title":{},"body":{"components/HomeComponent.html":{}}}],["dialog",{"_index":750,"title":{},"body":{"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{}}}],["dialog'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["dialog.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"classes/NavigationModel.html":{}}}],["dialog.component.html",{"_index":752,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.scss",{"_index":751,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.ts",{"_index":744,"title":{},"body":{"components/EditorDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:13",{"_index":754,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":757,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":755,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog/editor",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{},"coverage.html":{}}}],["dir",{"_index":1159,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dir.splice(1",{"_index":1167,"title":{},"body":{"classes/NavigationModel.html":{}}}],["direct",{"_index":1104,"title":{},"body":{"classes/NavigationModel.html":{}}}],["direction",{"_index":1449,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["directive",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["directives",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1864,"title":{},"body":{"index.html":{}}}],["directory",{"_index":847,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["dirk",{"_index":779,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["dirs",{"_index":1219,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dirs,file",{"_index":1251,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dirs,this.dirk",{"_index":1269,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dirs.splice(1",{"_index":1221,"title":{},"body":{"classes/NavigationModel.html":{}}}],["disabled",{"_index":345,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["display",{"_index":1387,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{}}}],["displayed",{"_index":324,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["displays",{"_index":1358,"title":{},"body":{"components/PastcontestComponent.html":{},"components/TimerComponent.html":{}}}],["dist",{"_index":1867,"title":{},"body":{"index.html":{}}}],["django",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["done",{"_index":764,"title":{},"body":{"components/EditorDialogComponent.html":{},"components/PastcontestComponent.html":{}}}],["drk",{"_index":1291,"title":{},"body":{"classes/NavigationModel.html":{}}}],["drk).subscribe(err",{"_index":1294,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dynamic",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1310,"title":{},"body":{"classes/NavigationModel.html":{}}}],["e15241",{"_index":1446,"title":{},"body":{"components/ProfileComponent.html":{}}}],["e2e",{"_index":1874,"title":{},"body":{"index.html":{}}}],["e2e8f0",{"_index":1436,"title":{},"body":{"components/ProfileComponent.html":{}}}],["e5e9f2",{"_index":1620,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ease",{"_index":922,"title":{},"body":{"components/LoadingComponent.html":{}}}],["easy",{"_index":333,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["editfile(table",{"_index":1234,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editfolder(table",{"_index":1187,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editings",{"_index":1144,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editor",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["editor'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["editor.component.html",{"_index":1118,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editor.component.scss",{"_index":1119,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editor/editor.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["editorbeautify",{"_index":482,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["editorcomponent",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editordialogcomponent",{"_index":76,"title":{"components/EditorDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editoroptions",{"_index":590,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["element",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["elementref",{"_index":354,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["email",{"_index":1334,"title":{},"body":{"classes/NewUser.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["email:string",{"_index":1344,"title":{},"body":{"classes/NewUser.html":{}}}],["empty",{"_index":1175,"title":{},"body":{"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["enablebasicautocompletion",{"_index":588,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["enableliveautocompletion",{"_index":589,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["end",{"_index":374,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["endpoint",{"_index":1640,"title":{},"body":{"injectables/RunService.html":{}}}],["endpoints",{"_index":721,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{}}}],["endsat",{"_index":1673,"title":{},"body":{"components/TimerComponent.html":{}}}],["endtime",{"_index":256,"title":{},"body":{"interfaces/Comp.html":{},"components/CompetitionComponent.html":{}}}],["english/implement",{"_index":1655,"title":{},"body":{"components/TimerComponent.html":{}}}],["enter",{"_index":748,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["entrycomponents",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":839,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":395,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":620,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["errormessage",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors",{"_index":471,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["essential",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["essentially",{"_index":263,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["event",{"_index":516,"title":{},"body":{"components/CompetitionComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["event.target",{"_index":633,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["execute",{"_index":1303,"title":{},"body":{"classes/NavigationModel.html":{},"index.html":{}}}],["executed",{"_index":1255,"title":{},"body":{"classes/NavigationModel.html":{}}}],["execution",{"_index":1374,"title":{},"body":{"components/PastcontestComponent.html":{},"injectables/RunService.html":{}}}],["existing",{"_index":1201,"title":{},"body":{"classes/NavigationModel.html":{}}}],["expected",{"_index":400,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["expiration",{"_index":1702,"title":{},"body":{"components/TimerComponent.html":{}}}],["expired",{"_index":609,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["expires",{"_index":1650,"title":{},"body":{"components/TimerComponent.html":{}}}],["explanatory",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["exports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extraeditoroptions",{"_index":587,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["f.file",{"_index":1232,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f.filename",{"_index":1265,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f.isfile",{"_index":1181,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f.title",{"_index":1182,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f2f3f8",{"_index":1614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["facilitate",{"_index":332,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["fail",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["fast",{"_index":823,"title":{},"body":{"components/HomeComponent.html":{}}}],["fb",{"_index":284,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["fd",{"_index":1591,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fd.append('image',this.myfile,this.myfile.name",{"_index":1592,"title":{},"body":{"components/RegisterComponent.html":{}}}],["features",{"_index":828,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetch",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["fetchcompetitionbyid",{"_index":669,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchcompetitionbyid(index",{"_index":684,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchpastcompetetions",{"_index":670,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchpoints",{"_index":671,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchrunningcompetetions",{"_index":672,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchupcomingcompetetions",{"_index":673,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fff",{"_index":1453,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["ffffff",{"_index":1487,"title":{},"body":{"components/ProfileComponent.html":{}}}],["field",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["fields",{"_index":349,"title":{},"body":{"components/CompCreateComponent.html":{},"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{"interfaces/File.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["file\",true,file.title",{"_index":1297,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file.filename",{"_index":1237,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file.service",{"_index":1083,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file.url",{"_index":1280,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file/folder",{"_index":749,"title":{},"body":{"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{}}}],["filename",{"_index":766,"title":{},"body":{"interfaces/File.html":{},"classes/NavigationModel.html":{}}}],["filename.title",{"_index":1248,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader",{"_index":1306,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader.onloadend",{"_index":1309,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader.readastext(file",{"_index":1316,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader.result",{"_index":1312,"title":{},"body":{"classes/NavigationModel.html":{}}}],["files",{"_index":339,"title":{},"body":{"components/CompCreateComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["files.item(0",{"_index":382,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["fileservice",{"_index":767,"title":{"injectables/FileService.html":{}},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"coverage.html":{}}}],["filestring",{"_index":1120,"title":{},"body":{"classes/NavigationModel.html":{}}}],["fill",{"_index":918,"title":{},"body":{"components/LoadingComponent.html":{}}}],["filled",{"_index":350,"title":{},"body":{"components/CompCreateComponent.html":{},"components/RegisterComponent.html":{}}}],["first",{"_index":318,"title":{},"body":{"components/CompCreateComponent.html":{},"components/RegisterComponent.html":{}}}],["first_name",{"_index":1335,"title":{},"body":{"classes/NewUser.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["first_name:string",{"_index":1347,"title":{},"body":{"classes/NewUser.html":{}}}],["firstry",{"_index":1013,"title":{},"body":{"injectables/LoginService.html":{}}}],["fix",{"_index":1190,"title":{},"body":{"classes/NavigationModel.html":{}}}],["fixing",{"_index":624,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["fixurl(table",{"_index":1195,"title":{},"body":{"classes/NavigationModel.html":{}}}],["flag",{"_index":1235,"title":{},"body":{"classes/NavigationModel.html":{},"index.html":{}}}],["flex",{"_index":1448,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["flexbox",{"_index":1619,"title":{},"body":{"components/RegisterComponent.html":{}}}],["folder",{"_index":1109,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folder\",true",{"_index":1300,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folder.title",{"_index":1284,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folder.url",{"_index":1283,"title":{},"body":{"classes/NavigationModel.html":{}}}],["foldername",{"_index":1212,"title":{},"body":{"classes/NavigationModel.html":{}}}],["foldername.title",{"_index":1216,"title":{},"body":{"classes/NavigationModel.html":{}}}],["foldername.title).subscribe",{"_index":1217,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folders",{"_index":792,"title":{},"body":{"injectables/FileService.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["following",{"_index":328,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["font",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["for(var",{"_index":1149,"title":{},"body":{"classes/NavigationModel.html":{}}}],["form",{"_index":264,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["formatted",{"_index":1093,"title":{},"body":{"classes/NavigationModel.html":{}}}],["formbuilder",{"_index":295,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["formcontrol",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol('',validators.required",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formdata",{"_index":309,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["formdata.append(\"language",{"_index":639,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["formdata.append(\"script",{"_index":637,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["formdata.append(\"username",{"_index":636,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["formdata.append('end',this.form.get('end').value.format",{"_index":391,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('infile',this.form.get('infile').value",{"_index":388,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('outfile',this.form.get('outfile').value",{"_index":389,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('problem_st',this.form.get('problem_st').value",{"_index":387,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('start',this.form.get('start').value.format",{"_index":390,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('title',this.form.get('title').value",{"_index":386,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formgroup",{"_index":352,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["formgroup,formbuilder",{"_index":363,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{}}}],["formsmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["forum",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{}}}],["found",{"_index":1652,"title":{},"body":{"components/TimerComponent.html":{}}}],["framework",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{}}}],["free",{"_index":822,"title":{},"body":{"components/HomeComponent.html":{}}}],["frontend",{"_index":462,"title":{},"body":{"components/CompetitionComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["fucntion",{"_index":1741,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["full",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{}}}],["function",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["functionality",{"_index":1086,"title":{},"body":{"classes/NavigationModel.html":{}}}],["functions",{"_index":223,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{}}}],["further",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["generate",{"_index":322,"title":{},"body":{"components/CompCreateComponent.html":{},"index.html":{}}}],["generated",{"_index":1634,"title":{},"body":{"injectables/RunService.html":{},"index.html":{}}}],["getfile",{"_index":773,"title":{},"body":{"injectables/FileService.html":{}}}],["getfile(id",{"_index":787,"title":{},"body":{"injectables/FileService.html":{}}}],["getfiles",{"_index":774,"title":{},"body":{"injectables/FileService.html":{}}}],["getfiles(newfolder",{"_index":1261,"title":{},"body":{"classes/NavigationModel.html":{}}}],["getfiles(username",{"_index":790,"title":{},"body":{"injectables/FileService.html":{}}}],["getimage",{"_index":1014,"title":{},"body":{"injectables/LoginService.html":{}}}],["getpoints",{"_index":491,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["getpointsurl",{"_index":658,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["getpurl",{"_index":659,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["getrurl",{"_index":660,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["gettimedifference",{"_index":1671,"title":{},"body":{"components/TimerComponent.html":{}}}],["getting",{"_index":1852,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1015,"title":{},"body":{"injectables/LoginService.html":{}}}],["geturl",{"_index":661,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/ProfileService.html":{}}}],["getuser",{"_index":1016,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{}}}],["getuserdetail",{"_index":1502,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserdetail(username",{"_index":1505,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserid",{"_index":1017,"title":{},"body":{"injectables/LoginService.html":{}}}],["getuserurl",{"_index":1501,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuurl",{"_index":662,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["github",{"_index":534,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["given",{"_index":452,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["go",{"_index":1877,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1301,"title":{},"body":{"classes/NavigationModel.html":{}}}],["gotcontest",{"_index":1363,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["gotpoints",{"_index":1364,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["graph",{"_index":1882,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1470,"title":{},"body":{"components/ProfileComponent.html":{}}}],["guard",{"_index":211,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":212,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gutters",{"_index":1460,"title":{},"body":{"components/ProfileComponent.html":{}}}],["h",{"_index":1472,"title":{},"body":{"components/ProfileComponent.html":{}}}],["handling",{"_index":447,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["happen",{"_index":460,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["header",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["headers",{"_index":800,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["hear",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["height",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["hello",{"_index":1608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["help",{"_index":1115,"title":{},"body":{"classes/NavigationModel.html":{},"index.html":{}}}],["helpers",{"_index":1229,"title":{},"body":{"classes/NavigationModel.html":{}}}],["here",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["highlightactiveline",{"_index":582,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["home",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["home.component.html",{"_index":831,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":830,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":79,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepage",{"_index":818,"title":{},"body":{"components/HomeComponent.html":{}}}],["hoursinaday",{"_index":1662,"title":{},"body":{"components/TimerComponent.html":{}}}],["hourstodday",{"_index":1663,"title":{},"body":{"components/TimerComponent.html":{}}}],["hr.new1",{"_index":651,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["hrs",{"_index":1722,"title":{},"body":{"components/TimerComponent.html":{}}}],["html",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["htmlinputelement).files[0",{"_index":634,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["http",{"_index":681,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["http://127.0.0.1:8000/api/competition",{"_index":710,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/compile",{"_index":1638,"title":{},"body":{"injectables/RunService.html":{}}}],["http://127.0.0.1:8000/api/contest/get/past",{"_index":706,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/get/running",{"_index":708,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/get/upcoming",{"_index":712,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/isrunning",{"_index":714,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/passed",{"_index":716,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/postcontest",{"_index":717,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/display",{"_index":804,"title":{},"body":{"injectables/FileService.html":{}}}],["http://127.0.0.1:8000/api/login",{"_index":1047,"title":{},"body":{"injectables/LoginService.html":{}}}],["http://127.0.0.1:8000/api/points",{"_index":704,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/profile",{"_index":1507,"title":{},"body":{"injectables/ProfileService.html":{}}}],["http://127.0.0.1:8000/api/profile/add",{"_index":1524,"title":{},"body":{"injectables/RegService.html":{}}}],["http://127.0.0.1:8000/api/profile/pk",{"_index":1509,"title":{},"body":{"injectables/ProfileService.html":{}}}],["http://127.0.0.1:8000/api/rename",{"_index":806,"title":{},"body":{"injectables/FileService.html":{}}}],["http://127.0.0.1:8000/api/submit/code",{"_index":723,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/submit/file",{"_index":725,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/auth",{"_index":1045,"title":{},"body":{"injectables/LoginService.html":{}}}],["http://localhost:4200",{"_index":1860,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":1527,"title":{},"body":{"injectables/RegService.html":{}}}],["http:httpclient,private",{"_index":1053,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{}}}],["http_interceptors",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":679,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["httpclientmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":807,"title":{},"body":{"injectables/FileService.html":{}}}],["httpheaders",{"_index":727,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["httpheaders({'content",{"_index":801,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["httpinterceptor",{"_index":1750,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httpoptions",{"_index":769,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["httpresponse",{"_index":1049,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["https://medium.com/@ofir3322/create",{"_index":1097,"title":{},"body":{"classes/NavigationModel.html":{}}}],["https://medium.com/javascript",{"_index":1653,"title":{},"body":{"components/TimerComponent.html":{}}}],["https://trungk18.com/experience/angular",{"_index":1116,"title":{},"body":{"classes/NavigationModel.html":{}}}],["id",{"_index":257,"title":{},"body":{"interfaces/Comp.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["ide",{"_index":846,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["identifier",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["if(!flag",{"_index":1239,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!item.isfile",{"_index":1165,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!rename",{"_index":1134,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!result){return",{"_index":1132,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!this.working",{"_index":607,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["if(deletefolder",{"_index":1270,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(dir.length",{"_index":1163,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(filename.title",{"_index":1246,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(files.length>0",{"_index":381,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(item.isfile",{"_index":1242,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(item.title",{"_index":1236,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(loc",{"_index":1275,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(localstorage.getitem('token",{"_index":1765,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["if(newfolder",{"_index":1267,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(receivied.success==true",{"_index":1324,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(text",{"_index":1135,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(text==\"file",{"_index":1139,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(this._login.loggedin",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(this.dirk",{"_index":1271,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(this.form.get('end').value",{"_index":378,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.form.get('problem_st').value",{"_index":376,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.form.get('start').value",{"_index":377,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.form.get('title').value",{"_index":375,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.link",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('email').value",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('first_name').value",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('last_name').value",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('password').value",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('username').value",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.timedifference",{"_index":1703,"title":{},"body":{"components/TimerComponent.html":{}}}],["image",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["image:new",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["image:string",{"_index":1346,"title":{},"body":{"classes/NewUser.html":{},"interfaces/Profile.html":{}}}],["imagepath",{"_index":1536,"title":{},"body":{"components/RegisterComponent.html":{}}}],["imgerr",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{}}}],["imgurl",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{}}}],["immediate",{"_index":793,"title":{},"body":{"injectables/FileService.html":{}}}],["implements",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["important",{"_index":1751,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["imports",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/NavigationModel.html":{}}}],["improve",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{}}}],["in_tc",{"_index":741,"title":{},"body":{"interfaces/Contest.html":{}}}],["inbutton",{"_index":285,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["include",{"_index":1126,"title":{},"body":{"classes/NavigationModel.html":{}}}],["incoming",{"_index":1745,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["incorrect",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["infile",{"_index":370,"title":{},"body":{"components/CompCreateComponent.html":{},"injectables/RunService.html":{}}}],["infinite",{"_index":927,"title":{},"body":{"components/LoadingComponent.html":{}}}],["infinity",{"_index":586,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["information",{"_index":307,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["inject",{"_index":758,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":756,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["injectable",{"_index":234,"title":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["injectable,injector",{"_index":1749,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["injectables",{"_index":656,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"overview.html":{}}}],["injector",{"_index":1735,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["inline",{"_index":1477,"title":{},"body":{"components/ProfileComponent.html":{}}}],["input",{"_index":348,"title":{},"body":{"components/CompCreateComponent.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{}}}],["inputready",{"_index":286,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["inputs",{"_index":1672,"title":{},"body":{"components/TimerComponent.html":{}}}],["insert",{"_index":1156,"title":{},"body":{"classes/NavigationModel.html":{}}}],["insert(url:string",{"_index":1147,"title":{},"body":{"classes/NavigationModel.html":{}}}],["inserted",{"_index":1146,"title":{},"body":{"classes/NavigationModel.html":{}}}],["insertstructure(table",{"_index":1162,"title":{},"body":{"classes/NavigationModel.html":{}}}],["instacne",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{}}}],["instance",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["instances",{"_index":1025,"title":{},"body":{"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["instantiates",{"_index":219,"title":{},"body":{"guards/AuthGuard.html":{}}}],["int",{"_index":1129,"title":{},"body":{"classes/NavigationModel.html":{}}}],["intercept",{"_index":1733,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(req",{"_index":1739,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(req,next",{"_index":1753,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor",{"_index":863,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"components/HomeComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":1732,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:16",{"_index":1736,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:28",{"_index":1740,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptors",{"_index":1730,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercepts",{"_index":1742,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interest",{"_index":323,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["interface",{"_index":253,"title":{"interfaces/Comp.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"interfaces/Profile.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"interfaces/User.html":{}},"body":{"interfaces/Comp.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"interfaces/Profile.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":254,"title":{},"body":{"interfaces/Comp.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"interfaces/Profile.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interval",{"_index":539,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["interval(1000",{"_index":565,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["is_staff",{"_index":1391,"title":{},"body":{"components/ProfileComponent.html":{}}}],["iscontestrunning",{"_index":674,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["iscontestrunning(id",{"_index":694,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["isfile",{"_index":1072,"title":{},"body":{"classes/NavigationModel.html":{}}}],["isolation",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{}}}],["isrunningurl",{"_index":663,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["issue",{"_index":625,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["item",{"_index":1151,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.children",{"_index":1168,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.file",{"_index":1238,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.title",{"_index":1199,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.title===dir[0",{"_index":1176,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.title==dir[0",{"_index":1166,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.url",{"_index":1197,"title":{},"body":{"classes/NavigationModel.html":{}}}],["items",{"_index":1037,"title":{},"body":{"injectables/LoginService.html":{}}}],["itself",{"_index":1171,"title":{},"body":{"classes/NavigationModel.html":{}}}],["jwt",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":1873,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":344,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["key",{"_index":827,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyframes",{"_index":933,"title":{},"body":{"components/LoadingComponent.html":{}}}],["know",{"_index":1368,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["lang",{"_index":483,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["language",{"_index":557,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{}}}],["language_tools",{"_index":554,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["last",{"_index":1612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["last_name",{"_index":1336,"title":{},"body":{"classes/NewUser.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["last_name:string",{"_index":1348,"title":{},"body":{"classes/NewUser.html":{}}}],["later",{"_index":440,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["layer",{"_index":917,"title":{},"body":{"components/LoadingComponent.html":{}}}],["layer1",{"_index":923,"title":{},"body":{"components/LoadingComponent.html":{}}}],["layer2",{"_index":929,"title":{},"body":{"components/LoadingComponent.html":{}}}],["layer3",{"_index":931,"title":{},"body":{"components/LoadingComponent.html":{}}}],["left",{"_index":910,"title":{},"body":{"components/LoadingComponent.html":{},"components/ProfileComponent.html":{}}}],["legend",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"overview.html":{}}}],["lets",{"_index":265,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["letter",{"_index":1726,"title":{},"body":{"components/TimerComponent.html":{}}}],["library",{"_index":1089,"title":{},"body":{"classes/NavigationModel.html":{}}}],["life",{"_index":1085,"title":{},"body":{"classes/NavigationModel.html":{}}}],["line",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["linear",{"_index":926,"title":{},"body":{"components/LoadingComponent.html":{}}}],["link",{"_index":410,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/RegisterComponent.html":{}}}],["list",{"_index":689,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["listed",{"_index":829,"title":{},"body":{"components/HomeComponent.html":{}}}],["listns",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["literal",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":448,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["load",{"_index":416,"title":{},"body":{"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{}}}],["loaded",{"_index":492,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["loading",{"_index":900,"title":{},"body":{"components/LoadingComponent.html":{},"components/PastcontestComponent.html":{}}}],["loading'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["loading.component.html",{"_index":903,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":902,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading/loading.component",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["loadingcomponent",{"_index":81,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loc",{"_index":1273,"title":{},"body":{"classes/NavigationModel.html":{}}}],["local",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["localcall",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["locallogserv",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('token",{"_index":1059,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem('userid",{"_index":1067,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem('userimage",{"_index":1066,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem('username",{"_index":1065,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('token",{"_index":1060,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('userid",{"_index":1063,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('userimage",{"_index":1062,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('username",{"_index":1061,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.setitem('token',res.token",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('userid",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('userid',res.userid",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('userimage',res.image",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('username',this.myuser.username",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["location",{"_index":1157,"title":{},"body":{"classes/NavigationModel.html":{}}}],["logged",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["loggedin",{"_index":1018,"title":{},"body":{"injectables/LoginService.html":{}}}],["logic",{"_index":1701,"title":{},"body":{"components/TimerComponent.html":{}}}],["login",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["login',component:logincomponent",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["login.component.html",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["login/login.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login/user",{"_index":1050,"title":{},"body":{"injectables/LoginService.html":{}}}],["logincomponent",{"_index":83,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logined",{"_index":1040,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginform",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice",{"_index":26,"title":{"injectables/LoginService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["logoutuser",{"_index":1019,"title":{},"body":{"injectables/LoginService.html":{}}}],["logs",{"_index":1035,"title":{},"body":{"injectables/LoginService.html":{}}}],["logser",{"_index":1754,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["logser.gettoken",{"_index":1769,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["logserv",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{}}}],["loop",{"_index":1372,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["lot",{"_index":1497,"title":{},"body":{"components/ProfileComponent.html":{}}}],["made",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["main",{"_index":1130,"title":{},"body":{"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["maintain",{"_index":468,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["make",{"_index":458,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["makes",{"_index":1743,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["margin",{"_index":1431,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["mat_dialog_data",{"_index":759,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["matbuttonmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":1082,"title":{},"body":{"classes/NavigationModel.html":{}}}],["matdialogmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["matformfieldmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["math.floor((timedifference",{"_index":1709,"title":{},"body":{"components/TimerComponent.html":{}}}],["maticonmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1493,"title":{},"body":{"components/ProfileComponent.html":{}}}],["maxlines",{"_index":585,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["mb",{"_index":1466,"title":{},"body":{"components/ProfileComponent.html":{}}}],["means",{"_index":1757,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["media",{"_index":1492,"title":{},"body":{"components/ProfileComponent.html":{}}}],["message",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["method",{"_index":1210,"title":{},"body":{"classes/NavigationModel.html":{}}}],["methods",{"_index":214,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["mid",{"_index":470,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["middle",{"_index":1623,"title":{},"body":{"components/RegisterComponent.html":{}}}],["millisecondsinasecond",{"_index":1664,"title":{},"body":{"components/TimerComponent.html":{}}}],["min",{"_index":892,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["minlines",{"_index":583,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["minute",{"_index":280,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["minutesinanhour",{"_index":1665,"title":{},"body":{"components/TimerComponent.html":{}}}],["minutestodday",{"_index":1666,"title":{},"body":{"components/TimerComponent.html":{}}}],["miscellaneous",{"_index":1887,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modification",{"_index":1651,"title":{},"body":{"components/TimerComponent.html":{}}}],["modularising",{"_index":1113,"title":{},"body":{"classes/NavigationModel.html":{}}}],["module",{"_index":98,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["modules",{"_index":100,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["moment.js",{"_index":275,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["more",{"_index":1876,"title":{},"body":{"index.html":{}}}],["ms",{"_index":916,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegisterComponent.html":{}}}],["multi",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":720,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{}}}],["myfile",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mynewuser",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{}}}],["myuser",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["names",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["namespace",{"_index":1127,"title":{},"body":{"classes/NavigationModel.html":{}}}],["navigate",{"_index":1859,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1084,"title":{},"body":{"classes/NavigationModel.html":{}}}],["navigationmodel",{"_index":1068,"title":{"classes/NavigationModel.html":{}},"body":{"classes/NavigationModel.html":{},"coverage.html":{}}}],["navigationmodel[],url",{"_index":1196,"title":{},"body":{"classes/NavigationModel.html":{}}}],["nayak",{"_index":867,"title":{},"body":{"components/HomeComponent.html":{}}}],["needed",{"_index":1091,"title":{},"body":{"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/TimerComponent.html":{}}}],["nested",{"_index":1161,"title":{},"body":{"classes/NavigationModel.html":{}}}],["new",{"_index":385,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"coverage.html":{},"index.html":{}}}],["newfolder",{"_index":1260,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newname",{"_index":1203,"title":{},"body":{"classes/NavigationModel.html":{},"interfaces/RenameFile.html":{}}}],["newname,oldname",{"_index":1209,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newnamefile(oldname",{"_index":1253,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newnamefolder(oldname",{"_index":1224,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newuser",{"_index":1329,"title":{"classes/NewUser.html":{}},"body":{"classes/NewUser.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["next",{"_index":457,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["next.handle(req",{"_index":1770,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["ng",{"_index":1857,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":493,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["nginit",{"_index":1256,"title":{},"body":{"classes/NavigationModel.html":{}}}],["ngmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":494,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["ngoninit",{"_index":289,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["ngxdatetimemodule",{"_index":273,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["ngxmatdatetimepickermodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmatmomentmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmattimepickermodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmomentmodule",{"_index":274,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["noconflict/ext",{"_index":553,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["noconflict/mode",{"_index":545,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["noconflict/theme",{"_index":548,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["nodejs",{"_index":1099,"title":{},"body":{"classes/NavigationModel.html":{}}}],["non",{"_index":1613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["none",{"_index":1474,"title":{},"body":{"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["none!important",{"_index":1475,"title":{},"body":{"components/ProfileComponent.html":{}}}],["note",{"_index":316,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["notsuccess",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{}}}],["null",{"_index":371,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["number",{"_index":260,"title":{},"body":{"interfaces/Comp.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["object",{"_index":785,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(basiceditoroptions",{"_index":591,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["objects",{"_index":1108,"title":{},"body":{"classes/NavigationModel.html":{}}}],["observable",{"_index":686,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["obtained",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["occurred",{"_index":1143,"title":{},"body":{"classes/NavigationModel.html":{}}}],["ocde",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["oldname",{"_index":1204,"title":{},"body":{"classes/NavigationModel.html":{},"interfaces/RenameFile.html":{}}}],["ondestroy",{"_index":538,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["onfilelistener",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onfilelistener(event",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["oninit",{"_index":281,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["online",{"_index":845,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["onsubmit",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["onupload",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{}}}],["operations",{"_index":1304,"title":{},"body":{"classes/NavigationModel.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["options",{"_index":851,"title":{},"body":{"components/HomeComponent.html":{}}}],["original",{"_index":1205,"title":{},"body":{"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["out",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingComponent.html":{},"injectables/LoginService.html":{},"index.html":{},"overview.html":{}}}],["out_tc",{"_index":742,"title":{},"body":{"interfaces/Contest.html":{}}}],["outbutton",{"_index":287,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["outfile",{"_index":372,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["output",{"_index":401,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{}}}],["outputready",{"_index":288,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["over",{"_index":1357,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["overview",{"_index":1884,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1820,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":895,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["page",{"_index":455,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["pages",{"_index":412,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["param",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["parametrized",{"_index":1366,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["params",{"_index":559,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["params.id",{"_index":561,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["part",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["partial",{"_index":581,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["participate",{"_index":443,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["parts",{"_index":1088,"title":{},"body":{"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["pass",{"_index":1746,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["passed",{"_index":484,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/TimerComponent.html":{}}}],["passurl",{"_index":664,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["password",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["password:new",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password:string",{"_index":1345,"title":{},"body":{"classes/NewUser.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{}}}],["past",{"_index":408,"title":{},"body":{"components/CompDashboardComponent.html":{},"injectables/CompetitionService.html":{}}}],["pastcompetition/:id",{"_index":208,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pastcontest",{"_index":1360,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["pastcontest'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["pastcontest.component.html",{"_index":1362,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["pastcontest.component.scss",{"_index":1361,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["pastcontest/pastcontest.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pastcontestcomponent",{"_index":85,"title":{"components/PastcontestComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompetitionComponent.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["pcomps",{"_index":417,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["performance",{"_index":445,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["performs",{"_index":897,"title":{},"body":{"components/LoadingComponent.html":{}}}],["pick",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{}}}],["picker",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["place",{"_index":1052,"title":{},"body":{"injectables/LoginService.html":{}}}],["places",{"_index":1522,"title":{},"body":{"injectables/RegService.html":{}}}],["plain",{"_index":1654,"title":{},"body":{"components/TimerComponent.html":{}}}],["platform",{"_index":841,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":1598,"title":{},"body":{"components/RegisterComponent.html":{}}}],["point",{"_index":1102,"title":{},"body":{"classes/NavigationModel.html":{}}}],["points",{"_index":485,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/HomeComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{}}}],["pop",{"_index":745,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["position",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["post",{"_index":797,"title":{},"body":{"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["posturl",{"_index":665,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["present",{"_index":1747,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["presses",{"_index":303,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{}}}],["prevent",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TokenInterceptorService.html":{}}}],["prevents",{"_index":1373,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["preview",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{}}}],["preview(files",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{}}}],["private",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["problem",{"_index":258,"title":{},"body":{"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["problem_st",{"_index":369,"title":{},"body":{"components/CompCreateComponent.html":{},"interfaces/Contest.html":{}}}],["process",{"_index":459,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["prod",{"_index":1868,"title":{},"body":{"index.html":{}}}],["production",{"_index":1869,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":53,"title":{"interfaces/Profile.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompetitionComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["profile.component.html",{"_index":1389,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1388,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.service",{"_index":1408,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile",{"_index":1513,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/profile.component",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profilecomponent",{"_index":87,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilecomponent,canactivate",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profileservice",{"_index":1394,"title":{"injectables/ProfileService.html":{}},"body":{"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["programming",{"_index":840,"title":{},"body":{"components/HomeComponent.html":{}}}],["project",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["prompt",{"_index":453,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interfaces/User.html":{}}}],["protractor",{"_index":1875,"title":{},"body":{"index.html":{}}}],["provide",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":347,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["providedin",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["providers",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":409,"title":{},"body":{"components/CompDashboardComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["providing",{"_index":305,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoadingComponent.html":{}}}],["pts",{"_index":1427,"title":{},"body":{"components/ProfileComponent.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["publicly",{"_index":820,"title":{},"body":{"components/HomeComponent.html":{}}}],["python",{"_index":547,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["querystring",{"_index":1512,"title":{},"body":{"injectables/ProfileService.html":{}}}],["quite",{"_index":722,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["radius",{"_index":1456,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["raj",{"_index":868,"title":{},"body":{"components/HomeComponent.html":{}}}],["raleway",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["ranjan",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{}}}],["rcomps",{"_index":418,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["reader",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reader.result",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{}}}],["readme",{"_index":1879,"title":{},"body":{"index.html":{}}}],["ready",{"_index":314,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["receivied.output",{"_index":1326,"title":{},"body":{"classes/NavigationModel.html":{}}}],["recieve",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["recive",{"_index":1526,"title":{},"body":{"injectables/RegService.html":{}}}],["recursive",{"_index":1107,"title":{},"body":{"classes/NavigationModel.html":{}}}],["redirected",{"_index":454,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["redirectto:'home',pathmatch:'full",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducing",{"_index":464,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["refresh",{"_index":1696,"title":{},"body":{"components/TimerComponent.html":{}}}],["refreshes",{"_index":1649,"title":{},"body":{"components/TimerComponent.html":{}}}],["reg.service",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{}}}],["regcontest",{"_index":675,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["regcontest(formdata",{"_index":696,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["regform",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["register.component.html",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/newuser",{"_index":1525,"title":{},"body":{"injectables/RegService.html":{}}}],["register/register.component",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":89,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":1333,"title":{},"body":{"classes/NewUser.html":{},"components/RegisterComponent.html":{}}}],["registration",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regserv",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regservice",{"_index":112,"title":{"injectables/RegService.html":{}},"body":{"modules/AppModule.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["regservice,loginservice,authguard",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["related",{"_index":1370,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["relative",{"_index":1447,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["relevant",{"_index":306,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["reload",{"_index":1705,"title":{},"body":{"components/TimerComponent.html":{},"index.html":{}}}],["remaining",{"_index":1644,"title":{},"body":{"components/TimerComponent.html":{}}}],["remains",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":1313,"title":{},"body":{"classes/NavigationModel.html":{}}}],["removing",{"_index":1230,"title":{},"body":{"classes/NavigationModel.html":{}}}],["rename",{"_index":1223,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamed",{"_index":1193,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamefile",{"_index":775,"title":{"interfaces/RenameFile.html":{}},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"interfaces/RenameFile.html":{},"coverage.html":{}}}],["renamefile(file",{"_index":1295,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamefile(input",{"_index":795,"title":{},"body":{"injectables/FileService.html":{}}}],["renamefolder(folder",{"_index":1298,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamelistfile(table",{"_index":1241,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamelistfolder(table",{"_index":1206,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renames",{"_index":1200,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renameurl",{"_index":770,"title":{},"body":{"injectables/FileService.html":{}}}],["renaming",{"_index":1112,"title":{},"body":{"classes/NavigationModel.html":{}}}],["render",{"_index":1117,"title":{},"body":{"classes/NavigationModel.html":{}}}],["rendered",{"_index":1320,"title":{},"body":{"classes/NavigationModel.html":{}}}],["rendering",{"_index":449,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["renders",{"_index":403,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["req",{"_index":1744,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["req.clone",{"_index":1766,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["request",{"_index":335,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["request.files['filename",{"_index":338,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["requests",{"_index":1369,"title":{},"body":{"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["require",{"_index":1818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":599,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["res.passed",{"_index":601,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["res.points",{"_index":603,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["res.url",{"_index":1596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["res.userid",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["res:any",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resources",{"_index":826,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["responds",{"_index":1319,"title":{},"body":{"classes/NavigationModel.html":{}}}],["response",{"_index":393,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["rest",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomeComponent.html":{}}}],["result",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["returns",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["rgba(0",{"_index":1443,"title":{},"body":{"components/ProfileComponent.html":{}}}],["rgba(52",{"_index":1616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["right",{"_index":1462,"title":{},"body":{"components/ProfileComponent.html":{}}}],["roboto",{"_index":1485,"title":{},"body":{"components/ProfileComponent.html":{}}}],["robustness",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["root'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["route",{"_index":501,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["router",{"_index":217,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["routermodule",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":192,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/PastcontestComponent.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ruby",{"_index":546,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["run",{"_index":649,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["run.service",{"_index":1079,"title":{},"body":{"classes/NavigationModel.html":{}}}],["run_input",{"_index":1081,"title":{},"body":{"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["run_output",{"_index":1641,"title":{},"body":{"injectables/RunService.html":{}}}],["runcode",{"_index":495,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["runfile",{"_index":496,"title":{"interfaces/RunFile.html":{}},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"interfaces/RunFile.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["runfile(infile",{"_index":1632,"title":{},"body":{"injectables/RunService.html":{}}}],["runinput",{"_index":1080,"title":{"interfaces/RunInput.html":{}},"body":{"classes/NavigationModel.html":{},"interfaces/RunInput.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["running",{"_index":407,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["runoutput",{"_index":1628,"title":{"interfaces/RunOutput.html":{}},"body":{"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["runscript",{"_index":1122,"title":{},"body":{"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["runscript(input",{"_index":1635,"title":{},"body":{"injectables/RunService.html":{}}}],["runservice",{"_index":1078,"title":{"injectables/RunService.html":{}},"body":{"classes/NavigationModel.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["rxjs",{"_index":540,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1723,"title":{},"body":{"components/TimerComponent.html":{}}}],["sahasra",{"_index":871,"title":{},"body":{"components/HomeComponent.html":{}}}],["same",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/NavigationModel.html":{}}}],["sans",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["save",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["savefile",{"_index":776,"title":{},"body":{"injectables/FileService.html":{}}}],["savefile(filename",{"_index":1244,"title":{},"body":{"classes/NavigationModel.html":{}}}],["savefile(input",{"_index":798,"title":{},"body":{"injectables/FileService.html":{}}}],["savefolder(foldername",{"_index":1213,"title":{},"body":{"classes/NavigationModel.html":{}}}],["scaffolding",{"_index":1863,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":269,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["schools",{"_index":1498,"title":{},"body":{"components/ProfileComponent.html":{}}}],["screen",{"_index":901,"title":{},"body":{"components/LoadingComponent.html":{},"components/PastcontestComponent.html":{}}}],["script",{"_index":556,"title":{},"body":{"components/CompetitionComponent.html":{},"interfaces/File.html":{},"classes/NavigationModel.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{}}}],["second",{"_index":1717,"title":{},"body":{"components/TimerComponent.html":{}}}],["seconds",{"_index":1645,"title":{},"body":{"components/TimerComponent.html":{}}}],["secondsinaminute",{"_index":1667,"title":{},"body":{"components/TimerComponent.html":{}}}],["secondstodday",{"_index":1668,"title":{},"body":{"components/TimerComponent.html":{}}}],["see",{"_index":444,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["select",{"_index":647,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["self",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["send",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{}}}],["sends",{"_index":310,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["sent",{"_index":781,"title":{},"body":{"injectables/FileService.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{}}}],["serif",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["serve",{"_index":1530,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["server",{"_index":311,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["service",{"_index":224,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["services",{"_index":220,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProfileComponent.html":{}}}],["session",{"_index":627,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["set",{"_index":1756,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["setfile(file",{"_index":1279,"title":{},"body":{"classes/NavigationModel.html":{}}}],["setfolder(folder",{"_index":1282,"title":{},"body":{"classes/NavigationModel.html":{}}}],["setheaders",{"_index":1767,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["shadow",{"_index":1440,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["sibasis",{"_index":866,"title":{},"body":{"components/HomeComponent.html":{}}}],["side",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{}}}],["simple",{"_index":343,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["site",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/LoginService.html":{}}}],["sites",{"_index":838,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{},"components/TimerComponent.html":{}}}],["sizing",{"_index":1483,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sm",{"_index":1461,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sm>.col",{"_index":1464,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sm>[class*=col",{"_index":1465,"title":{},"body":{"components/ProfileComponent.html":{}}}],["solid",{"_index":655,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["solve",{"_index":646,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["solved/unsolved",{"_index":1359,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"index.html":{}}}],["spacing",{"_index":1727,"title":{},"body":{"components/TimerComponent.html":{}}}],["span",{"_index":1728,"title":{},"body":{"components/TimerComponent.html":{}}}],["spec\\.ts",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specification",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["specifying",{"_index":1647,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":213,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:13",{"_index":218,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:25",{"_index":225,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/comp",{"_index":261,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"coverage.html":{}}}],["src/app/comp.ts",{"_index":255,"title":{},"body":{"interfaces/Comp.html":{},"coverage.html":{}}}],["src/app/competition.service.ts",{"_index":657,"title":{},"body":{"injectables/CompetitionService.html":{},"coverage.html":{}}}],["src/app/competition.service.ts:17",{"_index":718,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:18",{"_index":709,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:19",{"_index":713,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:20",{"_index":707,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:21",{"_index":711,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:22",{"_index":724,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:23",{"_index":726,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:24",{"_index":705,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:25",{"_index":715,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:26",{"_index":680,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:33",{"_index":692,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:40",{"_index":693,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:47",{"_index":688,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:51",{"_index":697,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:58",{"_index":685,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:65",{"_index":699,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:72",{"_index":703,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:79",{"_index":690,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:83",{"_index":695,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:87",{"_index":683,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition/competition.component.ts",{"_index":446,"title":{},"body":{"components/CompetitionComponent.html":{},"coverage.html":{}}}],["src/app/competition/competition.component.ts:116",{"_index":507,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:120",{"_index":506,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:129",{"_index":505,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:138",{"_index":517,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:146",{"_index":510,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:167",{"_index":504,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:174",{"_index":513,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:178",{"_index":512,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:187",{"_index":515,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:197",{"_index":511,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:217",{"_index":509,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:40",{"_index":523,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:42",{"_index":527,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:43",{"_index":532,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:45",{"_index":533,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:47",{"_index":519,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:48",{"_index":524,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:50",{"_index":530,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:51",{"_index":531,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:53",{"_index":520,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:54",{"_index":537,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:56",{"_index":526,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:58",{"_index":536,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:59",{"_index":521,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:61",{"_index":535,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:62",{"_index":529,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:64",{"_index":503,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:67",{"_index":525,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:85",{"_index":508,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/contest.ts",{"_index":740,"title":{},"body":{"interfaces/Contest.html":{},"coverage.html":{}}}],["src/app/editor",{"_index":743,"title":{},"body":{"components/EditorDialogComponent.html":{},"coverage.html":{}}}],["src/app/editor/editor.component.ts",{"_index":1070,"title":{},"body":{"classes/NavigationModel.html":{},"coverage.html":{}}}],["src/app/editor/editor.component.ts:751",{"_index":1076,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:752",{"_index":1077,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:753",{"_index":1075,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:754",{"_index":1074,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:755",{"_index":1073,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/file.service.ts",{"_index":768,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/app/file.service.ts:17",{"_index":805,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:18",{"_index":777,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:22",{"_index":803,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:29",{"_index":799,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:37",{"_index":791,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:46",{"_index":788,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:54",{"_index":780,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:63",{"_index":784,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:72",{"_index":796,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.ts",{"_index":765,"title":{},"body":{"interfaces/File.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":817,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:14",{"_index":832,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:18",{"_index":833,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/loading/loading.component.ts",{"_index":896,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/loading/loading.component.ts:13",{"_index":904,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/loading/loading.component.ts:16",{"_index":905,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/login.service.ts",{"_index":1012,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login.service.ts:15",{"_index":1048,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:16",{"_index":1022,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:25",{"_index":1046,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:32",{"_index":1042,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:39",{"_index":1039,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:45",{"_index":1031,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:51",{"_index":1034,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:61",{"_index":1028,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:67",{"_index":1029,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:73",{"_index":1026,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:79",{"_index":1030,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login/login.component.ts",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:20",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/user.ts",{"_index":1771,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/pastcontest/pastcontest.component.ts",{"_index":1355,"title":{},"body":{"components/PastcontestComponent.html":{},"coverage.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:19",{"_index":1377,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:20",{"_index":1380,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:22",{"_index":1378,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:23",{"_index":1379,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:25",{"_index":1381,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:26",{"_index":1375,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:28",{"_index":1376,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:29",{"_index":1365,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:50",{"_index":1371,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:75",{"_index":1367,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/profile.service.ts",{"_index":1500,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/profile.service.ts:14",{"_index":1508,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:15",{"_index":1503,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:19",{"_index":1510,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:26",{"_index":1504,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:33",{"_index":1506,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1386,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:18",{"_index":1406,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:19",{"_index":1407,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:20",{"_index":1403,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:21",{"_index":1405,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:22",{"_index":1401,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:23",{"_index":1400,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:24",{"_index":1404,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:25",{"_index":1402,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:26",{"_index":1395,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:42",{"_index":1396,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.ts",{"_index":1384,"title":{},"body":{"interfaces/Profile.html":{},"coverage.html":{}}}],["src/app/reg.service.ts",{"_index":1517,"title":{},"body":{"injectables/RegService.html":{},"coverage.html":{}}}],["src/app/reg.service.ts:13",{"_index":1519,"title":{},"body":{"injectables/RegService.html":{}}}],["src/app/reg.service.ts:16",{"_index":1523,"title":{},"body":{"injectables/RegService.html":{}}}],["src/app/reg.service.ts:22",{"_index":1521,"title":{},"body":{"injectables/RegService.html":{}}}],["src/app/register/newuser.ts",{"_index":1330,"title":{},"body":{"classes/NewUser.html":{},"coverage.html":{}}}],["src/app/register/newuser.ts:10",{"_index":1338,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:5",{"_index":1343,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:6",{"_index":1339,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:7",{"_index":1342,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:8",{"_index":1341,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:9",{"_index":1340,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/register.component.ts",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:106",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:128",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:32",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:46",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:50",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:53",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:54",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:55",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:60",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:68",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:93",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/renamefile.ts",{"_index":1625,"title":{},"body":{"interfaces/RenameFile.html":{},"coverage.html":{}}}],["src/app/run.service.ts",{"_index":1630,"title":{},"body":{"injectables/RunService.html":{},"coverage.html":{}}}],["src/app/run.service.ts:17",{"_index":1631,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run.service.ts:21",{"_index":1637,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run.service.ts:28",{"_index":1636,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run.service.ts:37",{"_index":1633,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run_file.ts",{"_index":1626,"title":{},"body":{"interfaces/RunFile.html":{},"coverage.html":{}}}],["src/app/run_input.ts",{"_index":1627,"title":{},"body":{"interfaces/RunInput.html":{},"coverage.html":{}}}],["src/app/run_output.ts",{"_index":1629,"title":{},"body":{"interfaces/RunOutput.html":{},"coverage.html":{}}}],["src/app/timer/timer.component.ts",{"_index":1643,"title":{},"body":{"components/TimerComponent.html":{},"coverage.html":{}}}],["src/app/timer/timer.component.ts:21",{"_index":1676,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:22",{"_index":1677,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:24",{"_index":1684,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:25",{"_index":1675,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:35",{"_index":1689,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:36",{"_index":1686,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:37",{"_index":1691,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:38",{"_index":1693,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:40",{"_index":1695,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:41",{"_index":1694,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:42",{"_index":1692,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:43",{"_index":1687,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:44",{"_index":1683,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:47",{"_index":1680,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:62",{"_index":1679,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:69",{"_index":1682,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:78",{"_index":1681,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/token",{"_index":1731,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":329,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["start",{"_index":373,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{}}}],["start\"/\"end",{"_index":1648,"title":{},"body":{"components/TimerComponent.html":{}}}],["started",{"_index":1853,"title":{"index.html":{}},"body":{}}],["startexecution",{"_index":486,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["starting",{"_index":1101,"title":{},"body":{"classes/NavigationModel.html":{}}}],["starttime",{"_index":259,"title":{},"body":{"interfaces/Comp.html":{}}}],["statement",{"_index":321,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["statements",{"_index":472,"title":{},"body":{"components/CompetitionComponent.html":{},"coverage.html":{}}}],["static",{"_index":357,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["status",{"_index":701,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/PastcontestComponent.html":{}}}],["std",{"_index":1128,"title":{},"body":{"classes/NavigationModel.html":{}}}],["still",{"_index":467,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["storage",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["store",{"_index":330,"title":{},"body":{"components/CompCreateComponent.html":{},"interfaces/Profile.html":{},"components/RegisterComponent.html":{}}}],["stored",{"_index":1027,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["stores",{"_index":1332,"title":{},"body":{"classes/NewUser.html":{}}}],["storing",{"_index":463,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{}}}],["string",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comp.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interfaces/User.html":{}}}],["stringify",{"_index":1511,"title":{},"body":{"injectables/ProfileService.html":{}}}],["strings",{"_index":1160,"title":{},"body":{"classes/NavigationModel.html":{}}}],["structure",{"_index":1106,"title":{},"body":{"classes/NavigationModel.html":{}}}],["struture",{"_index":1114,"title":{},"body":{"classes/NavigationModel.html":{}}}],["studied",{"_index":1087,"title":{},"body":{"classes/NavigationModel.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["styling",{"_index":1496,"title":{},"body":{"components/ProfileComponent.html":{}}}],["subdirectory",{"_index":794,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["submit",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitcode",{"_index":676,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitcode(id",{"_index":698,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitcode(id,code",{"_index":733,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitcodeurl",{"_index":666,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfile",{"_index":677,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfile(id",{"_index":702,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfile(id,code",{"_index":735,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfileurl",{"_index":667,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitform",{"_index":290,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["subscribe",{"_index":619,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(data",{"_index":1411,"title":{},"body":{"components/ProfileComponent.html":{}}}],["subscribe(receivied",{"_index":1328,"title":{},"body":{"classes/NavigationModel.html":{}}}],["subscribe(x",{"_index":566,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["subscription",{"_index":450,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["success",{"_index":700,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"interfaces/RunOutput.html":{}}}],["successfully",{"_index":1611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["suitable",{"_index":824,"title":{},"body":{"components/HomeComponent.html":{}}}],["supply",{"_index":266,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["support",{"_index":848,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["supported",{"_index":844,"title":{},"body":{"components/HomeComponent.html":{}}}],["supports",{"_index":1094,"title":{},"body":{"classes/NavigationModel.html":{}}}],["svg",{"_index":1880,"title":{},"body":{"modules.html":{}}}],["synced",{"_index":849,"title":{},"body":{"components/HomeComponent.html":{}}}],["system",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{}}}],["table",{"_index":1158,"title":{},"body":{"classes/NavigationModel.html":{},"coverage.html":{}}}],["table.filter(f",{"_index":1180,"title":{},"body":{"classes/NavigationModel.html":{}}}],["table.push(item",{"_index":1188,"title":{},"body":{"classes/NavigationModel.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1819,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":612,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{}}}],["takes",{"_index":1044,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["tamper",{"_index":1759,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["task",{"_index":899,"title":{},"body":{"components/LoadingComponent.html":{}}}],["team",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["temp",{"_index":1148,"title":{},"body":{"classes/NavigationModel.html":{}}}],["temp.push(item",{"_index":1152,"title":{},"body":{"classes/NavigationModel.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["templates",{"_index":1499,"title":{},"body":{"components/ProfileComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["test",{"_index":1872,"title":{},"body":{"index.html":{}}}],["testcase",{"_index":267,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["tests",{"_index":1871,"title":{},"body":{"index.html":{}}}],["text",{"_index":1435,"title":{},"body":{"components/ProfileComponent.html":{}}}],["textarea",{"_index":1321,"title":{},"body":{"classes/NavigationModel.html":{}}}],["theme",{"_index":487,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this._router.navigate(['/dashboard",{"_index":1706,"title":{},"body":{"components/TimerComponent.html":{}}}],["this._router.navigate(['/home",{"_index":1064,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._router.navigate(['/login",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["this._router.navigate(['/profile",{"_index":613,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{}}}],["this._router.onsameurlnavigation",{"_index":1704,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.aceeditor",{"_index":592,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.aceeditor.getsession",{"_index":628,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.aceeditor.session.getvalue",{"_index":615,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setmode('ace/mode",{"_index":596,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.aceeditor.session.setmode('ace/mode/'+this.lang",{"_index":1125,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setvalue",{"_index":630,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setvalue(file.file.script",{"_index":1281,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setvalue(this.filestring",{"_index":1315,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.aceeditor.settheme('ace/theme",{"_index":594,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.aceeditor.settheme('ace/theme/'+this.theme",{"_index":1124,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.allocatetimeunits(this.timedifference",{"_index":1707,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.allowed",{"_index":605,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.body",{"_index":570,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.checkrunning",{"_index":572,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.code",{"_index":614,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.cpservice.contestpassed(this.id).subscribe",{"_index":598,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.cpservice.fetchcompetitionbyid(this.id).subscribe",{"_index":568,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.cpservice.fetchpastcompetetions().subscribe",{"_index":436,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.cpservice.fetchpoints().subscribe",{"_index":1426,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.cpservice.fetchrunningcompetetions().subscribe",{"_index":431,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.cpservice.fetchupcomingcompetetions().subscribe",{"_index":433,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.cpservice.iscontestrunning(this.id).subscribe",{"_index":604,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.cpservice.regcontest(formdata).subscribe",{"_index":392,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.cpservice.submitcode",{"_index":616,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.cpservice.submitfile",{"_index":641,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.currentfile",{"_index":1245,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.date_joined",{"_index":1418,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.daystodday",{"_index":1716,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.ddate",{"_index":1719,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.ddate.gettime",{"_index":1699,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.deletefilestruc(item.children",{"_index":1233,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletefilestruc(this.list,dirs,file.file",{"_index":1287,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletefolderstruc(item.children",{"_index":1183,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletefolderstruc(this.list,dirs",{"_index":1292,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletestructure(item.children",{"_index":1177,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletestructure(this.list",{"_index":1272,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk",{"_index":1136,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk).subscribe",{"_index":1249,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk).subscribe(err",{"_index":1289,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk.lastindexof",{"_index":1274,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk.split",{"_index":1220,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk.substring(0,loc",{"_index":1276,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfile(item.children",{"_index":1240,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfile(this.list",{"_index":1250,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfolder(item.children",{"_index":1189,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfolder(this.list",{"_index":1222,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editorbeautify",{"_index":578,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.editorbeautify.beautify(session",{"_index":629,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.email",{"_index":1416,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.email=email",{"_index":1351,"title":{},"body":{"classes/NewUser.html":{}}}],["this.errormessage",{"_index":1606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.fb.group",{"_index":368,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.files",{"_index":1154,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.files.filter(f",{"_index":1264,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.files=files",{"_index":1263,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.deletefile(file.title,this.uservice.getuser",{"_index":1288,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.deletefolder(this.uservice.getuser",{"_index":1293,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.getfiles(this.uservice.getuser(),this.dirk).subscribe",{"_index":1262,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.renamefile",{"_index":1225,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.savefile",{"_index":1214,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.filestring",{"_index":1311,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.first_name",{"_index":1422,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.first_name=first_name",{"_index":1353,"title":{},"body":{"classes/NewUser.html":{}}}],["this.fixurl(item.children",{"_index":1198,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fixurl(item.children,item.url",{"_index":1207,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.folders",{"_index":1150,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.form",{"_index":367,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.get('infile').setvalue(file",{"_index":383,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.form.get('input').updatevalueandvalidity",{"_index":1318,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.form.get('language').updatevalueandvalidity",{"_index":632,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.get('language').value",{"_index":640,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.form.get('outfile').setvalue(file",{"_index":384,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.form.get('script').updatevalueandvalidity",{"_index":635,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.get('script').value",{"_index":638,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.form.patchvalue",{"_index":631,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.setvalue",{"_index":397,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.getfiles(false,false",{"_index":1123,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.getfiles(false,true",{"_index":1302,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.getfiles(true,false",{"_index":1285,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.getpoints",{"_index":573,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.gettimedifference",{"_index":1718,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.gotcontest",{"_index":1382,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["this.gotpoints",{"_index":1383,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["this.hoursinaday",{"_index":1715,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.hourstodday",{"_index":1714,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.http.delete(url",{"_index":813,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.get(`${this.getpointsurl}/${localstorage.getitem('username",{"_index":737,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(`${this.geturl}/${index",{"_index":732,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(`${this.isrunningurl}/${id",{"_index":738,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(`${this.passurl}/${id}/${localstorage.getitem('username",{"_index":739,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(this.getpurl",{"_index":730,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(this.getrurl",{"_index":728,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(this.getuurl",{"_index":729,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(url",{"_index":811,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.post('http://127.0.0.1:8000/api/image',fd",{"_index":1593,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.http.post(`${this.submitcodeurl}/${id}`,code",{"_index":734,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.post(`${this.submitfileurl}/${id}`,code",{"_index":736,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.post(this.firstry",{"_index":1055,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post(this.geturl",{"_index":1514,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.http.post(this.getuserurl",{"_index":1516,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.http.post(this.posturl",{"_index":1058,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegService.html":{}}}],["this.http.post(this.posturl,formdata",{"_index":731,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.post(url,infile,this.httpoptions",{"_index":1642,"title":{},"body":{"injectables/RunService.html":{}}}],["this.http.post(url,input,this.httpoptions",{"_index":809,"title":{},"body":{"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["this.httpoptions",{"_index":1056,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{}}}],["this.id",{"_index":560,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.image",{"_index":1412,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.image=image",{"_index":1349,"title":{},"body":{"classes/NewUser.html":{}}}],["this.imgerr",{"_index":1594,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.imgerr=\"invalid",{"_index":1597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.imgurl",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.inbutton.nativeelement.value",{"_index":398,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.injector.get(loginservice",{"_index":1755,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.input",{"_index":1317,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.inputready",{"_index":379,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.insert(this.dirk",{"_index":1278,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.insert(url",{"_index":1164,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.insertstructure(item.children",{"_index":1169,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.insertstructure(this.list",{"_index":1268,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.is_staff",{"_index":1420,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.lang",{"_index":597,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.last_name",{"_index":1424,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.last_name=last_name",{"_index":1354,"title":{},"body":{"classes/NewUser.html":{}}}],["this.link",{"_index":1595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.list",{"_index":1185,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.load",{"_index":435,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.localcall",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password').value",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username').value",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logserv.trytoken(this.myuser",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.millisecondsinasecond",{"_index":1710,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.minutesinanhour",{"_index":1713,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.minutestodday",{"_index":1712,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.mynewuser",{"_index":1599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.myuser",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.newnamefile(oldname,result,url",{"_index":1140,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.newnamefolder(oldname,result,url",{"_index":1141,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.notsuccess",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onupload",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.opendialog(\"file\",\"create",{"_index":1247,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.opendialog(\"file\",\"rename",{"_index":1296,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.opendialog(\"folder\",\"rename",{"_index":1299,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.outbutton.nativeelement.value",{"_index":399,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.output",{"_index":1325,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.outputready",{"_index":380,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.passed",{"_index":600,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.password=password",{"_index":1352,"title":{},"body":{"classes/NewUser.html":{}}}],["this.pcomps",{"_index":437,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.points",{"_index":602,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.points=pts",{"_index":1428,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.posturl}/${username}/${dirk",{"_index":808,"title":{},"body":{"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["this.posturl}/${username}/${dirk}/${id",{"_index":812,"title":{},"body":{"injectables/FileService.html":{}}}],["this.profileservice.getuserdetail(this.user",{"_index":1410,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.rcomps",{"_index":432,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.regform.get('email').value",{"_index":1601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('first_name').value",{"_index":1603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('last_name').value",{"_index":1604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('password').value",{"_index":1602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('username').value",{"_index":1600,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regserv.tryreg(this.mynewuser",{"_index":1605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.renamelistfile(item.children",{"_index":1243,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renamelistfile(this.list",{"_index":1254,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renamelistfolder(item.children",{"_index":1208,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renamelistfolder(this.list",{"_index":1228,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renameurl}/${username}/${dirk",{"_index":815,"title":{},"body":{"injectables/FileService.html":{}}}],["this.route.params.subscribe",{"_index":558,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.runscript.runscript(send,this.uservice.getuser",{"_index":1327,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.runscript.runscript(send,this.uservice.getuser(),this.currentfile.url).subscribe(receivied",{"_index":1323,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.savefile(file",{"_index":1137,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.savefolder(folder",{"_index":1138,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.secondsinaminute",{"_index":1711,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.secondstodday",{"_index":1708,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.startexecution",{"_index":562,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.subscription",{"_index":564,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":642,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["this.theme",{"_index":595,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.timedifference",{"_index":1698,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.title",{"_index":569,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.ucomps",{"_index":434,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.user",{"_index":1409,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet",{"_index":1414,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.date_joined",{"_index":1419,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.email",{"_index":1417,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.first_name",{"_index":1423,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.is_staff",{"_index":1421,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.last_name",{"_index":1425,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.username=username",{"_index":1350,"title":{},"body":{"classes/NewUser.html":{}}}],["this.uservice.getuser",{"_index":618,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["this.validate",{"_index":567,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.visible=false",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.working",{"_index":606,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["three",{"_index":404,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["through",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["throughout",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["till",{"_index":346,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["time",{"_index":278,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/TimerComponent.html":{}}}],["timedifference",{"_index":1669,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["timer.component.html",{"_index":1659,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.scss",{"_index":1658,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer/timer.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["timercomponent",{"_index":91,"title":{"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["times",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"interfaces/Contest.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{}}}],["token",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["tokeninterceptor",{"_index":1752,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["tokeninterceptorservice",{"_index":113,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["tokens",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{}}}],["top",{"_index":653,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["total",{"_index":691,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["transform",{"_index":914,"title":{},"body":{"components/LoadingComponent.html":{}}}],["transition",{"_index":920,"title":{},"body":{"components/LoadingComponent.html":{},"components/ProfileComponent.html":{}}}],["translatex",{"_index":915,"title":{},"body":{"components/LoadingComponent.html":{}}}],["trash.trash",{"_index":1215,"title":{},"body":{"classes/NavigationModel.html":{}}}],["trash.trash\").map(f=>f.script",{"_index":1266,"title":{},"body":{"classes/NavigationModel.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["true",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["trying",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{}}}],["trylogin",{"_index":1020,"title":{},"body":{"injectables/LoginService.html":{}}}],["trylogin(user",{"_index":1038,"title":{},"body":{"injectables/LoginService.html":{}}}],["trylogin(user:user):observable",{"_index":1057,"title":{},"body":{"injectables/LoginService.html":{}}}],["tryreg",{"_index":1518,"title":{},"body":{"injectables/RegService.html":{}}}],["tryreg(user",{"_index":1520,"title":{},"body":{"injectables/RegService.html":{}}}],["tryreg(user:newuser):observable",{"_index":1528,"title":{},"body":{"injectables/RegService.html":{}}}],["trytoken",{"_index":1021,"title":{},"body":{"injectables/LoginService.html":{}}}],["trytoken(user",{"_index":1041,"title":{},"body":{"injectables/LoginService.html":{}}}],["trytoken(user:user):observable",{"_index":1054,"title":{},"body":{"injectables/LoginService.html":{}}}],["tsd",{"_index":1846,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1848,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1024,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type':'application/json",{"_index":802,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["types",{"_index":405,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["types/jwt",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1305,"title":{},"body":{"classes/NavigationModel.html":{}}}],["ucomps",{"_index":419,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["unique",{"_index":1763,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["unit",{"_index":1870,"title":{},"body":{"index.html":{}}}],["until",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{}}}],["up",{"_index":746,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["upcoming",{"_index":325,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"injectables/CompetitionService.html":{}}}],["update",{"_index":456,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["updated",{"_index":1172,"title":{},"body":{"classes/NavigationModel.html":{}}}],["updatelang",{"_index":497,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["updates",{"_index":1202,"title":{},"body":{"classes/NavigationModel.html":{}}}],["updatetheme",{"_index":498,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["upload",{"_index":1307,"title":{},"body":{"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["uploaded",{"_index":1610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["uploadinput",{"_index":291,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploadinput(files",{"_index":326,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploadoutput",{"_index":292,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploadoutput(files",{"_index":340,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploads",{"_index":1105,"title":{},"body":{"classes/NavigationModel.html":{}}}],["uploadsource",{"_index":499,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["uploadsource(event",{"_index":514,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["upoads",{"_index":334,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["url",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["url(\"/back",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{}}}],["url,this.uservice.getuser()).subscribe",{"_index":1226,"title":{},"body":{"classes/NavigationModel.html":{}}}],["url.split",{"_index":1227,"title":{},"body":{"classes/NavigationModel.html":{}}}],["urls",{"_index":1194,"title":{},"body":{"classes/NavigationModel.html":{}}}],["use",{"_index":317,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["useclass",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["useful",{"_index":837,"title":{},"body":{"components/HomeComponent.html":{}}}],["user",{"_index":226,"title":{"interfaces/User.html":{}},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user_fk",{"_index":1385,"title":{},"body":{"interfaces/Profile.html":{}}}],["userdet",{"_index":1392,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userid",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["userimage",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["username",{"_index":617,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"injectables/RunService.html":{},"interfaces/User.html":{}}}],["username/password",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["username:new",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["username:string",{"_index":814,"title":{},"body":{"injectables/FileService.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/RunService.html":{},"interfaces/User.html":{}}}],["users",{"_index":1399,"title":{},"body":{"components/ProfileComponent.html":{}}}],["users.we",{"_index":825,"title":{},"body":{"components/HomeComponent.html":{}}}],["uservice",{"_index":500,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["uses",{"_index":271,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{}}}],["using",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["val",{"_index":1153,"title":{},"body":{"classes/NavigationModel.html":{}}}],["val.filename",{"_index":1155,"title":{},"body":{"classes/NavigationModel.html":{}}}],["validate",{"_index":293,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/RegisterComponent.html":{}}}],["validates",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1191,"title":{},"body":{"classes/NavigationModel.html":{}}}],["var",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["variable",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1772,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1051,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["version",{"_index":1855,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1622,"title":{},"body":{"components/RegisterComponent.html":{}}}],["via",{"_index":337,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"index.html":{}}}],["view",{"_index":1090,"title":{},"body":{"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{}}}],["viewchild",{"_index":362,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["viewchild('codeeditor",{"_index":522,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["viewchild('inacceptor",{"_index":356,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewchild('inacceptor',{static",{"_index":365,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewchild('outacceptor",{"_index":360,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewchild('outacceptor',{static",{"_index":366,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewed",{"_index":1258,"title":{},"body":{"classes/NavigationModel.html":{}}}],["visible",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{}}}],["visit",{"_index":438,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["void",{"_index":300,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["w3",{"_index":893,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["way",{"_index":1308,"title":{},"body":{"classes/NavigationModel.html":{}}}],["webkit",{"_index":913,"title":{},"body":{"components/LoadingComponent.html":{}}}],["website",{"_index":819,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["weight",{"_index":1486,"title":{},"body":{"components/ProfileComponent.html":{}}}],["welcome",{"_index":834,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["went",{"_index":622,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["whether",{"_index":1032,"title":{},"body":{"injectables/LoginService.html":{}}}],["while(!this.startexecution",{"_index":563,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["whole",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["width",{"_index":907,"title":{},"body":{"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["width:30em",{"_index":1494,"title":{},"body":{"components/ProfileComponent.html":{}}}],["window",{"_index":747,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["word",{"_index":1451,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["working",{"_index":488,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["workspaces",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrap",{"_index":1452,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["wresslemaniacs",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["wressler",{"_index":1430,"title":{},"body":{"components/ProfileComponent.html":{}}}],["wresslers",{"_index":835,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrong",{"_index":623,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["you're",{"_index":610,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["yourself",{"_index":1607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1850,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _loginserv\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_loginserv: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loginserv\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _loginserv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ocde'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                        Title remains same throughout the site \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LoginService } from './login.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n/**\n * The root component of the project which has all the other components as a part of it\n */\nexport class AppComponent {\n  /**Title remains same throughout the site */\n  title = 'ocde';\n\n  constructor(public _loginserv:LoginService){}\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n      \n        Home\n      \n      \n        Profile\n      \n    \n    \n        Login\n        Register\n        Logout        \n    \n  \n    \n -->\n\n              \n\n\n\n    Made with  by Team WreSSLemaniacs.      \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Home                    Profile                      Login        Register        Logout                   -->                  Made with  by Team WreSSLemaniacs.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompCreateComponent\n\nCompCreateComponent\n\nAppModule -->\n\nCompCreateComponent->AppModule\n\n\n\n\n\nCompDashboardComponent\n\nCompDashboardComponent\n\nAppModule -->\n\nCompDashboardComponent->AppModule\n\n\n\n\n\nCompetitionComponent\n\nCompetitionComponent\n\nAppModule -->\n\nCompetitionComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nEditorDialogComponent\n\nEditorDialogComponent\n\nAppModule -->\n\nEditorDialogComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPastcontestComponent\n\nPastcontestComponent\n\nAppModule -->\n\nPastcontestComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nRegService\n\nRegService\n\nAppModule -->\n\nRegService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            All the modules that were required for the whole site are declared here\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CompCreateComponent\n                        \n                        \n                            CompDashboardComponent\n                        \n                        \n                            CompetitionComponent\n                        \n                        \n                            EditorComponent\n                        \n                        \n                            EditorDialogComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PastcontestComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TimerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EditorDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                        \n                            RegService\n                        \n                        \n                            TokenInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegService } from './reg.service';\nimport { LoginService } from './login.service';\nimport { AuthGuard } from './auth.guard';\nimport { EditorComponent } from './editor/editor.component';\nimport { EditorDialogComponent } from './editor-dialog/editor-dialog.component';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { CompDashboardComponent } from './comp-dashboard/comp-dashboard.component';\nimport { CompCreateComponent } from './comp-create/comp-create.component';\nimport { CompetitionComponent } from './competition/competition.component';\nimport { NgxMatDatetimePickerModule, NgxMatTimepickerModule } from '@angular-material-components/datetime-picker';\nimport { NgxMatMomentModule } from \"@angular-material-components/moment-adapter\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { TimerComponent } from './timer/timer.component';\nimport { PastcontestComponent } from './pastcontest/pastcontest.component';\nimport { LoadingComponent } from './loading/loading.component';\n/**\n * All the modules that were required for the whole site are declared here\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    HomeComponent,\n    EditorComponent,\n    EditorDialogComponent,\n    CompDashboardComponent,\n    CompCreateComponent,\n    CompetitionComponent,\n    TimerComponent,\n    PastcontestComponent,\n    LoadingComponent\n  ],\n  entryComponents: [EditorDialogComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatMomentModule,\n    MatDatepickerModule\n  ],\n  providers: [RegService,LoginService,AuthGuard,\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component'\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AuthGuard } from './auth.guard';\nimport { EditorComponent } from './editor/editor.component';\nimport { CompCreateComponent } from './comp-create/comp-create.component';\nimport { CompDashboardComponent } from \"./comp-dashboard/comp-dashboard.component\";\nimport { CompetitionComponent } from \"./competition/competition.component\";\nimport { PastcontestComponent } from \"./pastcontest/pastcontest.component\";\n\n/**\n * Specification of all the routes that are used by the site. All the routes are self-explanatory from their names\n */\nconst routes: Routes = [\n  { path: 'login',component:LoginComponent },\n  { path: 'register', component: RegisterComponent},\n  { path: 'home', component: HomeComponent },\n  { path: 'profile', component: ProfileComponent,canActivate:[ AuthGuard ]},\n  { path: 'editor', component: EditorComponent, canActivate:[ AuthGuard ]},\n  { path: 'create', component: CompCreateComponent, canActivate:[ AuthGuard ] },\n  { path: 'dashboard', component: CompDashboardComponent, canActivate:[ AuthGuard ] },\n  { path: 'competition/:id', component: CompetitionComponent, canActivate:[ AuthGuard ] },\n  { path: 'pastcompetition/:id', component: PastcontestComponent, canActivate:[ AuthGuard ] },\n  { path: '**', redirectTo:'home',pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [BrowserModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_login: LoginService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor instantiates required services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _login\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To call the functions of login service class\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To call the functions of router class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:25\n                \n            \n\n\n            \n                \n                    The user can activate the component url only if this function returns True, which is determined using a function from loginservice.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * An essential class that implements CanActivate from router module.\n * This class been used to prevent the acess of the rest of the site to the user until the user is logged in.\n */\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor instantiates required services\n   * @param _login To call the functions of login service class\n   * @param _router To call the functions of router class\n   */\n  constructor(private _login:LoginService, private _router:Router){}\n\n  /**\n   * The user can activate the component url only if this function returns True, which is determined using a function from loginservice.\n   */\n  canActivate():boolean{\n    if(this._login.loggedIn()){\n      return true\n    }\n    else{\n      this._router.navigate(['/login'])\n      return false\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comp.html":{"url":"interfaces/Comp.html","title":"interface - Comp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/comp.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endtime\n                                \n                                \n                                        id\n                                \n                                \n                                        problem\n                                \n                                \n                                        starttime\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endtime\n                                    \n                                \n                                \n                                    \n                                        endtime:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        problem\n                                    \n                                \n                                \n                                    \n                                        problem:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starttime\n                                    \n                                \n                                \n                                    \n                                        starttime:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Comp {\n    title : String,\n    problem : String,\n    id : number,\n    starttime,\n    endtime\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompCreateComponent.html":{"url":"components/CompCreateComponent.html","title":"component - CompCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comp-create/comp-create.component.ts\n\n\n    \n        Description\n    \n    \n        This component is essentially a form. \nIt lets you supply a problem and a testcase along with a schedule of your contest.\nIt uses Angular's NgxDateTimeModule and NgxMomentModule which uses Moment.js to accept Date and Time accurate to the minute.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comp-create\n            \n\n            \n                styleUrls\n                ./comp-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comp-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                inbutton\n                            \n                            \n                                inputReady\n                            \n                            \n                                outbutton\n                            \n                            \n                                outputReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                uploadInput\n                            \n                            \n                                uploadOutput\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, cpservice: CompetitionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comp-create/comp-create.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitForm\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:88\n                \n            \n\n\n            \n                \n                    The submitForm function is called when a user presses the Create button after providing the relevant information.\nThis button accumulates all the information into a FormData component and sends it to the server.\nAlongside, it clears the form so that you can be ready to create another contest.\nNote : Use the first 100 or so characters of your problem statement to generate interest. These are displayed when your problem is upcoming!\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadInput\n                        \n                        \n                    \n                \n            \n            \n                \nuploadInput(files)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:59\n                \n            \n\n\n            \n                \n                    The following are standard function to store File type data in a form to facilitate easy upoads\nIn a request, the file is accesible via request.FILES['filename']\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadOutput\n                        \n                        \n                    \n                \n            \n            \n                \nuploadOutput(files)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:45\n                \n            \n\n\n            \n                \n                    A simple boolean function which keeps the Create button disabled till all the relevant information is provided\n\n\n                    \n                    \n                    \n                        Returns :         Boolean\n\n                    \n                    \n                        True if all input fields are filled\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inbutton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('inAcceptor', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outbutton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('outAcceptor', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outputReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup,FormBuilder } from \"@angular/forms\";\nimport { CompetitionService } from \"../competition.service\";\n\n/**\n * This component is essentially a form. \n * It lets you supply a problem and a testcase along with a schedule of your contest.\n * It uses Angular's NgxDateTimeModule and NgxMomentModule which uses Moment.js to accept Date and Time accurate to the minute.\n */\n\n@Component({\n  selector: 'app-comp-create',\n  templateUrl: './comp-create.component.html',\n  styleUrls: ['./comp-create.component.scss']\n})\n\nexport class CompCreateComponent implements OnInit {\n\n  @ViewChild('inAcceptor',{static: false}) inbutton : ElementRef;\n  @ViewChild('outAcceptor',{static: false}) outbutton : ElementRef;\n\n  form: FormGroup;\n\n  inputReady : Boolean = false;\n  outputReady : Boolean = false;\n\n  constructor(\n    public fb: FormBuilder,\n    private cpservice: CompetitionService\n    ) {\n    this.form = this.fb.group({\n      title: [''],\n      problem_st: [''],\n      infile :[null],\n      outfile: [null],\n      start: [''],\n      end: [''],\n    })\n  }\n\n  /**\n   * A simple boolean function which keeps the Create button disabled till all the relevant information is provided\n   * @returns True if all input fields are filled\n   */\n  validate(): Boolean {\n    if(this.form.get('title').value=='') return false;\n    if(this.form.get('problem_st').value=='') return false;\n    if(this.form.get('start').value=='') return false;\n    if(this.form.get('end').value=='') return false;\n    return true && this.inputReady && this.outputReady;\n  }\n\n  ngOnInit() { }\n\n  /**\n   * The following are standard function to store File type data in a form to facilitate easy upoads\n   * In a request, the file is accesible via request.FILES['filename']\n   */\n  uploadInput(files) {\n    if(files.length>0) {\n      const file = files.item(0);\n      this.form.get('infile').setValue(file);\n      this.inputReady = true;\n    }\n    else {\n      this.inputReady = false;\n    }\n  }\n\n  uploadOutput(files) {\n    if(files.length>0) {\n      const file = files.item(0);\n      this.form.get('outfile').setValue(file);\n      this.outputReady = true;\n    }\n    else {\n      this.outputReady = false;\n    }\n  }\n\n  /**\n   * The submitForm function is called when a user presses the Create button after providing the relevant information.\n   * This button accumulates all the information into a FormData component and sends it to the server.\n   * Alongside, it clears the form so that you can be ready to create another contest.\n   * \n   * Note : Use the first 100 or so characters of your problem statement to generate interest. These are displayed when your problem is upcoming!\n   */\n  submitForm() {\n    const formData = new FormData();\n    formData.append('title',this.form.get('title').value);\n    formData.append('problem_st',this.form.get('problem_st').value);\n    formData.append('infile',this.form.get('infile').value);\n    formData.append('outfile',this.form.get('outfile').value);\n    formData.append('start',this.form.get('start').value.format());\n    formData.append('end',this.form.get('end').value.format());\n    this.cpservice.regContest(formData).subscribe(\n      (response) => alert(response),\n      (err) => console.log(console.error()\n      )\n    );\n    this.form.setValue({\n      title: [''],\n      problem_st: [''],\n      infile :[null],\n      outfile: [null],\n      start: [''],\n      end: ['']\n    });\n    this.inbutton.nativeElement.value = null;\n    this.outbutton.nativeElement.value = null;\n  }\n\n}\n    \n\n    \n        \n    \n        \n            \n                \n                    Title\n                    \n                \n            \n         -->\n\n        \n            \n                Problem Statement\n                \n            \n        \n        \n        \n            \n                Input\n                \n            \n    \n            \n                Expected Output\n                \n            \n            \n            \n            \n            \n    \n            \n            \n            \n    \n            \n                \n                    Create\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./comp-create.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Title                                                         -->                                    Problem Statement                                                                                Input                                                            Expected Output                                                                                                                                                                        Create                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompDashboardComponent.html":{"url":"components/CompDashboardComponent.html","title":"component - CompDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comp-dashboard/comp-dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders the three types of competitions :\n\nRunning\nUpcoming\nPast\nand provides link to appropriate pages.\nIt uses TimerComponent as a child component.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comp-dashboard\n            \n\n            \n                styleUrls\n                ./comp-dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comp-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                pcomps\n                            \n                            \n                                rcomps\n                            \n                            \n                                running\n                            \n                            \n                                ucomps\n                            \n                            \n                                upcoming\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cpservice: CompetitionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comp-dashboard/comp-dashboard.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pcomps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comp[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rcomps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comp[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"end:\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ucomps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comp[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upcoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"start:\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CompetitionService } from \"../competition.service\";\nimport { Comp } from \"../comp\"\n\n/**\n * This component renders the three types of competitions :\n * 1. Running\n * 2. Upcoming\n * 3. Past\n * and provides link to appropriate pages.\n * It uses TimerComponent as a child component.\n */\n\n@Component({\n  selector: 'app-comp-dashboard',\n  templateUrl: './comp-dashboard.component.html',\n  styleUrls: ['./comp-dashboard.component.scss']\n})\n\nexport class CompDashboardComponent implements OnInit {\n\n  upcoming: String = \"start:\";\n  running: String = \"end:\";\n\n  rcomps : Comp[] = [];\n  ucomps : Comp[] = [];\n  pcomps : Comp[] = [];\n  load: boolean= true;\n  \n  constructor(\n    private cpservice : CompetitionService\n  ) { }\n\n  ngOnInit(): void {\n    this.cpservice.fetchRunningCompetetions().subscribe(\n      running => {\n        this.rcomps = running;\n      }\n    );\n    this.cpservice.fetchUpcomingCompetetions().subscribe(\n      running => {\n        this.ucomps = running;\n        this.load = false;\n      }\n    );\n    this.cpservice.fetchPastCompetetions().subscribe(\n      running => {\n        this.pcomps = running;\n      }\n    );\n  }\n}\n    \n\n    \n        \n    \n\n\n\n\n    \n        \n            \n                \n                    Running Competitions\n\n                    \n                        No Competitions Running! Visit again later!\n                    \n\n                    \n                        \n                            \n                                {{comp.title}}\n                                \n                            \n                            \n                                {{comp.problem.substr(0,100)}}\n                                Participate\n                            \n                        \n                    \n                \n            \n            \n                \n                    Past Competitions\n\n                    \n                        \n                            \n                                {{comp.title}}\n                            \n                            \n                                {{comp.problem.substr(0,100)}}\n                                See Your Performance\n                            \n                        \n                    \n                \n            \n            \n                \n                    Upcoming Competitions\n\n                    \n                        No Upcoming Competitions! Create your own!\n                    \n\n                    \n                        \n                            \n                                {{comp.title}}\n                                \n                            \n                            \n                                {{comp.problem.substr(0,100)}}\n                                Participate\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./comp-dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Running Competitions                                            No Competitions Running! Visit again later!                                                                                                                            {{comp.title}}                                                                                                                        {{comp.problem.substr(0,100)}}                                Participate                                                                                                                                                    Past Competitions                                                                                                        {{comp.title}}                                                                                        {{comp.problem.substr(0,100)}}                                See Your Performance                                                                                                                                                    Upcoming Competitions                                            No Upcoming Competitions! Create your own!                                                                                                                            {{comp.title}}                                                                                                                        {{comp.problem.substr(0,100)}}                                Participate                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompetitionComponent.html":{"url":"components/CompetitionComponent.html","title":"component - CompetitionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompetitionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/competition/competition.component.ts\n\n\n    \n        Description\n    \n    \n        This component is essentially EditorComponent - File Handling + Live Rendering\nThe component has a Subscription which keeps checking that the contest is running\nAt the end of a contest, the user is given a prompt and redirected to the profile page\nUPDATE : In the next update, we would like to make this process happen completely on the frontend by storing the endtime of the contest, reducing API calls\nUPDATE : We would still maintain a connection with the server for mid-contest information like errors in problem statements and clarifications\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-competition\n            \n\n            \n                styleUrls\n                ./competition.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./competition.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aceEditor\n                            \n                            \n                                allowed\n                            \n                            \n                                body\n                            \n                            \n                                code\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                editorBeautify\n                            \n                            \n                                    Public\n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                LANG\n                            \n                            \n                                passed\n                            \n                            \n                                points\n                            \n                            \n                                startexecution\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                THEME\n                            \n                            \n                                title\n                            \n                            \n                                working\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                beautifyContents\n                            \n                            \n                                checkRunning\n                            \n                            \n                                getPoints\n                            \n                            \n                                loaded\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                runCode\n                            \n                            \n                                runFile\n                            \n                            \n                                    Public\n                                updateLang\n                            \n                            \n                                    Public\n                                updateTheme\n                            \n                            \n                                uploadSource\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, uservice: LoginService, cpservice: CompetitionService, _router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/competition/competition.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uservice\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            beautifyContents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beautifyContents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkRunning\n                        \n                        \n                    \n                \n            \n            \n                \ncheckRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPoints\n                        \n                        \n                    \n                \n            \n            \n                \ngetPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loaded\n                        \n                        \n                    \n                \n            \n            \n                \nloaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            runCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    runCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runFile\n                        \n                        \n                    \n                \n            \n            \n                \nrunFile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateLang\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLang()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadSource\n                        \n                        \n                    \n                \n            \n            \n                \nuploadSource(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aceEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ace.Ace.Editor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('codeEditor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editorBeautify\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LANG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'c_cpp'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startexecution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            THEME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'github'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            working\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { LoginService } from \"../login.service\";\n\nimport { interval, Subscription } from \"rxjs\";\nimport { ActivatedRoute,Router } from \"@angular/router\";\n\nimport * as ace from 'ace-builds';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-ruby';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-ambiance';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-chaos';\nimport 'ace-builds/src-noconflict/theme-chrome';\nimport 'ace-builds/src-noconflict/theme-cobalt';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-beautify';\n\nimport { CompetitionService } from '../competition.service';\n\n/**\n * This component is essentially EditorComponent - File Handling + Live Rendering\n * \n * The component has a Subscription which keeps checking that the contest is running\n * At the end of a contest, the user is given a prompt and redirected to the profile page\n * \n * UPDATE : In the next update, we would like to make this process happen completely on the frontend by storing the endtime of the contest, reducing API calls\n * UPDATE : We would still maintain a connection with the server for mid-contest information like errors in problem statements and clarifications\n */\n\n@Component({\n  selector: 'app-competition',\n  templateUrl: './competition.component.html',\n  styleUrls: ['./competition.component.scss']\n})\n\nexport class CompetitionComponent implements AfterViewInit {\n\n  @ViewChild('codeEditor') private editor: ElementRef;\n\n  id: number;\n  startexecution: Boolean = false;\n\n  private subscription : Subscription;\n\n  private aceEditor: ace.Ace.Editor;\n  private editorBeautify;\n\n  passed: Boolean = false;\n  points: number;\n\n  allowed: Boolean = false;\n  working: Boolean = true;\n\n  form: FormGroup;\n\n  title: String;\n  body: String;\n\n  THEME: string = 'github';\n  LANG: string = 'c_cpp';\n\n  code: string = '';\n\n  constructor(\n    public fb: FormBuilder,\n    private uservice: LoginService,\n    private cpservice: CompetitionService,\n    private _router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.form = this.fb.group({\n      script: [null],\n      language: [''],\n    });\n    this.route.params.subscribe(\n      (params) => {\n        this.id = params.id;\n        this.startexecution = true;\n      }\n    )\n  }\n\n  ngAfterViewInit(): void {\n    while(!this.startexecution) {;}\n    this.subscription = interval(1000)\n      .subscribe(x => { this.validate(); });\n    this.cpservice.fetchCompetitionbyId(this.id).subscribe(\n      (comp) => {\n        this.title = comp.title;\n        this.body = comp.problem;\n      }\n    );\n    this.checkRunning();\n    this.getPoints();\n    ace.config.set('basePath', 'path');\n    ace.config.set(\"fontSize\", \"16px\");\n    ace.require('ace/ext/language_tools');\n    this.editorBeautify = ace.require('ace/ext/beautify');\n    const basicEditorOptions: Partial = {\n      highlightActiveLine: true,\n      minLines: 14,\n      maxLines: Infinity,\n    };\n    const extraEditorOptions = {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true\n    };\n    const editorOptions = Object.assign(basicEditorOptions, extraEditorOptions);\n    this.aceEditor = ace.edit(this.editor.nativeElement, editorOptions);\n    this.aceEditor.setTheme('ace/theme/' + this.THEME);\n    this.aceEditor.session.setMode('ace/mode/' + this.LANG);\n  }\n\n  loaded() : Boolean {\n    return true;\n  }\n\n  getPoints() {\n    this.cpservice.contestPassed(this.id).subscribe(\n      (res) => {\n        this.passed = res.passed;\n        this.points = res.points;\n      }\n    );\n  }\n\n  checkRunning() {\n    this.cpservice.isContestRunning(this.id).subscribe(\n      (res) => {\n        this.allowed = res;\n        this.working = res;\n      }\n    );\n  }\n\n  validate() {\n    this.checkRunning();\n    if(!this.working) {\n      alert(\"Competition Expired! You're being taken to your profile!\");\n      this._router.navigate(['/profile']);\n    }\n  }\n\n  public runCode() {\n    this.code = this.aceEditor.session.getValue();\n    this.cpservice.submitCode(\n      this.id,\n      {\n        'username' : this.uservice.getUser(),\n        'script' : this.code,\n        'language' : this.LANG\n      }\n    ).subscribe(\n      (response) => {\n        alert(response);\n        this.getPoints();\n      },\n      (error) => {\n        alert(\"Something went wrong, we are fixing the issue!\");\n        console.log(error);\n      }\n    );\n  }\n\n  public beautifyContents() {\n    if (this.aceEditor && this.editorBeautify) {\n      const session = this.aceEditor.getSession();\n      this.editorBeautify.beautify(session);\n    }\n  }\n\n  public updateTheme() {\n    this.aceEditor.setTheme('ace/theme/' + this.THEME);\n  }\n\n  public updateLang() {\n    this.aceEditor.session.setMode('ace/mode/' + this.LANG);\n    this.aceEditor.session.setValue(\"\");\n    this.form.patchValue({\n      language: this.LANG,\n    });\n    this.form.get('language').updateValueAndValidity();\n  }\n\n  uploadSource(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      script: file,\n      language: this.LANG,\n    });\n    this.form.get('script').updateValueAndValidity();\n    this.form.get('language').updateValueAndValidity();\n  }\n\n  runFile() {\n    var formData: any = new FormData();\n    formData.append(\"username\", this.uservice.getUser());\n    formData.append(\"script\", this.form.get('script').value);\n    formData.append(\"language\", this.form.get('language').value);\n    this.cpservice.submitFile(\n      this.id,\n      formData\n    ).subscribe(\n      (response) => {\n        alert(response);\n        this.getPoints();\n      },\n      (error) => {\n        alert(\"Something went wrong, we are fixing the issue!\");\n        console.log(error);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n    \n\n    \n        \n    \n\n\n\n\n    \n        \n            {{title}}\n            \n            Title description, April 7, 2014 -->\n        \n        \n        \n            {{body}}\n            \n            \n                Passed with {{points}} points!\n            \n            \n                Yet to solve!\n            \n            \n        \n    \n  \n    \n        \n            \n                Select Theme\n                \n                Github Theme\n                Ambiance Theme\n                Chaos Theme\n                Chrome Theme\n                Cobalt Theme\n                \n            \n        \n        \n            \n                Select Language\n                \n                C++\n                Python\n                Ruby\n                \n            \n        \n    \n    \n    \n    \n\n    \n        \n            \n                \n                        Run\n                \n            \n            \n            \n                \n                    Align\n                \n            \n        \n        \n            \n                \n                    \n                \n                \n                \n                    \n                        Run File\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./competition.component.scss\n                \n                hr.new1{\n    border-top: 1.5px solid;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{title}}                        Title description, April 7, 2014 -->                                    {{body}}                                        Passed with {{points}} points!                                        Yet to solve!                                                                              Select Theme                                Github Theme                Ambiance Theme                Chaos Theme                Chrome Theme                Cobalt Theme                                                                        Select Language                                C++                Python                Ruby                                                                                                                    Run                                                                                        Align                                                                                                                                                                                        Run File                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompetitionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompetitionService.html":{"url":"injectables/CompetitionService.html","title":"injectable - CompetitionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompetitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/competition.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getPointsUrl\n                            \n                            \n                                getPUrl\n                            \n                            \n                                getRUrl\n                            \n                            \n                                getUrl\n                            \n                            \n                                getUUrl\n                            \n                            \n                                isRunningUrl\n                            \n                            \n                                passUrl\n                            \n                            \n                                postUrl\n                            \n                            \n                                submitCodeUrl\n                            \n                            \n                                submitFileUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                contestPassed\n                            \n                            \n                                fetchCompetitionbyId\n                            \n                            \n                                fetchPastCompetetions\n                            \n                            \n                                fetchPoints\n                            \n                            \n                                fetchRunningCompetetions\n                            \n                            \n                                fetchUpcomingCompetetions\n                            \n                            \n                                isContestRunning\n                            \n                            \n                                regContest\n                            \n                            \n                                submitCode\n                            \n                            \n                                submitFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/competition.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contestPassed\n                        \n                        \n                    \n                \n            \n            \n                \ncontestPassed(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCompetitionbyId\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCompetitionbyId(index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Competition details of contest with given id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchPastCompetetions\n                        \n                        \n                    \n                \n            \n            \n                \nfetchPastCompetetions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        List of all past competitions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchPoints\n                        \n                        \n                    \n                \n            \n            \n                \nfetchPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Total points of given user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchRunningCompetetions\n                        \n                        \n                    \n                \n            \n            \n                \nfetchRunningCompetetions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        List of all running competitions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUpcomingCompetetions\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUpcomingCompetetions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        List of all upcoming competitions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isContestRunning\n                        \n                        \n                    \n                \n            \n            \n                \nisContestRunning(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            regContest\n                        \n                        \n                    \n                \n            \n            \n                \nregContest(formData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitCode\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitCode(id, code)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Success status of code\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitFile\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitFile(id, code)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Success status of file\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPointsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/points'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/get/past'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/get/running'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/competition'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/get/upcoming'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRunningUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/isrunning'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/passed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/postcontest'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:17\n                            \n                        \n\n                \n                    \n                        Provides access to multiple API endpoints\nThe service names are quite self explanatory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitCodeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/submit/code'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitFileUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/submit/file'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Comp } from './comp';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CompetitionService {\n\n  /**\n   * Provides access to multiple API endpoints\n   * The service names are quite self explanatory\n   */\n\n  postUrl = 'http://127.0.0.1:8000/api/contest/postcontest';\n  getRUrl = 'http://127.0.0.1:8000/api/contest/get/running';\n  getUUrl = 'http://127.0.0.1:8000/api/contest/get/upcoming';\n  getPUrl = 'http://127.0.0.1:8000/api/contest/get/past';\n  getUrl = 'http://127.0.0.1:8000/api/competition';\n  submitCodeUrl = 'http://127.0.0.1:8000/api/submit/code';\n  submitFileUrl = 'http://127.0.0.1:8000/api/submit/file';\n  getPointsUrl = 'http://127.0.0.1:8000/api/points';\n  isRunningUrl = 'http://127.0.0.1:8000/api/contest/isrunning';\n  passUrl = 'http://127.0.0.1:8000/api/contest/passed';\n\n  constructor(private http : HttpClient) { }\n\n  /**\n   * @returns List of all running competitions\n   */\n  fetchRunningCompetetions() : Observable {\n    return this.http.get(this.getRUrl);\n  }\n\n  /**\n   * @returns List of all upcoming competitions\n   */\n  fetchUpcomingCompetetions() : Observable {\n    return this.http.get(this.getUUrl);\n  }\n\n  /**\n   * @returns List of all past competitions\n   */\n  fetchPastCompetetions() : Observable {\n    return this.http.get(this.getPUrl);\n  }\n\n  regContest(formData) {\n    return this.http.post(this.postUrl,formData);\n  }\n\n  /**\n   * @returns Competition details of contest with given id\n   */\n  fetchCompetitionbyId(index) : Observable {\n    return this.http.get(`${this.getUrl}/${index}`);\n  }\n\n  /**\n   * @returns Success status of code\n   */\n  submitCode(id,code) : Observable {\n    return this.http.post(`${this.submitCodeUrl}/${id}`,code);\n  }\n\n  /**\n   * @returns Success status of file\n   */\n  submitFile(id,code) : Observable {\n    return this.http.post(`${this.submitFileUrl}/${id}`,code);\n  }\n\n  /**\n   * @returns Total points of given user\n   */\n  fetchPoints() : Observable {\n    return this.http.get(`${this.getPointsUrl}/${localStorage.getItem('username')}`);\n  }\n\n  isContestRunning(id): Observable {\n    return this.http.get(`${this.isRunningUrl}/${id}`);\n  }\n\n  contestPassed(id) {\n    return this.http.get(`${this.passUrl}/${id}/${localStorage.getItem('username')}`);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contest.html":{"url":"interfaces/Contest.html","title":"interface - Contest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Contest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/contest.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        in_tc\n                                \n                                \n                                        out_tc\n                                \n                                \n                                        problem_st\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        in_tc\n                                    \n                                \n                                \n                                    \n                                        in_tc:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out_tc\n                                    \n                                \n                                \n                                    \n                                        out_tc:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        problem_st\n                                    \n                                \n                                \n                                    \n                                        problem_st:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contest {\n    title: String,\n    problem_st : String,\n    in_tc: File[],\n    out_tc: File[]\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorDialogComponent.html":{"url":"components/EditorDialogComponent.html","title":"component - EditorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editor-dialog/editor-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Pop up window to enter name of new file/folder\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor-dialog\n            \n\n            \n                styleUrls\n                ./editor-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./editor-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/editor-dialog/editor-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-dialog/editor-dialog.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor-dialog/editor-dialog.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n\n/**\n * Pop up window to enter name of new file/folder\n */\n\n@Component({\n  selector: 'app-editor-dialog',\n  templateUrl: './editor-dialog.component.html',\n  styleUrls: ['./editor-dialog.component.scss']\n})\nexport class EditorDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{data.text2}}\n\n         {{data.text}} name \n        \n\n\n     Cancel\n     Done \n\n\n    \n\n    \n                \n                    ./editor-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.text2}}         {{data.text}} name              Cancel     Done '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filename\n                                \n                                \n                                        script\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                    \n                                \n                                \n                                    \n                                        script:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface File {\n    filename : string,\n    script : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                            \n                                renameUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteFile\n                            \n                            \n                                deleteFolder\n                            \n                            \n                                getFile\n                            \n                            \n                                getFiles\n                            \n                            \n                                renameFile\n                            \n                            \n                                saveFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/file.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFile\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFile(id: String, username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        File details sent to delete\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFolder\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFolder(username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        File object containing success status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFile\n                        \n                        \n                    \n                \n            \n            \n                \ngetFile(id: String, username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Content of file at given path\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFiles\n                        \n                        \n                    \n                \n            \n            \n                \ngetFiles(username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        List of all files and folders in immediate subdirectory of dirk\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renameFile\n                        \n                        \n                    \n                \n            \n            \n                \nrenameFile(input: RenameFile, dirk: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RenameFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        File details sent to post\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveFile\n                        \n                        \n                    \n                \n            \n            \n                \nsaveFile(input: File, username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        File details sent to post\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/display'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file.service.ts:17\n                            \n                        \n\n                \n                    \n                        Provides access to multiple API endpoints\nThe service names are quite self explanatory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renameUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/rename'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { File } from './file';\nimport { RenameFile } from './renameFile';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  /**\n   * Provides access to multiple API endpoints\n   * The service names are quite self explanatory\n   */\n\n  postUrl = 'http://127.0.0.1:8000/api/display';\n  renameUrl = 'http://127.0.0.1:8000/api/rename';\n\n  constructor(private http : HttpClient) { }\n\n  httpOptions = {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  };\n\n  /**\n   * @returns File details sent to post\n   */\n  saveFile(input: File, username: String, dirk: String): Observable{\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    return this.http.post(url,input,this.httpOptions);\n  }\n\n  /**\n   * @returns List of all files and folders in immediate subdirectory of dirk\n   */\n  getFiles(username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    console.log(url);\n    return this.http.get(url);\n  }\n\n  /**\n   * @returns Content of file at given path\n   */\n  getFile(id: String, username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}/${id}`;\n    return this.http.get(url)\n  }\n\n  /**\n   * @returns File details sent to delete\n   */\n  deleteFile(id: String, username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}/${id}`;\n    console.log(url);\n    return this.http.delete(url);\n  }\n\n  /**\n   * @returns File object containing success status\n   */\n  deleteFolder(username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    console.log(url);\n    return this.http.delete(url);\n  }\n\n  /**\n   * @returns File details sent to post\n   */\n  renameFile(input: RenameFile, dirk: string, username:string): Observable{\n    const url = `${this.renameUrl}/${username}/${dirk}`;\n    console.log(input);\n    return this.http.post(url,input,this.httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        This is the homepage of our website.\nIt is publicly accessible and API free, which make it completely fast and suitable for our users.We have our team details, some resources and key features of the project are listed on the homepage.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * This is the homepage of our website.\n * It is publicly accessible and API free, which make it completely fast and suitable for our users.We have our team details, some resources and key features of the project are listed on the homepage.\n */\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n  \n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    WELCOME WreSSLers\n    New to coding ? Here are some useful sites.\n    C++\n    Python\n    Ruby\n\n\n\n\n  KEY FEATURES OF WreSSLemaniacs\n  \n    \n      \n      Competition Environment\n      Programming contest platform C++,Python,Ruby compatible and supported by an online IDE\n    \n    \n      \n      Directory Support\n      Directory support for every user synced with backend, with options to add and delete files and folders\n    \n    \n      \n      Environment Isolation\n      Environment isolation on the server side to improve the robustness of individual workspaces.\n    \n    \n        \n        Authenticated\n        Authenticated API end-points with Django Rest Framework tokens and Angular Http Interceptor\n    \n  \n\n\n\n\n    THE TEAM\n    \n      \n      \n        \n          \n          \n            Dhruv Arora\n            WreSSLemaniacs\n             Github\n          \n        \n      \n      \n            \n              \n              \n                Sibasis Nayak\n                WreSSLemaniacs\n                 Github\n              \n            \n          \n      \n        \n          \n          \n            Raj Aryan Agrawal\n            WreSSLemaniacs\n             Github\n          \n        \n      \n      \n        \n          \n          \n            Sahasra Ranjan\n            WreSSLemaniacs\n             Github \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                body,h1,h2,h3,h4,h5,h6 {font-family: \"Raleway\", sans-serif}\n\nbody, html {\n  height: 100%;\n  line-height: 1.8;\n}\n\n/* Full height image header */\n.bgimg-1 {\n  background-position: center;\n  background-size: cover;\n  background-image: url(\"/back\");\n  min-height: 100%;\n}\n\n.w3-bar .w3-button {\n  padding: 16px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    WELCOME WreSSLers    New to coding ? Here are some useful sites.    C++    Python    Ruby  KEY FEATURES OF WreSSLemaniacs                  Competition Environment      Programming contest platform C++,Python,Ruby compatible and supported by an online IDE                    Directory Support      Directory support for every user synced with backend, with options to add and delete files and folders                    Environment Isolation      Environment isolation on the server side to improve the robustness of individual workspaces.                        Authenticated        Authenticated API end-points with Django Rest Framework tokens and Angular Http Interceptor          THE TEAM                                                        Dhruv Arora            WreSSLemaniacs             Github                                                                                      Sibasis Nayak                WreSSLemaniacs                 Github                                                                                  Raj Aryan Agrawal            WreSSLemaniacs             Github                                                                      Sahasra Ranjan            WreSSLemaniacs             Github                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/loading/loading.component.ts\n\n\n    \n        Description\n    \n    \n        This component performs the basic task of providing a loading screen\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/loading/loading.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/loading/loading.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * This component performs the basic task of providing a loading screen\n */\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\n\nexport class LoadingComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n\n\n    \n        \n        \n        \n    \n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                .buffer {\n    width: 20em;\n    position: absolute;\n    left: 50%;\n    top: 16em;\n    -webkit-transform: translateX(-50%);\n        -ms-transform: translateX(-50%);\n            transform: translateX(-50%); }\n  \n  .layer {\n    fill: #4b4b4b;\n    -webkit-transition: all 21s ease-out;\n            transition: all 21s ease-out; }\n  \n  .loading .layer1 {\n    -webkit-animation: 4s linear infinite;\n            animation: 4s linear infinite;\n    -webkit-animation-name: cycle1;\n            animation-name: cycle1; }\n  \n  .loading .layer2 {\n    -webkit-animation: 4s linear infinite;\n            animation: 4s linear infinite;\n    -webkit-animation-name: cycle2;\n            animation-name: cycle2; }\n  \n  .loading .layer3 {\n    -webkit-animation: 4s linear infinite;\n            animation: 4s linear infinite;\n    -webkit-animation-name: cycle3;\n            animation-name: cycle3; }\n  \n  \n  @-webkit-keyframes cycle1 {\n    0%, 65% {\n      fill: #b2b2b2; }\n    75%, 82% {\n      fill: #4b4b4b; }\n    92%, 100% {\n      fill: #b2b2b2; } }\n  \n  @keyframes cycle1 {\n    0%, 65% {\n      fill: #b2b2b2; }\n    75%, 82% {\n      fill: #4b4b4b; }\n    92%, 100% {\n      fill: #b2b2b2; } }\n  \n  @-webkit-keyframes cycle2 {\n    0%, 40% {\n      fill: #b2b2b2; }\n    50%, 86% {\n      fill: #4b4b4b; }\n    96%, 100% {\n      fill: #b2b2b2; } }\n  \n  @keyframes cycle2 {\n    0%, 40% {\n      fill: #b2b2b2; }\n    50%, 86% {\n      fill: #4b4b4b; }\n    96%, 100% {\n      fill: #b2b2b2; } }\n  \n  @-webkit-keyframes cycle3 {\n    0%, 15% {\n      fill: #b2b2b2; }\n    25%, 90% {\n      fill: #4b4b4b; }\n    100% {\n      fill: #b2b2b2; } }\n  \n  @keyframes cycle3 {\n    0%, 15% {\n      fill: #b2b2b2; }\n    25%, 90% {\n      fill: #4b4b4b; }\n    100% {\n      fill: #b2b2b2; } }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        This component is the login system for our website.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                myuser\n                            \n                            \n                                notsuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                localcall\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logserv: LoginService, _router: Router, locallogserv: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            We define the constructor of the class hear\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logserv\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of class login service\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of the class router\n\n                                                        \n                                                \n                                                \n                                                        locallogserv\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Another instacne of login service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            localcall\n                        \n                        \n                    \n                \n            \n            \n                \nlocalcall()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:51\n                \n            \n\n\n            \n                \n                    This function will fetch the userid and the userimage after a authenticated login is made.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:65\n                \n            \n\n\n            \n                \n                    This function is to submit the form to the backend. We are also storing the username and the password of this user in myuser variable. This variable is sent through the POST request.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    username:new FormControl('', Validators.required), \n    password:new FormControl('',Validators.required)\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        A Formgroup created that will be send through the POST request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myuser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notsuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from './user';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { LoginService } from '../login.service';\n\n/**\n * This component is the login system for our website.\n */\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n  myuser : User; /**{\n        localStorage.setItem('userimage',res.image);\n        localStorage.setItem('userid',res.userid);\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n  /**\n   * This function is to submit the form to the backend. We are also storing the username and the password of this user in myuser variable. This variable is sent through the POST request.\n   */\n  onSubmit(){\n    this.myuser={\n      username: this.loginForm.get('username').value,\n      password: this.loginForm.get('password').value,\n    }\n\n    /**\n     * We are trying to make an API call and get a token, with the obtained token we are storing it in local storage, so that we can further use this token to authenticate further API calls.\n     */\n\n    this.logserv.trytoken(this.myuser)\n      .subscribe(\n        (res:any) => {\n          // console.log(res)\n          this.notsuccess =\"\";\n          /**\n           * This local call function is to fetch the login details of the user after the token has been obtained.\n           */\n          this.localcall();\n          localStorage.setItem('token',res.token);\n          // localStorage.setItem('userimage',res.image);\n          // localStorage.setItem('userid', res.userid);\n          localStorage.setItem('username',this.myuser.username);\n          this._router.navigate(['/profile']);\n        },\n        err => {\n          // this.notsuccess = \"fail\";\n          alert(\"Invalid credentials. Try Again!\")\n          console.log(err);\n\n        }\n      )\n  }\n\n}\n\n    \n\n    \n        User Login\n\n    Username: \n    password: \n\nSubmit -->\n\n\n    \n        \n            \n\n                \n                    Login\n                \n\n                \n                    \n                        \n                            \n                                Username\n                                \n                                Password\n                                \n                            \n                            \n                                Login\n                                \n                                    &times;\n                                    Incorrect username/password! Try again.\n                                \n                            \n\n                        \n                    \n                \n\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'User Login    Username:     password: Submit -->                                                            Login                                                                                                                                        Username                                                                Password                                                                                                                        Login                                                                    ×                                    Incorrect username/password! Try again.                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstry\n                            \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImage\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserId\n                            \n                            \n                                loggedIn\n                            \n                            \n                                logoutUser\n                            \n                            \n                                trylogin\n                            \n                            \n                                trytoken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor creates two instances\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of a HttpClient class\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of the Router class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:73\n                \n            \n\n\n            \n                \n                    Function to get the userimage stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:61\n                \n            \n\n\n            \n                \n                    Function to get the token stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:67\n                \n            \n\n\n            \n                \n                    Function to get the username stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:79\n                \n            \n\n\n            \n                \n                    Function to get the userid stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nloggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:45\n                \n            \n\n\n            \n                \n                    Function that returns whether the user is currently logged in using the token\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:51\n                \n            \n\n\n            \n                \n                    Function that logs out the user and deletes all the items stored in local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trylogin\n                        \n                        \n                    \n                \n            \n            \n                \ntrylogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:39\n                \n            \n\n\n            \n                \n                    Function used to fetch the details of the logined user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The details of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trytoken\n                        \n                        \n                    \n                \n            \n            \n                \ntrytoken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:32\n                \n            \n\n\n            \n                \n                    Function to get the token which will be used in site authentication\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Takes the login details as the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/auth/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/login'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse , HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './login/user';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * A class that has been used to define various functions that place the API calls.\n */\nexport class LoginService {\n  postUrl = 'http://127.0.0.1:8000/api/login'\n  firstry = 'http://127.0.0.1:8000/auth/'\n\n  /**\n   * Constructor creates two instances\n   * @param http  An instance of a HttpClient class\n   * @param _router An instance of the Router class\n   */\n  constructor(private http:HttpClient,private _router:Router) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  };\n  /**\n   * Function to get the token which will be used in site authentication\n   * @param user Takes the login details as the input\n   */\n  trytoken(user:User):Observable{\n    return this.http.post(this.firstry, user, this.httpOptions)\n  }\n  /**\n   * Function used to fetch the details of the logined user\n   * @param user The details of the user\n   */\n  trylogin(user:User):Observable{\n    return this.http.post(this.postUrl, user, this.httpOptions)\n  }\n  /**\n   * Function that returns whether the user is currently logged in using the token\n   */\n  loggedIn(){\n    return !!localStorage.getItem('token');\n  }\n  /**\n   * Function that logs out the user and deletes all the items stored in local storage\n   */\n  logoutUser(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('userimage');\n    localStorage.removeItem('userid');\n    this._router.navigate(['/home']);\n  }\n  /**\n   * Function to get the token stored in local storage\n   */\n  getToken(){\n    return localStorage.getItem('token');\n  }\n  /**\n   * Function to get the username stored in local storage\n   */\n  getUser() {\n    return localStorage.getItem('username');\n  }\n  /**\n   * Function to get the userimage stored in local storage\n   */\n  getImage(){\n    return localStorage.getItem('userimage');\n  }\n  /**\n   * Function to get the userid stored in local storage\n   */\n  getUserId(){\n    return localStorage.getItem('userid');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigationModel.html":{"url":"classes/NavigationModel.html","title":"class - NavigationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/editor/editor.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                children\n                            \n                            \n                                    Public\n                                    Optional\n                                file\n                            \n                            \n                                    Public\n                                isFile\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NavigationModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:755\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:754\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:753\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:751\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:752\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup,FormBuilder } from \"@angular/forms\";\nimport { RunService } from '../run.service';\nimport { RunInput } from '../run_input';\nimport { RenameFile } from '../renameFile';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginService } from \"../login.service\";\n\nimport * as ace from 'ace-builds';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-ruby';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-ambiance';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-chaos';\nimport 'ace-builds/src-noconflict/theme-chrome';\nimport 'ace-builds/src-noconflict/theme-cobalt';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-beautify';\nimport { EditorDialogComponent } from '../editor-dialog/editor-dialog.component';\nimport { FileService } from '../file.service';\n\nimport { File } from '../file';\nimport { Navigation } from '@angular/router';\n\n/**\n   * \n   * The life of the project, the editor component. Its functionality can be studied in 2 parts\n   * \n   * 1. Editor :\n   * The editor is created using the \"Ace\" library\n   * The view uses ngAfterViewInit which is needed for @ViewChild decorator\n   * The code is stored as a formatted string, along with the language and theme\n   * \n   * The editor supports basic autocomplete and align (beautify) capabilities\n   * The code uses https://medium.com/@ofir3322/create-an-online-ide-with-angular-6-nodejs-part-1-163a939a7929 as a starting point\n   * \n   * The project also allows for running files via direct uploads\n   * \n   * 2. Directory Structure\n   * The directory is stored as a recursive list of objects of class type NavigationModel\n   * The structure supports file and folder creation, deletion and renaming\n   * \n   * Provides a system for modularising code and running with various imports and dependencies\n   * \n   * The code for directory struture is with help of https://trungk18.com/experience/angular-recursive-view-render/\n   */\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\n\nexport class EditorComponent implements AfterViewInit {\n\n  @ViewChild('codeEditor') private editor: ElementRef;\n  private aceEditor : ace.Ace.Editor;\n  private editorBeautify;\n  public fileString;\n\n  files: File[] = [];\n  folders: string[] = [];\n  list: NavigationModel[] = [];\n  currentfile: NavigationModel = {\n        title: '',\n        isFile: true,\n        children: [],\n  };\n  dirk: string = '.';\n  form: FormGroup;\n\n  THEME : string = 'github';\n  LANG : string = 'c_cpp';\n\n  code : string = '';\n  input : string = '';\n  output : string = '';\n\n  constructor(\n    public fb: FormBuilder,\n    private runscript : RunService,\n    public dialog: MatDialog,\n    private fileService: FileService,\n    private uservice: LoginService\n    ) { \n      this.form = this.fb.group({\n        script: [null],\n        language: [''],\n        input: ['']\n      });\n    }\n\n  ngOnInit() {\n      this.getFiles(false,false);\n  }\n\n  ngAfterViewInit(): void {\n    ace.config.set('basePath', 'path');\n    ace.config.set(\"fontSize\", \"16px\");\n    ace.require('ace/ext/language_tools');\n    this.editorBeautify = ace.require('ace/ext/beautify');\n    const basicEditorOptions: Partial = {\n      highlightActiveLine: true,\n      minLines: 14,\n      maxLines: Infinity,\n    };\n    const extraEditorOptions = {\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true\n    };\n    const editorOptions = Object.assign(basicEditorOptions, extraEditorOptions);\n    this.aceEditor = ace.edit(this.editor.nativeElement, editorOptions);\n    this.aceEditor.setTheme('ace/theme/'+this.THEME);\n    this.aceEditor.session.setMode('ace/mode/'+this.LANG);\n    this.aceEditor.session.setValue(\n`#include\nusing namespace std;\nint main() {\n  cout \nusing namespace std;\nint main() {\n  cout {\n      if(!result){return;}\n      console.log(`Dialog Result: ${result}`);\n      if(!rename){\n        if(text == \"File\") {\n          const file: NavigationModel = {\n            title: result,\n            isFile: true,\n            children: [],\n            url: this.dirk\n          }\n          this.saveFile(file);\n        }\n        else {\n          const folder: NavigationModel = {\n            title: result,\n            isFile: false,\n            children: [],\n            url: this.dirk\n          }\n          this.saveFolder(folder);\n        }\n      }\n      else{\n        if(text==\"File\") {\n          this.newNameFile(oldName,result,url)\n        }\n        else {\n          this.newNameFolder(oldName,result,url)\n        }\n      }\n    },err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    });\n  }\n\n  // ---------------FOLDER EDITINGS---------------------\n\n  /**\n     * Create new list of objects containing the obtained files and folders\n     * @param url local path address of objects inserted\n     * @returns New list containing details of all files and folders at given url\n     */\n  insert(url:string): NavigationModel[] {\n    var temp: NavigationModel[] = []\n    for(var folder of this.folders) {\n      const item: NavigationModel = {\n        title: folder,\n        isFile: false,\n        children: [],\n        url: url\n      }\n      temp.push(item);\n    }\n\n    for (var val of this.files) {\n      const item: NavigationModel = {\n        title: val.filename,\n        isFile: true,\n        children: [],\n        file: val,\n        url: url\n      }\n      temp.push(item);\n    }\n\n    return temp;\n  }\n\n  /** \n     * Insert list of files and folders at given local path location\n     * @param table list of objects containing files and folders\n     * @param dir  list of strings containing individual subdirectory names\n     * @param url local path address of objects inserted\n     * @returns New nested list containing details of all files and folders\n     */\n  insertStructure(table: NavigationModel[], dir: string[], url: string): NavigationModel[] {\n    if(dir.length == 0) {\n      return this.insert(url);\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.insertStructure(item.children, dir, url);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Deletes all children of the folder but not folder itself\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @returns Updated nested list containing files and folders\n     */\n  deleteStructure(table: NavigationModel[], dir: string[]): NavigationModel[] {\n    console.log(dir);\n    if(dir.length == 0) {\n      var empty: NavigationModel[] = [];\n      return empty;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title===dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.deleteStructure(item.children, dir);\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Deletes folder and all its children\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param folder string for name of folder to be deleted\n     * @returns Updated nested list with given folder deleted\n     */\n  deleteFolderStruc(table: NavigationModel[], dir: string[], folder: string): NavigationModel[] {\n    if(dir.length == 0) {\n      table = table.filter(f=> f.isFile ||  f.title != folder)\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.deleteFolderStruc(item.children, dir, folder);\n        break;\n      }\n    }\n    return table;\n  }\n\n   /**\n     * Creates new folder and adds to the list of objects in this.list\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param folder string for name of new folder\n     * @returns Updated nested list after adding given folder\n     */\n  editFolder(table: NavigationModel[], dir: string[], folder: string): NavigationModel[] {\n    if(dir.length == 0) {\n      var item: NavigationModel = {\n        title: folder,\n        isFile: false,\n        url: this.dirk,\n        children: []\n      }\n      table.push(item);\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.editFolder(item.children, dir, folder);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Fix local path values for al children of renamed folder\n     * @param table list of objects containing files and folders\n     * @param url name of new url of all objects in table\n     * @returns Updated nested list containing new urls after renaming\n     */\n  fixUrl(table: NavigationModel[],url: string): NavigationModel[] {\n    console.log(url);\n    for(var item of table){\n      item.url = url;\n      if(!item.isFile) {\n        item.children = this.fixUrl(item.children, url + \"/\" + item.title)\n      }\n    }\n    return table;\n  }\n\n   /**\n     * Renames an existing folder and updates local path values to objects in this.list\n     * @param table  list of objects containing files and folders\n     * @param dir  list of strings containing individual subdirectory names\n     * @param newName string for name of renamed folder\n     * @param oldName  string for original name of folder\n     * @returns Updated list with renamed folders and urls\n     */\n  renameListFolder(table: NavigationModel[], dir: string[], newName: string, oldName: string): NavigationModel[] {\n    if(dir.length == 0) {\n      for(var item of table){\n        if(!item.isFile && item.title == oldName){\n          item.title = newName;\n          item.children = this.fixUrl(item.children,item.url + \"/\" + newName);\n          break;\n        }\n      } \n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.renameListFolder(item.children, dir, newName,oldName);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Function calls FileService method to create new folder on backend database\n     * @param foldername object containing folder name and local path location\n     */\n  saveFolder(foldername: NavigationModel): void{\n    this.fileService.saveFile(\n      {\n        filename: \"trash.trash\",\n        script: foldername.title\n      } as File, this.uservice.getUser(), this.dirk + \"/\" + foldername.title).subscribe(\n      file=>{\n        console.log(file);\n\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.editFolder(this.list, dirs, foldername.title);\n      },\n      err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      }); \n  }\n\n  /**\n     * Function calls FileService method to rename folder on backend database\n     * @param oldName string for original name of folder\n     * @param newName string for new name of folder\n     * @param url local path location for folder\n     */\n  newNameFolder(oldName: string, newName: string, url: string): void {\n    this.fileService.renameFile(\n      {\n        newName: newName, \n        oldName: oldName,\n        file: false} as RenameFile, url,this.uservice.getUser()).subscribe(\n      file=>{\n        var dirs: string[] = url.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.renameListFolder(this.list, dirs, newName, oldName);\n      },\n      err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      });\n  }\n\n  // ------------------------ FILE HELPERS -------------------\n\n  /**\n     * Deletes file from this.list of objects\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param file File object containing filename and code script\n     * @returns Updated nested list after removing file\n     */\n  deleteFileStruc(table: NavigationModel[], dir: string[], file: File): NavigationModel[] {\n    if(dir.length == 0) {\n      table = table.filter(f=> !f.isFile || f.file != file)\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.deleteFileStruc(item.children, dir, file);\n        break;\n      }\n    }\n    return table;\n  }\n\n   /**\n     * Creates new file and adds to the list of objects this.list\n     * @param table list of objects containing files and folders\n     * @param dir  list of strings containing individual subdirectory names\n     * @param file File object containing filename and code script\n     * @returns Updated nested list after adding file\n     */\n  editFile(table: NavigationModel[], dir: string[], file: File): NavigationModel[] {\n    if(dir.length == 0) {\n      var flag: boolean = false;\n      for(var item of table) {\n        if(item.title == file.filename){\n          item.file = file;\n          flag = true;\n          break;\n        }\n      }\n      if(!flag){\n        var item: NavigationModel = {\n          title: file.filename,\n          isFile: true,\n          url: this.dirk,\n          children: [],\n          file: file\n        }\n        table.push(item);\n      }\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.editFile(item.children, dir, file);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /**\n     * Renames an existing file in list of objects this.list\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param newName  string for name of renamed file\n     * @param oldName string for original name of file\n     * @returns Updated list with renamed file\n     */\n  renameListFile(table: NavigationModel[], dir: string[], newName: string, oldName: string): NavigationModel[] {\n    if(dir.length == 0) {\n      for(var item of table){\n        if(item.isFile && item.title == oldName){\n          item.title = newName;\n        }\n      }\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.renameListFile(item.children, dir, newName,oldName);\n        break;\n      }\n    }\n    return table;\n  }\n\n  \n  /** \n     * Function calls FileService method to create new file on backend database\n     * @param filename File object containing filename and code script\n     */\n  saveFile(filename = this.currentfile): void{\n    if(filename.title==''){\n      return this.openDialog(\"File\",\"Create New File\");\n    }\n    this.code = this.aceEditor.session.getValue();\n    this.fileService.saveFile(\n      {\n        filename: filename.title,\n        script: this.code\n      } as File, this.uservice.getUser(), this.dirk).subscribe(\n      file=>{\n        console.log(file);\n\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.editFile(this.list, dirs,file);\n        console.log(this.list);\n      },err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      }); \n  }\n\n  /**\n     * Function calls FileService method to rename file on backend database\n     * @param oldName string for original name of file\n     * @param newName string for new name of file\n     * @param url local path location for file\n     */\n  newNameFile(oldName: string, newName: string, url: string): void {\n    this.fileService.renameFile(\n      {\n        newName: newName, \n        oldName: oldName,\n        file: true} as RenameFile, url,this.uservice.getUser()).subscribe(\n      file=>{\n        var dirs: string[] = url.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.renameListFile(this.list, dirs, newName, oldName);\n      },\n      err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      });\n  }\n\n  /**\n     * Function executed on ngInit and every time nested folder contents is to be viewed or closed\n     * @param newFolder True if nested folder contents is to be viewed\n     * @param deleteFolder True if nested folder is closed\n     */\n  getFiles(newFolder: boolean, deleteFolder: boolean): void {\n    this.fileService.getFiles(this.uservice.getUser(),this.dirk).subscribe(\n      files => {this.files=files;\n      this.folders = this.files.filter(f=> f.filename === \"trash.trash\").map(f=>f.script)\n      this.files = this.files.filter(f => f.filename !== \"trash.trash\");\n      if(newFolder) {\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.insertStructure(this.list, dirs,this.dirk);\n      }\n      else if(deleteFolder) {\n        if(this.dirk == '.')\n          return;\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.deleteStructure(this.list, dirs);\n        var loc = this.dirk.lastIndexOf(\"/\");\n        if(loc !== -1) {\n          this.dirk = this.dirk.substring(0,loc);\n        }\n        console.log(this.dirk);\n      }\n      else{\n        this.list = this.insert(this.dirk);\n      }\n      console.log(this.list);\n    },err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    }\n    );\n}\n\n  // ------------------------- LOAD FILE/FOLDER INFORMATION --------------------\n\n\n  setFile(file: NavigationModel){\n    this.currentfile = file;\n    this.dirk = file.url;\n    this.aceEditor.session.setValue(file.file.script);\n  }\n\n  setFolder(folder: NavigationModel){\n    this.dirk = folder.url + \"/\" + folder.title;\n    console.log(this.dirk);\n    this.getFiles(true,false);\n  }\n\n  deleteFile(file: NavigationModel): void {\n    this.dirk = file.url;\n    var dirs: string[] = this.dirk.split('/')\n    dirs = dirs.splice(1);\n    this.list = this.deleteFileStruc(this.list,dirs,file.file);\n    this.fileService.deleteFile(file.title,this.uservice.getUser(), this.dirk).subscribe(err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    });\n  }\n\n  deleteFolder(folder: NavigationModel): void {\n    this.dirk = folder.url;\n    var drk: string = this.dirk + \"/\" + folder.title\n    var dirs: string[] = this.dirk.split('/')\n    dirs = dirs.splice(1);\n    this.list = this.deleteFolderStruc(this.list,dirs, folder.title);\n    this.fileService.deleteFolder(this.uservice.getUser(), drk).subscribe(err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    });\n  }\n\n  renameFile(file: NavigationModel): void {\n    this.openDialog(\"File\",\"Rename File\",true,file.title, file.url);\n  }\n\n  renameFolder(folder: NavigationModel): void {\n    this.openDialog(\"Folder\",\"Rename Folder\",true, folder.title, folder.url);\n  }\n\n  goBack(): void {\n    this.getFiles(false,true);\n  }\n\n\n  // ------------------- EXECUTE CODE OPERATIONS -------------------\n\n  /**\n     * Here, we use the typescript FileReader to upload files the same way we upload editor code\n     * UPDATE : We would like to render the contents of the file into the editor in the next update\n     */\n  uploadSource(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n\n    let fileReader = new FileReader();\n    fileReader.onloadend = (e) => {\n      this.fileString = fileReader.result;\n    }\n\n    /// remove comment to UPDATE :\n    /// this.aceEditor.session.setValue(this.fileString); \n\n    fileReader.readAsText(file)\n    \n    this.form.patchValue({\n      script: this.fileString,\n      language: this.LANG,\n      input: this.input\n    });\n    this.form.get('script').updateValueAndValidity();\n    this.form.get('language').updateValueAndValidity();\n    this.form.get('input').updateValueAndValidity();\n  }\n\n  /**\n     * Executed when the user presses the Run button, this function sends the editor content to the server\n     * Along with the code, the \"input\" contents are also sent to the server\n     * The server responds with the output which is rendered in the output textarea\n     */\n  public runCode() {\n    this.code = this.aceEditor.session.getValue();\n    const send : RunInput = {\n      username : this.uservice.getUser(),\n      script : this.code,\n      language : this.LANG,\n      input : this.input\n    };\n    console.log(send);\n    this.runscript.runScript(send,this.uservice.getUser(),this.currentfile.url).subscribe(receivied =>\n      {\n        if(receivied.success==true) {\n          this.output = receivied.output;\n        }   \n        else {\n          this.output = \"Error: \" + receivied.output;\n        }\n      },err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      });\n}\n\n  /**\n     * Executed when the user presses the Run File button, this function sends the file content to the server\n     * Along with the code, the \"input\" contents are also sent to the server\n     * The server responds with the output which is rendered in the output textarea\n     */\n  runFile() {\n    const send : RunInput = {\n      username : this.uservice.getUser(),\n      script : this.fileString,\n      language : this.LANG,\n      input : this.input\n    };\n    console.log(send);\n    this.runscript.runScript(send,this.uservice.getUser(), \"\").subscribe(receivied =>\n      {\n        if(receivied.success==true) {\n          this.output = receivied.output;\n        }   \n        else {\n          this.output = \"Error: \" + receivied.output;\n        }\n      },err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      }); \n  } \n} \n\nclass NavigationModel {\n  public title: string;\n  public url?: string;\n  public isFile: boolean;\n  public file?: File;\n  public children: NavigationModel[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewUser.html":{"url":"classes/NewUser.html","title":"class - NewUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/register/newuser.ts\n        \n\n            \n                Description\n            \n            \n                Description\nCreates a NewUser class that basically stores all the user credentials, and is used to send an API request to get the user registered.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                image\n                            \n                            \n                                last_name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, password: string, image: string, first_name: string, last_name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/newuser.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        image\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        first_name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        last_name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewUser{\n\tusername='';\n\temail='';\n\tpassword='';\n\timage = '';\n\tfirst_name = '';\n\tlast_name = '';\n\n\tconstructor(\n\t\tusername:string,\n\t\temail:string,\n\t\tpassword:string,\n\t\timage:string,\n\t\tfirst_name:string,\n\t\tlast_name:string\n\t)\n\t{\t\n\t\tthis.image=image;\n\t\tthis.username=username;\n\t\tthis.email=email;\n\t\tthis.password=password;\n\t\tthis.first_name=first_name;\n\t\tthis.last_name=last_name;\n\t}\n\t\t\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PastcontestComponent.html":{"url":"components/PastcontestComponent.html","title":"component - PastcontestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PastcontestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pastcontest/pastcontest.component.ts\n\n\n    \n        Description\n    \n    \n        This component lets a user view the contests that are over\nIt displays the problem statement along with their status\n(solved/unsolved) and points obtained \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pastcontest\n            \n\n            \n                styleUrls\n                ./pastcontest.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pastcontest.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                gotContest\n                            \n                            \n                                gotPoints\n                            \n                            \n                                id\n                            \n                            \n                                passed\n                            \n                            \n                                points\n                            \n                            \n                                startexecution\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cpservice: CompetitionService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pastcontest/pastcontest.component.ts:29\n                            \n                        \n\n                \n                    \n                            Rendering is done via Angular's parametrized routes\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loaded\n                        \n                        \n                    \n                \n            \n            \n                \nloaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pastcontest/pastcontest.component.ts:75\n                \n            \n\n\n            \n                \n                    A simple boolean function to know the status of requests\nUsed for loading screen rendering\n\n\n                    \n                    \n                    \n                        Returns :         Boolean\n\n                    \n                    \n                        True if all related API requests are over\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pastcontest/pastcontest.component.ts:50\n                \n            \n\n\n            \n                \n                    The loop prevents execution till the id is obtained\nThis id is needed in backend requests\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gotContest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gotPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startexecution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CompetitionService } from '../competition.service';\n\n/**\n * This component lets a user view the contests that are over\n * It displays the problem statement along with their status\n * (solved/unsolved) and points obtained \n */\n\n@Component({\n  selector: 'app-pastcontest',\n  templateUrl: './pastcontest.component.html',\n  styleUrls: ['./pastcontest.component.scss']\n})\n\nexport class PastcontestComponent implements OnInit {\n\n  id: number;\n  startexecution: Boolean = false;\n\n  passed: Boolean = false;\n  points: number;\n\n  title: String;\n  body: String;\n\n  gotContest: Boolean = false;\n  gotPoints: Boolean = false;\n\n  /**\n  * Rendering is done via Angular's parametrized routes\n  */\n  constructor(\n    private cpservice: CompetitionService,\n    private route: ActivatedRoute\n  ) {\n    this.route.params.subscribe(\n      (params) => {\n        this.id = params.id;\n        this.startexecution = true;\n      }\n    )\n  }\n\n  /**\n   * The loop prevents execution till the id is obtained\n   * This id is needed in backend requests\n   */\n  ngOnInit(): void {\n\n    while (!this.startexecution) { ; }\n\n    this.cpservice.fetchCompetitionbyId(this.id).subscribe(\n      (comp) => {\n        this.title = comp.title;\n        this.body = comp.problem;\n        this.gotContest = true;\n      }\n    );\n    this.cpservice.contestPassed(this.id).subscribe(\n      (res) => {\n        this.passed = res.passed;\n        this.points = res.points;\n        this.gotPoints = true;\n      }\n    );\n  }\n\n  /**\n   * A simple boolean function to know the status of requests\n   * Used for loading screen rendering\n   * @returns True if all related API requests are over\n   */\n  loaded(): Boolean {\n    return this.gotContest && this.gotPoints;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n        \n            {{title}}\n            \n            Title description, April 7, 2014 -->\n        \n\n        \n            {{body}}\n            \n                \n                    You passed with {{points}} points!\n                \n                \n                    You could not solve this problem!\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./pastcontest.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{title}}                        Title description, April 7, 2014 -->                            {{body}}                                                You passed with {{points}} points!                                                    You could not solve this problem!                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PastcontestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profile.html":{"url":"interfaces/Profile.html","title":"interface - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.ts\n        \n\n            \n                Description\n            \n            \n                Description\nA profile interface to store the details of the user which will be used to send the API request.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        image\n                                \n                                \n                                        password\n                                \n                                \n                                        user_fk\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_fk\n                                    \n                                \n                                \n                                    \n                                        user_fk:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Profile{\n    user_fk: any;\n    username:string;\n    password:string;\n    email: string;\n    image:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n    \n        Description\n    \n    \n        Created the profile component, to display the profile page of the website.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date_joined\n                            \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                image\n                            \n                            \n                                is_staff\n                            \n                            \n                                last_name\n                            \n                            \n                                points\n                            \n                            \n                                user\n                            \n                            \n                                userDet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uservice: LoginService, cpservice: CompetitionService, profileservice: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor to create the instances of the services required.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        uservice\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to fetch user details is of Loginservice instance.\n\n                                                        \n                                                \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to fetch the points is of Competition service instance.\n\n                                                        \n                                                \n                                                \n                                                        profileservice\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to fetch all the profile details of the logged in user.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:42\n                \n            \n\n\n            \n                \n                    Quite self-explanatory. Three GET requests to corresponding APIs to get the details of the users and the required display properties.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_joined\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_staff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CompetitionService } from '../competition.service';\nimport { LoginService } from \"../login.service\";\nimport { ProfileService } from '../profile.service'\n\n/**\n * Created the profile component, to display the profile page of the website.\n */\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\n\nexport class ProfileComponent implements OnInit {\n\n  user: String;\n  userDet: any;\n  image: String;\n  points: number = 0;\n  email: String;\n  date_joined: String;\n  is_staff: Boolean;\n  first_name: String;\n  last_name: String;\n  /**\n   * Constructor to create the instances of the services required.\n   * @param uservice Used to fetch user details is of Loginservice instance.\n   * @param cpservice Used to fetch the points is of Competition service instance.\n   * @param profileservice Used to fetch all the profile details of the logged in user.\n   */\n  constructor(\n    private uservice: LoginService,\n    private cpservice: CompetitionService,\n    private profileservice: ProfileService\n  ) { }\n  \n  /**\n   * Quite self-explanatory. Three GET requests to corresponding APIs to get the details of the users and the required display properties.\n   */\n  ngOnInit(): void {\n    this.user = this.uservice.getUser();\n    this.profileservice.getUserDetail(this.user)\n      .subscribe(data => {\n        this.image = data.image;\n        this.userDet = data.user_fk;\n        this.email = this.userDet.email;\n        this.date_joined = this.userDet.date_joined;\n        this.is_staff = this.userDet.is_staff;\n        this.first_name = this.userDet.first_name;\n        this.last_name = this.userDet.last_name;\n      });\n      this.cpservice.fetchPoints().subscribe(\n        (pts) => this.points=pts\n      );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n\n\n\n\n    Welcome {{user}} !\n    Code, compile, create and participate\n\n\n\n    \n        \n            \n                \n                    \n                        \n                            \n                            \n                            {{user}}\n                            WreSSLer\n                             Resources  \n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                                Name\n                            \n                            \n                                {{first_name}} {{last_name}}\n                            \n                        \n                        \n                        \n                            \n                                Email\n                            \n                            \n                                {{email}}\n                            \n                        \n                        \n                        \n                            \n                                Points\n                            \n                            \n                                {{points}}\n                            \n                        \n                        \n                        \n                        \n                            \n                                Code Editor\n\n                            \n                            \n                                Create a Contest\n\n                            \n                            \n                                Contest Dashboard\n\n                            \n                         \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                body {\n    margin-top: 20px;\n    color: #1a202c;\n    text-align: left;\n    background-color: #e2e8f0;\n}\n\n.main-body {\n    padding: 15px;\n}\n\n.card {\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .1), 0 1px 2px 0 rgba(0, 0, 0, .06);\n}\n\n* .button {\n    color: #e15241;\n}\n\n.card {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    min-width: 0;\n    word-wrap: break-word;\n    background-color: #fff;\n    background-clip: border-box;\n    border: 0 solid rgba(0, 0, 0, .125);\n    border-radius: .25rem;\n}\n\n.card-body {\n    flex: 1 1 auto;\n    min-height: 1px;\n    padding: 1rem;\n}\n\n.gutters-sm {\n    margin-right: -8px;\n    margin-left: -8px;\n}\n\n.gutters-sm>.col,\n.gutters-sm>[class*=col-] {\n    padding-right: 8px;\n    padding-left: 8px;\n}\n\n.mb-3,\n.my-3 {\n    margin-bottom: 1rem!important;\n}\n\n.bg-gray-300 {\n    background-color: #e2e8f0;\n}\n\n.h-100 {\n    height: 100%!important;\n}\n\n.shadow-none {\n    box-shadow: none!important;\n}\n\na.button3 {\n    display: inline-block;\n    padding: 0.3em 1.2em;\n    height: 1cm;\n    margin: 0 0.3em 0.3em 0;\n    border-radius: 0.5em;\n    box-sizing: border-box;\n    text-decoration: none;\n    font-family: 'Roboto', sans-serif;\n    font-weight: 300;\n    color: #FFFFFF;\n    background-color: #1c9ee9;\n    text-align: center;\n    transition: all 0.2s;\n}\n\na.button3:hover {\n    background-color: #3bb7ff;\n}\n\n@media all and (max-width:30em) {\n    a.button3 {\n        display: block;\n        margin: 0.2em auto;\n    }\n}\nbody,h1,h2,h3,h4,h5,h6 {font-family: \"Raleway\", sans-serif}\n\nbody, html {\n  height: 100%;\n  line-height: 1.8;\n}\n//some parts of the styling of lot of components has been taken from w3-schools templates\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Welcome {{user}} !    Code, compile, create and participate                                                                                                                                                                        {{user}}                            WreSSLer                             Resources                                                                                                                                                                                                                                          Name                                                                                        {{first_name}} {{last_name}}                                                                                                                                                                Email                                                                                        {{email}}                                                                                                                                                                Points                                                                                        {{points}}                                                                                                                                                                                        Code Editor                                                                                        Create a Contest                                                                                        Contest Dashboard                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getUrl\n                            \n                            \n                                getUserUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUserDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile.service.ts:26\n                \n            \n\n\n            \n                \n                    Function has been used to make a POST request and return the profile of the user.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserDetail\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserDetail(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile.service.ts:33\n                \n            \n\n\n            \n                \n                    Function has been used to make a POST request and return the details of the user to display in the profile.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/profile/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/profile/pk'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { stringify } from 'querystring';\nimport { Profile } from './profile/profile'\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * A class that has been used to make two service requests- The service to get the user and the service to get the details\n */\nexport class ProfileService {\n  getUrl = 'http://127.0.0.1:8000/api/profile/'\n  getUserUrl = 'http://127.0.0.1:8000/api/profile/pk'\n\n  constructor(private http:HttpClient,private _router:Router) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  };\n\n  /**\n   * Function has been used to make a POST request and return the profile of the user.\n   */\n  getUser(){\n    return this.http.post(this.getUrl, this.httpOptions)\n  }\n\n  /**\n   * Function has been used to make a POST request and return the details of the user to display in the profile.\n   */\n  getUserDetail(username : String){\n    console.log({'username':username})\n    return this.http.post(this.getUserUrl, {'username': username}, this.httpOptions)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegService.html":{"url":"injectables/RegService.html","title":"injectable - RegService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reg.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tryreg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/reg.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tryreg\n                        \n                        \n                    \n                \n            \n            \n                \ntryreg(user: NewUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reg.service.ts:22\n                \n            \n\n\n            \n                \n                    function which places the POST request and returns and Observable of New user type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                NewUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reg.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/profile/add'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reg.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse , HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NewUser } from './register/newuser';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n *A service used to register the user. Recive the details from the register component and make the API call.\n */\nexport class RegService {\n  postUrl = 'http://127.0.0.1:8000/api/profile/add'\n  constructor(private http:HttpClient) { }\n  \n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  };\n  /**\n   * function which places the POST request and returns and Observable of New user type.\n   */\n  tryreg(user:NewUser):Observable{\n    return this.http.post(this.postUrl, user, this.httpOptions)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        This is our Register Component and this will serve as the registration forum for our project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errormessage\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Public\n                                imagePath\n                            \n                            \n                                imgerr\n                            \n                            \n                                imgURL\n                            \n                            \n                                link\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                myfile\n                            \n                            \n                                mynewuser\n                            \n                            \n                                regForm\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFileListener\n                            \n                            \n                                onSubmit\n                            \n                            \n                                onUpload\n                            \n                            \n                                preview\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(regserv: RegService, _router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regserv\n                                                  \n                                                        \n                                                                        RegService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileListener\n                        \n                        \n                    \n                \n            \n            \n                \nonFileListener(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:60\n                \n            \n\n\n            \n                \n                    This is function that listns to the click on choose file and sends an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:128\n                \n            \n\n\n            \n                \n                    Function is used to submit the form credentials to the api to get the user registered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpload\n                        \n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:106\n                \n            \n\n\n            \n                \n                    Function is used to upload an image to the backend and recieve an url for the image.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preview\n                        \n                        \n                    \n                \n            \n            \n                \npreview(files)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:68\n                \n            \n\n\n            \n                \n                    This function is used to pick an image to the file reader and then upload the image\nand collect the url from the api to make further requests for the image when required.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        To store the file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:93\n                \n            \n\n\n            \n                \n                    Validates all the fields in the input form and returns a boolean to activate/deactivate the register button\n\n\n                    \n                    \n                    \n                        Returns :         Boolean\n\n                    \n                    \n                        True if all input fields are filled\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errormessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders ({ 'Content-Type': 'application/json' })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:44\n                            \n                        \n\n                \n                    \n                        Constructs a Http Header object with the params of content type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imagePath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgerr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         File\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mynewuser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    first_name: new FormControl('',Validators.required),\n    last_name: new FormControl('',Validators.required),\n    username:new FormControl('', Validators.required),\n    email: new FormControl('',Validators.required),\n    password:new FormControl('',Validators.required),\n    image:new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n                \n                    \n                        We create a Formgroup that we are using to collect the credentials and will POST it to the backend  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NewUser } from './newuser'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Observable } from 'rxjs';\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router'\n\nimport { RegService } from '../reg.service'; \n\n  /**\n   * This is our Register Component and this will serve as the registration forum for our project.\n   */\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  mynewuser: NewUser; /** { \n      this.imgURL = reader.result; \n      this.onUpload();\n\n    }\n  };\n\n  /**\n   * Validates all the fields in the input form and returns a boolean to activate/deactivate the register button\n   * @returns True if all input fields are filled\n   */\n  validate(): Boolean {\n    if(this.regForm.get('first_name').value=='') return false;\n    if(this.regForm.get('last_name').value=='') return false;\n    if(this.regForm.get('username').value=='') return false;\n    if(this.regForm.get('email').value=='') return false;\n    if(this.regForm.get('password').value=='') return false;\n    if(this.link=='') return false;\n    return true;\n  }\n\n  /**\n   * Function is used to upload an image to the backend and recieve an url for the image.\n   */\n  onUpload(){\n    this.visible=false;\n    const fd = new FormData();\n    fd.append('image',this.myfile,this.myfile.name);\n\n    this.http.post('http://127.0.0.1:8000/api/image',fd)\n      .subscribe(\n        (res:any) => {\n        // console.log(res);\n        this.imgerr=\"\";\n        this.link = res.url;\n\n      },\n      err => {\n        console.log(err);\n        this.imgerr=\"Invalid upload! Please upload again.\";\n      });\n  };\n\n  /**\n   * Function is used to submit the form credentials to the api to get the user registered.\n   */\n  onSubmit(){\n    this.mynewuser={\n      image: this.link,\n      username: this.regForm.get('username').value,\n      email: this.regForm.get('email').value,\n      password: this.regForm.get('password').value,\n      first_name: this.regForm.get('first_name').value,\n      last_name: this.regForm.get('last_name').value,\n    }\n\n    this.regserv.tryreg(this.mynewuser)\n      .subscribe(\n        res => {\n          this.errormessage=\"\";\n          this._router.navigate(['/login'])\n        },\n        err => {\n          console.log(err);\n          this.errormessage = err;\n        }\n      )\n  }\n\n}\n\n    \n\n    \n         Register Yourself \n\n    Name: \n    Email Id: \n    Password: \n    Image: \n  \nSubmit -->\n\n      -->\n\n    Upload -->\n\n\n    \n        \n            \n\n                \n                    Hello\n                    \n                        Register yourself here.\n                    \n                \n\n                \n                    \n                        \n                            Upload Avatar\n                            \n                            \n                            &times;\n                                Avatar Uploaded successfully!\n                            \n                            \n                                &times;\n                                {{ imgerr }}\n                            \n                            \n                                \n                                    Username\n                                    \n                                \n                                \n                                    First Name\n                                    \n                                \n                                \n                                    Last Name\n                                    \n                                \n                                \n                                    Email\n                                    \n                                \n                                \n                                    Password\n                                    \n                                \n                            \n                            \n                                Register\n                            \n                            \n                            \n                                &times;\n                            Could not register! Try again with non-empty credentials.\n                            \n\n                        \n                    \n                \n\n            \n        \n    \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                body {\n    margin-top: 20px;\n    background-color: #f2f3f8;\n}\n\n.card {\n    margin-bottom: 1.5rem;\n    box-shadow: 0 1px 15px 1px rgba(52, 40, 104, .08);\n}\n\n.card {\n    position: relative;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    min-width: 0;\n    word-wrap: break-word;\n    background-color: #fff;\n    background-clip: border-box;\n    border: 1px solid #e5e9f2;\n    border-radius: .2rem;\n}\n\n.avatar {\n    vertical-align: middle;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Register Yourself     Name:     Email Id:     Password:     Image:   Submit -->      -->    Upload -->                                                            Hello                                            Register yourself here.                                                                                                                            Upload Avatar                                                                                    ×                                Avatar Uploaded successfully!                                                                                        ×                                {{ imgerr }}                                                                                                                            Username                                                                                                                                        First Name                                                                                                                                        Last Name                                                                                                                                        Email                                                                                                                                        Password                                                                                                                                                            Register                                                                                                                    ×                            Could not register! Try again with non-empty credentials.                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenameFile.html":{"url":"interfaces/RenameFile.html","title":"interface - RenameFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RenameFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/renameFile.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        file\n                                \n                                \n                                        newName\n                                \n                                \n                                        oldName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newName\n                                    \n                                \n                                \n                                    \n                                        newName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldName\n                                    \n                                \n                                \n                                    \n                                        oldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenameFile {\n    oldName : string,\n    newName : string,\n    file: boolean\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunFile.html":{"url":"interfaces/RunFile.html","title":"interface - RunFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RunFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run_file.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                                \n                                        language\n                                \n                                \n                                        script\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                    \n                                \n                                \n                                    \n                                        script:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RunFile {\n    username: string,\n    script : any,\n    language : string,\n    input : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunInput.html":{"url":"interfaces/RunInput.html","title":"interface - RunInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RunInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run_input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                                \n                                        language\n                                \n                                \n                                        script\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                    \n                                \n                                \n                                    \n                                        script:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RunInput {\n    username: string,\n    script : string,\n    language : string,\n    input : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunOutput.html":{"url":"interfaces/RunOutput.html","title":"interface - RunOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RunOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run_output.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        output\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                    \n                                \n                                \n                                    \n                                        output:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RunOutput {\n    success : boolean,\n    output : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RunService.html":{"url":"injectables/RunService.html","title":"injectable - RunService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RunService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runFile\n                            \n                            \n                                runScript\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/run.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runFile\n                        \n                        \n                    \n                \n            \n            \n                \nrunFile(infile: FormData, username: string, dirk: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/run.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infile\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Output generated by file\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runScript\n                        \n                        \n                    \n                \n            \n            \n                \nrunScript(input: RunInput, username: string, dirk: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/run.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RunInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Output generated by code\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/run.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/compile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/run.service.ts:17\n                            \n                        \n\n                \n                    \n                        Provides access to compiling API endpoint for compile and execution of code\nThe service names are quite self explanatory\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RunInput } from './run_input';\nimport { RunOutput } from './run_output';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RunService {\n\n  /**\n   * Provides access to compiling API endpoint for compile and execution of code\n   * The service names are quite self explanatory\n   */\n\n  postUrl = 'http://127.0.0.1:8000/api/compile';\n\n  constructor(private http : HttpClient) { }\n\n  httpOptions = {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  };\n\n  /**\n   * @returns Output generated by code\n   */\n  runScript(input : RunInput, username:string, dirk: string) : Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    console.log(input);\n    return this.http.post(url,input,this.httpOptions);\n  }\n\n  /**\n   * @returns Output generated by file\n   */\n  runFile(infile : FormData, username:string, dirk: string) : Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    return this.http.post(url,infile,this.httpOptions);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer/timer.component.ts\n\n\n    \n        Description\n    \n    \n        This component displays the time remaining accurate to seconds for an event\nEvent datetime and type (a string specifying \"start\"/\"end\") are passed as @Input parameters\nThe element also refreshes the page when an event expires\nThe code used is essentially a modification of code that can be found at :\nhttps://medium.com/javascript-in-plain-english/implement-a-countdown-timer-with-rxjs-in-angular-3852f21a4ea0\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timer\n            \n\n            \n                styleUrls\n                ./timer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                daysToDday\n                            \n                            \n                                    Public\n                                dDate\n                            \n                            \n                                hoursInADay\n                            \n                            \n                                    Public\n                                hoursToDday\n                            \n                            \n                                milliSecondsInASecond\n                            \n                            \n                                minutesInAnHour\n                            \n                            \n                                    Public\n                                minutesToDday\n                            \n                            \n                                SecondsInAMinute\n                            \n                            \n                                    Public\n                                secondsToDday\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Public\n                                timeDifference\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allocateTimeUnits\n                            \n                            \n                                    Private\n                                getTimeDifference\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                endsAt\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer/timer.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        endsAt\n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            allocateTimeUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    allocateTimeUnits(timeDifference)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeDifference\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTimeDifference\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimeDifference()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            daysToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dDate\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoursInADay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 24\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hoursToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            milliSecondsInASecond\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minutesInAnHour\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minutesToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SecondsInAMinute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            secondsToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeDifference\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Subscription, interval } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\n  /**\n   * This component displays the time remaining accurate to seconds for an event\n   * Event datetime and type (a string specifying \"start\"/\"end\") are passed as @Input parameters\n   * The element also refreshes the page when an event expires\n   * The code used is essentially a modification of code that can be found at :\n   * https://medium.com/javascript-in-plain-english/implement-a-countdown-timer-with-rxjs-in-angular-3852f21a4ea0\n   */\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss']\n})\n\nexport class TimerComponent implements OnInit {\n\n  @Input() endsAt;\n  @Input() type;\n\n  public dDate;\n  private subscription: Subscription;\n\n\n  constructor(\n    /**\n     * This is needed for the refresh capability\n     */\n    private _router: Router\n  ) {}\n\n  milliSecondsInASecond = 1000;\n  hoursInADay = 24;\n  minutesInAnHour = 60;\n  SecondsInAMinute = 60;\n\n  public timeDifference;\n  public secondsToDday;\n  public minutesToDday;\n  public hoursToDday;\n  public daysToDday;\n\n\n  private getTimeDifference() {\n    this.timeDifference = this.dDate.getTime() - new Date().getTime();\n    \n    /**\n     * The logic for refresh on event expiration\n     */\n    if(this.timeDifference false;\n      this._router.onSameUrlNavigation = 'reload';\n      this._router.navigate(['/dashboard']);\n    }\n    \n    this.allocateTimeUnits(this.timeDifference);\n  }\n\n  private allocateTimeUnits(timeDifference) {\n    this.secondsToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond) % this.SecondsInAMinute);\n    this.minutesToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour) % this.SecondsInAMinute);\n    this.hoursToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour * this.SecondsInAMinute) % this.hoursInADay);\n    this.daysToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour * this.SecondsInAMinute * this.hoursInADay));\n  }\n\n  ngOnInit() {\n    /**\n     * Subscription is used to refresh the timer every second\n     */\n    this.subscription = interval(1000)\n      .subscribe(x => { this.getTimeDifference(); });\n    this.dDate = new Date(this.endsAt);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n     To event {{type}}\n         {{daysToDday}} Day(s)\n         {{hoursToDday}} Hrs\n         {{minutesToDday}} Min\n         {{secondsToDday}} S\n    \n\n    \n\n    \n                \n                    ./timer.component.scss\n                \n                .timer {\n    font-family: Arial, sans-serif;\n    font-size: 0.8em;\n    letter-spacing: -1px;\n  }\n  .timer span {\n    font-size: 1em;;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     To event {{type}}         {{daysToDday}} Day(s)         {{hoursToDday}} Hrs         {{minutesToDday}} Min         {{secondsToDday}} S    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptorService.html":{"url":"interceptors/TokenInterceptorService.html","title":"interceptor - TokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/token-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/token-interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor to create an injector\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To prevent a cyclic dependancy we use this injector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req, next)\n                \n            \n\n\n            \n                \n                    Defined in src/app/token-interceptor.service.ts:28\n                \n            \n\n\n            \n                \n                    This fucntion intercepts all the http calls that the frontend makes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Takes the incoming request\n\n                                    \n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Used to pass on to the next interceptor if present, in our case none.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable,Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { LoginService } from './login.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * An important class for the frontend part of the authentication of the website.\n * The injectable class Tokeninterceptor implements HttpInterceptor class.\n */\n\nexport class TokenInterceptorService implements HttpInterceptor{\n  /**\n   * Constructor to create an injector\n   * @param injector To prevent a cyclic dependancy we use this injector\n   */\n\n  constructor(private injector: Injector) { }\n  /**\n   * This fucntion intercepts all the http calls that the frontend makes\n   * @param req Takes the incoming request\n   * @param next Used to pass on to the next interceptor if present, in our case none.\n   */\n  intercept(req,next){\n    let logser = this.injector.get(LoginService);\n    /**\n     * If the token is set then, that means the token has been obtained after login, we will try to clone the request to not tamper with the original request.\n     * To the cloned request we add a authization header with the appended unique token of the user, which makes our requests authorized.\n     */\n    if(localStorage.getItem('token')){\n        req   = req.clone({\n        setHeaders: {\n          Authorization: `token ${logser.getToken()}`\n        }\n      })\n    }\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/user.ts\n        \n\n            \n                Description\n            \n            \n                Description\nThis is an interface that has two variables, username and password.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    username:string;\n    password:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/comp-create/comp-create.component.ts\n            \n            component\n            CompCreateComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/comp-dashboard/comp-dashboard.component.ts\n            \n            component\n            CompDashboardComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/comp.ts\n            \n            interface\n            Comp\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/competition.service.ts\n            \n            injectable\n            CompetitionService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/competition/competition.component.ts\n            \n            component\n            CompetitionComponent\n            \n                3 %\n                (1/31)\n            \n        \n        \n            \n                \n                src/app/contest.ts\n            \n            interface\n            Contest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/editor-dialog/editor-dialog.component.ts\n            \n            component\n            EditorDialogComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/editor/editor.component.ts\n            \n            component\n            EditorComponent\n            \n                40 %\n                (20/50)\n            \n        \n        \n            \n                \n                src/app/editor/editor.component.ts\n            \n            class\n            NavigationModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/file.service.ts\n            \n            injectable\n            FileService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/file.ts\n            \n            interface\n            File\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            injectable\n            LoginService\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/login/user.ts\n            \n            interface\n            User\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pastcontest/pastcontest.component.ts\n            \n            component\n            PastcontestComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/profile/profile.ts\n            \n            interface\n            Profile\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/reg.service.ts\n            \n            injectable\n            RegService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/register/newuser.ts\n            \n            class\n            NewUser\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                42 %\n                (8/19)\n            \n        \n        \n            \n                \n                src/app/renameFile.ts\n            \n            interface\n            RenameFile\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/run.service.ts\n            \n            injectable\n            RunService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/run_file.ts\n            \n            interface\n            RunFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/run_input.ts\n            \n            interface\n            RunInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/run_output.ts\n            \n            interface\n            RunOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/timer/timer.component.ts\n            \n            component\n            TimerComponent\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/app/token-interceptor.service.ts\n            \n            interceptor\n            TokenInterceptorService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-components/datetime-picker : ^4.0.6\n        \n            @angular-material-components/moment-adapter : ^5.0.0\n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @types/jwt-decode : ^3.1.0\n        \n            ace-builds : ^1.4.12\n        \n            angular-moment : ^1.3.0\n        \n            bootstrap : ^4.5.3\n        \n            jwt-decode : ^3.1.2\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            save : ^2.4.0\n        \n            tsd : ^0.14.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOcde\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompCreateComponent\n\nCompCreateComponent\n\nAppModule -->\n\nCompCreateComponent->AppModule\n\n\n\n\n\nCompDashboardComponent\n\nCompDashboardComponent\n\nAppModule -->\n\nCompDashboardComponent->AppModule\n\n\n\n\n\nCompetitionComponent\n\nCompetitionComponent\n\nAppModule -->\n\nCompetitionComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nEditorDialogComponent\n\nEditorDialogComponent\n\nAppModule -->\n\nEditorDialogComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPastcontestComponent\n\nPastcontestComponent\n\nAppModule -->\n\nPastcontestComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nRegService\n\nRegService\n\nAppModule -->\n\nRegService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
