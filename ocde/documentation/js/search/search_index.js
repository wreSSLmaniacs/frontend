var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.325,1,0.948]],["body/components/AppComponent.html",[0,0.573,1,1.674,2,1.915,3,0.226,4,0.193,5,1.394,6,1.394,7,1.394,8,1.394,9,0.161,10,3.245,11,1.394,12,2.354,13,2.067,14,2.339,15,1.715,16,5.621,17,1.715,18,5.034,19,0.226,20,0.64,21,2.603,22,5.621,23,3.205,24,0.718,25,3.833,26,2.171,27,0.98,28,5.034,29,0.883,30,0.025,31,0.98,32,0.485,33,0.825,34,3.833,35,0.574,36,1.007,37,1.007,38,4.262,39,5.034,40,4.262,41,5.034,42,3.071,43,0.814,44,0.62,45,1.838,46,2.338,47,2.858,48,0.226,49,0.406,50,3.833,51,3.833,52,3.754,53,2.414,54,3.071,55,3.374,56,5.034,57,4.262,58,4.262,59,4.262,60,1.223,61,1.831,62,1.715,63,1.394,64,2.033,65,1.394,66,1.394,67,1.007,68,1.239,69,1.394,70,1.007,71,1.394,72,1.007,73,1.394,74,1.007,75,1.394,76,1.007,77,1.147,78,1.394,79,1.007,80,1.394,81,1.075,82,1.394,83,1.007,84,1.394,85,1.007,86,1.394,87,1.007,88,1.394,89,1.007,90,1.394,91,1.075,92,1.394,93,1.394,94,1.394,95,0.014,96,0.018,97,0.014]],["title/modules/AppModule.html",[98,2.063,99,2.266]],["body/modules/AppModule.html",[1,1.819,3,0.169,4,0.145,9,0.121,13,0.857,26,2.033,30,0.026,42,2.514,43,1.134,44,0.464,45,1.374,48,0.169,49,0.304,60,0.915,67,1.529,68,1.014,70,1.529,72,1.529,74,1.529,76,1.612,77,0.857,79,1.529,81,1.632,83,1.529,85,1.529,87,1.529,89,1.529,91,1.632,95,0.01,96,0.015,97,0.01,98,1.749,99,4.725,100,2.944,101,1.749,102,4.086,103,3.598,104,4.086,105,2.137,106,2.427,107,2.427,108,2.427,109,2.427,110,2.427,111,3.551,112,3.13,113,3.551,114,3.489,115,2.427,116,1.749,117,2.866,118,0.499,119,2.762,120,4.121,121,4.121,122,2.762,123,4.121,124,3.073,125,3.489,126,3.073,127,1.749,128,3.489,129,4.121,130,2.866,131,4.121,132,2.131,133,4.121,134,2.866,135,2.866,136,4.121,137,2.866,138,4.121,139,2.866,140,4.121,141,2.866,142,4.121,143,2.866,144,4.121,145,2.137,146,4.121,147,2.866,148,4.121,149,4.121,150,1.278,151,2.866,152,2.866,153,2.427,154,2.427,155,2.427,156,4.121,157,2.427,158,2.427,159,1.749,160,2.427,161,2.427,162,1.921,163,2.427,164,1.921,165,2.866,166,1.921,167,2.427,168,1.921,169,2.427,170,2.427,171,4.121,172,4.121,173,2.308,174,3.489,175,2.427,176,2.427,177,4.121,178,2.427,179,2.427,180,4.121,181,2.866,182,2.866,183,2.427,184,2.866,185,2.866,186,2.866,187,2.866,188,2.866,189,1.278]],["title/classes/AppPage.html",[49,0.358,190,2.521]],["body/classes/AppPage.html",[3,0.293,4,0.251,9,0.209,14,2.067,19,0.293,27,1.032,30,0.025,43,0.804,48,0.293,49,0.527,62,1.692,95,0.018,96,0.021,97,0.018,127,3.031,190,4.417,191,3.33,192,4.207,193,1.275,194,6.552,195,6.552,196,4.969,197,1.275,198,6.793,199,4.969,200,4.207,201,1.89,202,4.969,203,4.969,204,3.705,205,4.969]],["title/modules/AppRoutingModule.html",[98,2.063,111,2.063]],["body/modules/AppRoutingModule.html",[0,0.637,3,0.235,4,0.201,9,0.167,30,0.026,42,2.425,43,1.113,44,0.643,48,0.235,49,0.421,52,2.964,53,1.906,55,2.665,67,1.354,68,1.268,70,1.354,72,1.354,74,1.354,77,1.189,79,1.354,83,1.044,85,1.354,87,1.044,89,1.354,95,0.014,96,0.019,97,0.014,100,2.425,105,2.964,111,3.145,124,2.964,125,4.365,126,2.964,127,2.425,128,4.365,153,3.366,154,3.366,155,3.366,157,3.366,159,3.991,160,3.366,161,3.366,166,2.665,167,3.366,168,2.665,169,3.366,170,3.366,183,3.366,206,3.975,207,3.975,208,3.826,209,5.155,210,1.545,211,3.975,212,1.446,213,2.425,214,2.425,215,2.425,216,2.055,217,5.041,218,3.975,219,3.975,220,5.31,221,2.226,222,2.964,223,3.975,224,3.975,225,3.975,226,3.975]],["title/guards/AuthGuard.html",[159,2.063,227,2.521]],["body/guards/AuthGuard.html",[0,0.507,3,0.243,4,0.208,9,0.174,14,1.715,19,0.243,24,1.09,26,2.307,27,0.919,29,0.949,30,0.026,31,0.718,32,0.356,33,0.887,42,2.514,43,0.941,44,0.667,45,1.976,48,0.243,49,0.699,54,3.219,95,0.015,96,0.019,97,0.015,98,2.514,118,0.919,119,3.537,159,3.219,189,2.596,193,1.136,197,1.253,201,1.684,210,1.602,212,1.499,220,5.494,228,4.121,229,3.49,230,4.121,231,3.009,232,3.355,233,4.121,234,5.276,235,4.468,236,5.276,237,4.576,238,5.196,239,2.53,240,4.121,241,1.51,242,5.276,243,3.219,244,2.737,245,5.276,246,3.935,247,1.602,248,1.578,249,1.976,250,4.121,251,1.684,252,3.49,253,4.121,254,3.49,255,4.121,256,3.073,257,3.219,258,1.976,259,4.121,260,1.976,261,3.073,262,4.121,263,4.121,264,3.49,265,1.838]],["title/interfaces/Comp.html",[68,0.832,266,0.778]],["body/interfaces/Comp.html",[3,0.294,4,0.251,9,0.21,19,0.294,20,0.754,23,3.39,30,0.025,32,0.547,35,1.018,48,0.294,68,1.459,95,0.018,96,0.021,97,0.018,266,1.146,267,2.071,268,4.215,269,5.551,270,3.671,271,4.395,272,6.556,273,3.864]],["title/components/CompCreateComponent.html",[0,0.325,67,0.888]],["body/components/CompCreateComponent.html",[0,0.53,1,0.624,2,1.163,3,0.131,4,0.112,5,0.81,6,0.81,7,0.81,8,0.81,9,0.233,11,0.81,12,2.166,13,1.902,15,1.163,17,1.163,19,0.131,20,0.434,21,2.149,23,2.409,24,0.64,27,1.073,29,0.957,30,0.026,31,0.876,32,0.504,33,0.894,36,0.897,37,0.897,43,0.672,44,0.36,48,0.131,49,0.236,60,0.711,61,1.242,62,1.163,63,0.81,64,1.587,65,0.81,66,0.81,67,1.224,68,1.438,69,0.81,70,0.585,71,0.81,72,0.585,73,0.81,74,0.585,75,0.81,76,0.585,77,0.666,78,0.81,79,0.585,80,0.81,81,0.624,82,0.81,83,0.585,84,0.81,85,0.585,86,0.81,87,0.585,88,0.81,89,0.585,90,0.81,91,0.624,92,0.81,93,0.81,94,0.81,95,0.008,96,0.012,97,0.008,118,0.724,132,1.151,168,4.177,189,1.854,193,0.735,197,1.082,201,1.604,216,2.149,221,3.339,241,0.84,244,2.366,247,2.215,251,1.09,260,1.068,265,2.81,271,3.82,274,4.647,275,1.885,276,2.547,277,3.565,278,2.892,279,3.416,280,3.416,281,2.547,282,3.416,283,2.409,284,3.475,285,2.892,286,3.416,287,3.416,288,3.416,289,3.416,290,3.416,291,2.547,292,2.892,293,3.416,294,1.729,295,4.156,296,3.416,297,3.475,298,4.156,299,4.156,300,4.156,301,4.156,302,1.812,303,5.304,304,3.416,305,3.416,306,3.475,307,1.885,308,3.475,309,2.535,310,2.234,311,3.416,312,2.227,313,1.587,314,2.227,315,3.416,316,2.892,317,3.236,318,2.892,319,4.66,320,3.956,321,3.416,322,2.843,323,2.547,324,2.084,325,3.416,326,3.416,327,3.416,328,2.892,329,3.416,330,2.084,331,2.892,332,2.29,333,3.416,334,3.946,335,2.892,336,3.416,337,3.416,338,2.892,339,3.416,340,2.227,341,3.416,342,3.416,343,2.547,344,2.892,345,3.416,346,3.416,347,3.416,348,1.766,349,3.416,350,2.29,351,3.416,352,2.084,353,3.416,354,2.227,355,2.227,356,2.892,357,2.892,358,3.416,359,2.892,360,3.416,361,2.227,362,2.084,363,2.227,364,3.748,365,2.547,366,2.227,367,3.416,368,2.227,369,2.227,370,2.227,371,2.227,372,1.661,373,1.885,374,1.358,375,2.227,376,2.227,377,1.661,378,1.661,379,2.892,380,2.892,381,3.556,382,3.416,383,2.892,384,2.084,385,2.227,386,2.227,387,2.227,388,2.227,389,4.156,390,4.156,391,3.416,392,3.416,393,2.227,394,2.227,395,0.711,396,2.227,397,2.227,398,2.227,399,2.227,400,2.227,401,2.227,402,2.227,403,1.885,404,1.885,405,1.493,406,2.227,407,2.227,408,2.227,409,2.227,410,1.524,411,3.416,412,2.547]],["title/components/CompDashboardComponent.html",[0,0.325,70,0.888]],["body/components/CompDashboardComponent.html",[0,0.577,1,0.807,2,1.408,3,0.17,4,0.145,5,1.047,6,1.047,7,1.047,8,1.047,9,0.121,11,1.047,12,2.264,13,1.988,15,1.408,17,1.408,19,0.17,20,0.525,24,0.775,27,1.071,29,0.663,30,0.026,31,0.843,32,0.518,33,0.62,35,0.792,36,1.531,37,1.531,43,0.783,44,0.466,48,0.17,49,0.305,60,0.919,61,1.504,62,1.408,63,1.047,64,1.801,65,1.047,66,1.047,67,0.757,68,1.653,69,1.047,70,1.389,71,1.047,72,0.757,73,1.047,74,0.757,75,1.047,76,0.757,77,0.861,78,1.047,79,0.757,80,1.047,81,0.807,82,1.047,83,0.757,84,1.047,85,0.757,86,1.047,87,0.757,88,1.047,89,0.757,90,1.047,91,1.356,92,1.047,93,1.047,94,1.047,95,0.01,96,0.015,97,0.01,118,0.843,166,4.194,189,1.844,193,0.89,197,0.62,221,2.315,222,3.083,247,1.607,251,1.32,260,1.381,265,1.284,274,4.665,284,3.083,294,2.013,302,2.055,309,2.523,310,2.535,313,1.408,338,5.297,374,1.757,383,3.501,384,2.523,413,2.438,414,4.135,415,3.501,416,4.135,417,6.494,418,4.455,419,5.287,420,2.523,421,3.501,422,4.135,423,4.135,424,4.135,425,4.838,426,4.135,427,4.096,428,4.838,429,4.838,430,4.838,431,2.438,432,4.135,433,2.88,434,2.88,435,2.88,436,2.88,437,2.88,438,2.88,439,1.757,440,2.147,441,1.93,442,2.88,443,2.88,444,2.88,445,2.88,446,2.88,447,2.88,448,2.88,449,4.135,450,3.083,451,4.135,452,4.347,453,5.829,454,4.477,455,4.135,456,4.135]],["title/components/CompetitionComponent.html",[0,0.325,72,0.888]],["body/components/CompetitionComponent.html",[0,0.475,1,0.469,2,0.928,3,0.099,4,0.084,5,0.609,6,0.609,7,0.609,8,0.609,9,0.208,11,0.609,12,2.038,13,1.79,15,0.928,17,0.928,19,0.099,20,0.346,21,3.093,23,2.556,24,0.51,26,1.445,27,1.148,29,0.627,30,0.026,31,0.692,32,0.528,33,0.587,35,0.82,36,1.299,37,1.299,43,0.989,44,0.271,45,0.802,48,0.099,49,0.177,53,1.653,60,0.534,61,0.991,62,0.928,63,0.609,64,1.49,65,0.609,66,0.609,67,0.44,68,0.848,69,0.609,70,0.44,71,0.609,72,1.044,73,0.609,74,0.906,75,0.609,76,0.44,77,1.189,78,0.609,79,0.44,80,0.609,81,0.469,82,0.609,83,0.44,84,0.609,85,0.44,86,0.609,87,0.44,88,0.609,89,0.44,90,0.609,91,0.469,92,0.609,93,0.609,94,0.609,95,0.006,96,0.01,97,0.006,118,0.762,132,0.865,189,2.205,193,0.587,197,1.231,201,0.534,210,0.651,216,2.261,217,1.248,231,1.782,232,1.782,241,0.67,247,2.13,251,0.87,260,2.902,265,2.092,269,2.307,270,1.93,271,1.827,273,2.424,276,2.032,277,2.103,283,2.664,297,2.963,306,2.963,307,1.417,308,3.262,309,2.103,310,1.905,313,1.948,320,2.032,322,2.103,324,1.662,357,2.307,362,2.103,364,2.57,365,1.248,372,1.248,374,1.021,377,1.248,378,1.248,381,1.122,384,1.662,395,0.534,403,2.307,404,2.307,418,1.827,452,1.248,457,1.417,458,2.725,459,2.725,460,2.307,461,4.363,462,2.725,463,2.307,464,2.725,465,2.725,466,2.032,467,3.97,468,2.032,469,1.526,470,2.725,471,2.725,472,2.307,473,2.307,474,2.307,475,2.725,476,1.059,477,1.662,478,2.725,479,2.725,480,2.725,481,2.725,482,2.725,483,2.307,484,2.725,485,2.918,486,2.032,487,3.447,488,2.725,489,2.918,490,3.447,491,2.668,492,1.782,493,2.918,494,2.918,495,3.262,496,3.314,497,2.918,498,5.065,499,3.447,500,3.973,501,3.973,502,3.973,503,3.364,504,3.364,505,3.364,506,3.364,507,2.225,508,3.973,509,3.973,510,2.725,511,2.57,512,2.918,513,2.57,514,2.725,515,1.674,516,1.674,517,1.674,518,1.674,519,1.674,520,1.674,521,1.674,522,1.674,523,1.674,524,1.674,525,2.307,526,1.674,527,1.248,528,1.674,529,2.307,530,1.674,531,1.674,532,1.674,533,2.307,534,1.674,535,1.674,536,1.674,537,1.674,538,1.674,539,2.918,540,1.674,541,1.674,542,1.674,543,1.674,544,1.674,545,3.262,546,1.674,547,1.674,548,1.674,549,1.417,550,1.417,551,0.747,552,1.674,553,4.265,554,1.248,555,4.639,556,2.918,557,2.57,558,2.57,559,3.703,560,2.918,561,2.918,562,2.918,563,2.918,564,2.307,565,1.417,566,1.417,567,2.103,568,3.143,569,1.417,570,1.248,571,2.918,572,1.417,573,1.417,574,1.674,575,1.417,576,1.417,577,1.417,578,1.674,579,1.417,580,1.417,581,1.417,582,1.417,583,2.725,584,3.447,585,1.417,586,1.417,587,1.248,588,1.417,589,2.307,590,1.417,591,1.417,592,1.417,593,1.417,594,1.417,595,1.417,596,1.417,597,1.417,598,2.307,599,1.417,600,1.417,601,2.307,602,1.417,603,2.307,604,1.417,605,2.725,606,2.725,607,2.725,608,3.703,609,1.417,610,2.963,611,1.417,612,1.417,613,1.417,614,1.417,615,1.674,616,1.674,617,1.674,618,1.674,619,1.674,620,1.674,621,1.674,622,1.674,623,1.417,624,1.417,625,2.307,626,1.417,627,1.674,628,0.57,629,2.032,630,2.032,631,2.307,632,2.725,633,2.725,634,2.725,635,2.725,636,2.725,637,2.725,638,1.674,639,1.674,640,1.674,641,1.417,642,2.307,643,2.307,644,1.417,645,1.417,646,1.417,647,1.674,648,1.674,649,1.674,650,1.674,651,1.674,652,1.674,653,1.417,654,2.307,655,2.307,656,2.307,657,2.307,658,3.973,659,2.307,660,2.963,661,1.827,662,1.674,663,1.248,664,1.122,665,1.674,666,1.248]],["title/injectables/CompetitionService.html",[248,1.011,310,1.621]],["body/injectables/CompetitionService.html",[3,0.172,4,0.147,9,0.123,14,1.215,19,0.247,20,0.531,24,0.547,27,1.192,29,1.388,30,0.026,31,1.051,32,0.556,33,1.298,35,0.954,36,1.673,37,1.673,43,0.861,44,0.472,48,0.172,49,0.31,68,1.028,95,0.01,96,0.015,97,0.01,118,0.728,150,1.303,193,0.899,197,1.371,201,2.033,213,2.548,214,2.548,215,2.548,239,2.003,248,1.25,249,1.4,258,1.4,270,2.98,310,2.003,322,1.782,420,2.548,476,1.624,492,2.751,551,1.303,667,1.51,668,2.473,669,4.876,670,4.876,671,4.876,672,4.129,673,4.876,674,4.876,675,4.876,676,2.975,677,4.876,678,4.876,679,4.177,680,4.177,681,5.322,682,5.322,683,5.322,684,5.322,685,4.177,686,4.177,687,4.177,688,4.177,689,1.635,690,2.751,691,4.177,692,1.863,693,4.177,694,2.92,695,4.177,696,2.92,697,3.77,698,2.92,699,2.92,700,2.92,701,2.92,702,4.177,703,2.92,704,4.177,705,2.92,706,2.92,707,2.92,708,2.92,709,2.92,710,4.177,711,2.92,712,4.177,713,2.92,714,4.177,715,2.92,716,4.177,717,2.92,718,4.177,719,2.92,720,4.177,721,2.92,722,4.177,723,4.177,724,2.92,725,3.115,726,3.537,727,3.537,728,2.8,729,4.177,730,2.92,731,4.177,732,2.92,733,1.51,734,2.92,735,2.92,736,2.92,737,2.92,738,2.92,739,2.92,740,2.92,741,2.92,742,2.92,743,2.92,744,2.92,745,2.92]],["title/interfaces/Contest.html",[266,0.778,283,1.748]],["body/interfaces/Contest.html",[3,0.294,4,0.252,9,0.289,19,0.294,20,0.755,23,3.392,30,0.025,32,0.566,35,1.018,48,0.294,95,0.018,96,0.021,97,0.018,266,1.149,267,2.075,283,3.07,379,5.555,746,4.224,747,6.561,748,6.561]],["title/components/EditorDialogComponent.html",[0,0.325,76,0.888]],["body/components/EditorDialogComponent.html",[0,0.542,1,1.083,2,1.723,3,0.228,4,0.195,5,1.405,6,1.405,7,1.405,8,1.405,9,0.163,11,1.405,12,2.356,13,2.069,15,1.723,17,1.723,19,0.228,20,0.643,21,2.917,24,0.724,27,0.983,29,0.889,30,0.025,31,1.083,32,0.437,33,0.832,43,0.818,44,0.625,48,0.228,49,0.41,60,1.233,61,1.84,62,1.723,63,1.405,64,2.039,65,1.405,66,1.405,67,1.015,68,1.245,69,1.405,70,1.015,71,1.405,72,1.015,73,1.405,74,1.015,75,1.405,76,1.573,77,1.972,78,1.405,79,1.015,80,1.405,81,1.083,82,1.405,83,1.015,84,1.405,85,1.015,86,1.405,87,1.015,88,1.405,89,1.015,90,1.405,91,1.083,92,1.405,93,1.405,94,1.405,95,0.014,96,0.018,97,0.014,145,2.881,162,4.013,193,1.089,197,0.832,251,1.615,294,2.347,302,2.327,313,1.723,344,5.069,365,2.881,749,5.069,750,3.271,751,4.284,752,5.643,753,5.06,754,3.863,755,3.863,756,3.863,757,3.863,758,3.863,759,3.863,760,3.863,761,3.863,762,5.06,763,5.06,764,5.06,765,4.284]],["title/interfaces/File.html",[9,0.142,266,0.778]],["body/interfaces/File.html",[3,0.305,4,0.261,9,0.271,19,0.305,20,0.77,30,0.025,32,0.523,35,1.026,48,0.305,95,0.019,96,0.022,97,0.019,266,1.19,267,2.149,567,4.048,766,4.374,767,5.619]],["title/injectables/FileService.html",[248,1.011,768,2.266]],["body/injectables/FileService.html",[3,0.18,4,0.154,9,0.25,14,1.266,19,0.18,20,0.547,24,0.57,27,1.12,29,1.405,30,0.026,31,1.063,32,0.555,33,1.314,35,1.063,36,1.31,37,1.31,43,0.925,44,0.492,48,0.18,49,0.323,95,0.011,96,0.015,97,0.011,118,0.749,150,1.357,193,0.926,197,1.278,201,1.895,213,2.624,214,2.624,215,2.624,216,3.069,239,2.062,243,3.622,248,1.287,249,1.459,258,1.459,270,2.408,395,1.373,410,1.918,420,2.624,476,1.672,551,1.357,628,2.253,667,1.573,676,3.043,689,1.704,690,2.803,692,1.918,697,3.703,725,3.207,726,3.641,727,3.641,728,2.883,733,1.573,768,2.883,769,2.577,770,2.793,771,4.988,772,4.301,773,3.641,774,4.301,775,4.301,776,3.723,777,4.301,778,4.301,779,4.301,780,5.07,781,3.043,782,4.301,783,3.043,784,4.301,785,3.043,786,4.301,787,3.043,788,4.301,789,3.043,790,4.301,791,3.043,792,1.459,793,2.408,794,2.624,795,2.624,796,3.043,797,4.301,798,3.043,799,4.301,800,3.043,801,4.223,802,3.641,803,4.223,804,4.301,805,4.301,806,4.301,807,1.856,808,3.043,809,2.577]],["title/components/HomeComponent.html",[0,0.325,79,0.888]],["body/components/HomeComponent.html",[0,0.473,1,0.834,2,1.441,3,0.176,4,0.15,5,1.081,6,1.081,7,1.081,8,1.081,9,0.125,11,1.081,12,2.275,13,1.998,15,1.441,17,1.441,19,0.176,24,0.922,27,0.737,30,0.025,31,0.737,43,0.481,44,0.481,46,2.581,48,0.176,49,0.315,52,3.155,58,4.543,59,5.414,60,0.949,61,1.791,62,1.441,63,1.081,64,1.827,65,1.081,66,1.081,67,0.781,68,1.041,69,1.081,70,0.781,71,1.081,72,0.781,73,1.081,74,0.781,75,1.081,76,0.781,77,0.889,78,1.081,79,1.41,80,1.081,81,0.834,82,1.081,83,0.781,84,1.081,85,0.781,86,1.081,87,0.781,88,1.081,89,0.781,90,1.081,91,0.834,92,1.081,93,1.081,94,1.081,95,0.011,96,0.015,97,0.011,118,0.858,122,2.836,173,2.369,193,0.911,197,0.64,241,1.041,251,1.35,254,3.582,283,2.187,294,2.049,302,2.086,313,1.441,317,1.814,324,2.581,332,2.836,352,2.581,384,2.581,395,1.35,439,1.814,469,2.369,472,3.582,476,2.086,486,3.155,491,1.814,496,2.836,545,4.62,557,3.155,558,3.155,587,2.217,659,3.582,692,1.887,810,2.517,811,5.365,812,2.836,813,4.231,814,4.231,815,4.231,816,4.231,817,4.231,818,4.231,819,2.187,820,3.582,821,5.365,822,5.365,823,4.231,824,4.925,825,4.231,826,2.973,827,2.973,828,3.582,829,4.231,830,4.231,831,4.231,832,4.231,833,4.394,834,4.231,835,4.231,836,4.231,837,4.231,838,4.231,839,3.582,840,3.582,841,4.001,842,4.543,843,4.231,844,2.581,845,4.231,846,3.582,847,4.231,848,3.582,849,5.365,850,4.231,851,4.231,852,4.231,853,3.582,854,4.231,855,4.543,856,4.231,857,4.231,858,4.231,859,2.836,860,4.231,861,4.231,862,4.231,863,4.231,864,4.231,865,4.231,866,4.231,867,4.231,868,4.231,869,2.517,870,2.217,871,2.217,872,2.517,873,2.217,874,2.217,875,4.001,876,2.517,877,2.517,878,2.973,879,2.581,880,2.217,881,2.973,882,3.673,883,1.993,884,2.517,885,2.517,886,2.973,887,2.973,888,1.993,889,3.582,890,2.973,891,2.517]],["title/components/LoadingComponent.html",[0,0.325,81,0.948]],["body/components/LoadingComponent.html",[0,0.542,1,0.823,2,1.428,3,0.173,4,0.148,5,1.067,6,1.067,7,1.067,8,1.067,9,0.124,11,1.067,12,2.27,13,1.994,15,1.428,17,1.428,19,0.173,24,0.916,27,0.73,30,0.026,31,1.076,43,0.475,44,0.475,48,0.173,49,0.311,60,0.937,61,1.524,62,1.428,63,1.067,64,1.817,65,1.067,66,1.067,67,0.771,68,1.031,69,1.067,70,0.771,71,1.067,72,0.771,73,1.067,74,0.771,75,1.067,76,0.771,77,0.878,78,1.067,79,0.771,80,1.067,81,1.495,82,1.067,83,0.771,84,1.067,85,0.771,86,1.067,87,0.771,88,1.067,89,0.771,90,1.067,91,0.823,92,1.067,93,1.067,94,1.067,95,0.011,96,0.015,97,0.011,116,2.557,118,0.852,193,0.902,197,0.632,251,1.338,294,2.034,302,2.073,313,1.428,318,3.549,332,3.932,664,1.967,883,1.967,892,2.485,893,4.191,894,3.549,895,4.191,896,5.113,897,3.549,898,4.889,899,4.191,900,2.934,901,2.934,902,2.934,903,2.188,904,2.934,905,2.934,906,2.485,907,4.967,908,2.934,909,6.452,910,4.889,911,4.889,912,2.485,913,2.934,914,6.795,915,6.038,916,3.549,917,4.191,918,4.191,919,2.934,920,6.517,921,5.866,922,5.866,923,5.866,924,5.333,925,2.934,926,5.333,927,2.934,928,5.333,929,5.866,930,3.579,931,4.191,932,6.517,933,4.191,934,4.191,935,4.191,936,3.125,937,4.191,938,4.191,939,4.191,940,3.549,941,4.191]],["title/components/LoginComponent.html",[0,0.325,83,0.888]],["body/components/LoginComponent.html",[0,0.535,1,0.796,2,1.394,3,0.168,4,0.143,5,1.033,6,1.033,7,1.033,8,1.033,9,0.12,11,1.033,12,2.259,13,1.984,15,1.394,17,1.394,19,0.168,20,0.52,24,0.767,26,2.026,27,1.042,29,0.654,30,0.026,31,0.836,32,0.414,33,0.611,35,0.425,36,1.076,37,1.076,43,0.938,44,0.459,45,1.361,48,0.168,49,0.557,54,4.018,57,2.404,60,0.906,61,1.489,62,1.394,63,1.033,64,1.789,65,1.033,66,1.033,67,0.746,68,1.007,69,1.033,70,0.746,71,1.033,72,0.746,73,1.033,74,0.746,75,1.033,76,0.746,77,0.85,78,1.033,79,0.746,80,1.033,81,0.796,82,1.033,83,1.38,84,1.033,85,0.746,86,1.033,87,0.746,88,1.033,89,0.746,90,1.033,91,0.796,92,1.033,93,1.033,94,1.033,95,0.01,96,0.015,97,0.01,118,1.087,132,1.468,164,3.522,193,0.881,197,1.033,210,1.591,231,2.116,232,2.716,237,3.053,239,1.963,241,1.534,244,2.343,251,1.307,277,2.497,294,1.997,302,1.866,313,1.635,328,2.404,330,1.732,348,2.482,362,2.929,395,0.906,405,2.744,450,3.58,469,1.59,474,4.064,476,1.591,477,1.732,513,2.118,624,2.404,628,2.037,630,2.118,812,2.744,819,1.468,844,2.497,855,2.404,942,2.404,943,3.466,944,4.8,945,4.094,946,4.094,947,5.569,948,4.094,949,4.8,950,4.448,951,2.84,952,4.094,953,2.84,954,2.404,955,2.84,956,2.84,957,3.053,958,2.84,959,2.84,960,3.053,961,2.404,962,2.404,963,2.84,964,2.84,965,4.448,966,3.648,967,4.448,968,3.466,969,4.8,970,3.58,971,2.404,972,3.466,973,2.404,974,2.404,975,2.404,976,2.84,977,2.118,978,1.903,979,2.84,980,2.84,981,2.404,982,4.094,983,2.84,984,3.053,985,2.84,986,2.84,987,2.84,988,2.84,989,2.744,990,3.053,991,2.404,992,3.053,993,2.84,994,2.84,995,2.404,996,2.404,997,4.094,998,2.84,999,2.84,1000,2.84,1001,2.84,1002,2.84,1003,2.84,1004,2.84,1005,2.118,1006,3.58,1007,2.404,1008,4.094,1009,4.094]],["title/injectables/LoginService.html",[26,1.23,248,1.011]],["body/injectables/LoginService.html",[3,0.169,4,0.144,9,0.12,14,1.19,19,0.169,20,0.523,24,0.903,26,1.496,27,1.13,29,1.11,30,0.026,31,0.84,32,0.502,33,1.037,35,0.616,36,1.266,37,1.266,42,2.51,43,0.903,44,0.463,48,0.169,49,0.617,54,2.51,95,0.01,96,0.015,97,0.01,116,2.51,118,1.069,150,1.276,164,3.898,193,0.886,197,1.365,201,1.913,210,1.112,212,2.031,231,2.491,232,2.887,238,2.421,241,1.667,244,2.979,246,3.068,247,1.112,248,1.231,249,1.371,256,3.068,257,3.215,258,1.371,261,2.132,313,0.974,395,1.313,410,1.835,476,1.112,477,1.745,551,1.276,628,1.401,667,1.478,676,2.94,689,1.601,690,2.887,692,1.835,697,2.698,733,1.478,770,2.698,792,1.371,793,2.304,794,2.51,795,2.51,819,3.007,954,2.421,957,3.93,960,3.068,961,3.483,962,3.483,990,4.728,991,5.368,1010,2.421,1011,4.819,1012,5.27,1013,5.27,1014,4.463,1015,5.27,1016,5.27,1017,5.27,1018,4.114,1019,4.114,1020,4.114,1021,3.068,1022,3.068,1023,3.483,1024,2.859,1025,4.728,1026,2.859,1027,2.859,1028,2.859,1029,2.859,1030,4.114,1031,4.114,1032,2.859,1033,4.114,1034,3.483,1035,4.114,1036,2.859,1037,2.859,1038,4.114,1039,2.859,1040,2.859,1041,3.483,1042,3.483,1043,4.114,1044,2.859,1045,4.114,1046,2.859,1047,2.132,1048,2.859,1049,2.421,1050,2.859,1051,2.421,1052,2.859,1053,2.859,1054,3.068,1055,2.859,1056,2.421,1057,4.114,1058,2.859,1059,2.859,1060,2.859,1061,2.859,1062,2.859,1063,2.859,1064,2.859,1065,2.859]],["title/classes/NavigationModel.html",[49,0.358,1066,2.521]],["body/classes/NavigationModel.html",[0,0.223,3,0.058,4,0.05,9,0.275,12,0.335,13,0.294,15,0.335,17,0.335,19,0.058,20,0.22,21,2.828,23,2.302,24,0.184,26,0.63,27,0.557,30,0.026,31,0.83,32,0.305,33,0.603,35,0.978,40,0.832,43,0.917,44,0.159,45,0.471,46,1.057,47,0.733,48,0.058,49,0.246,64,1.779,74,0.258,76,0.258,77,1.332,95,0.011,96,0.006,97,0.004,101,0.599,118,0.953,122,0.659,124,0.733,132,0.508,145,0.733,162,0.659,163,0.832,173,0.55,189,2.06,191,0.659,201,1.768,204,1.292,210,0.382,215,2.474,216,2.302,217,3.182,221,1.302,241,0.426,243,3.492,244,1.7,246,1.733,247,1.243,251,0.314,257,3.823,260,1.692,265,1.427,277,0.599,281,1.733,284,1.292,291,0.733,297,0.733,302,0.382,308,0.733,313,1.573,316,1.467,317,1.057,320,0.733,323,1.292,324,2.154,330,0.599,350,0.659,352,3.126,362,0.599,364,1.292,372,1.292,373,0.832,377,0.733,378,0.733,381,0.659,395,1.474,405,2.718,410,1.7,412,2.385,418,1.162,420,0.599,427,0.832,439,1.418,440,1.292,463,0.832,467,1.968,468,0.733,477,1.71,485,1.467,489,0.832,492,2.388,493,0.832,494,0.832,498,1.467,504,1.467,506,0.832,507,0.55,511,0.733,525,0.832,529,0.832,533,0.832,539,1.467,545,1.292,553,3.652,554,0.733,555,3.771,556,1.968,557,0.733,558,0.733,559,2.708,560,0.832,561,0.832,562,0.832,563,0.832,564,1.467,565,0.832,566,1.467,567,2.603,568,2.144,585,0.832,586,0.832,587,0.733,588,0.832,589,0.832,590,0.832,591,0.832,592,0.832,593,0.832,594,0.832,595,0.832,596,0.832,597,0.832,598,1.467,599,0.832,600,0.832,601,1.467,602,0.832,603,0.832,604,0.832,608,1.968,625,2.373,626,1.467,628,0.59,629,2.09,631,4.035,641,0.832,642,0.832,643,0.832,644,0.832,645,0.832,646,0.832,660,1.292,661,0.659,751,0.832,767,2.989,768,2.555,773,1.467,776,1.71,780,0.733,792,1.344,803,0.832,839,0.832,840,0.832,841,1.292,844,1.71,848,4.035,853,3.434,894,0.832,930,2.474,943,0.832,968,1.467,977,0.733,978,1.162,984,3.321,989,0.659,990,3.024,1021,1.292,1025,1.292,1034,1.968,1049,0.832,1066,4.707,1067,0.832,1068,4.897,1069,4.453,1070,0.983,1071,0.983,1072,0.983,1073,0.983,1074,0.983,1075,1.162,1076,0.983,1077,1.418,1078,0.832,1079,1.733,1080,0.983,1081,0.983,1082,0.983,1083,0.983,1084,0.983,1085,0.832,1086,0.983,1087,0.832,1088,0.733,1089,0.983,1090,0.983,1091,1.733,1092,0.983,1093,0.983,1094,0.983,1095,0.832,1096,0.983,1097,0.983,1098,0.983,1099,0.983,1100,0.983,1101,0.983,1102,0.983,1103,1.733,1104,0.983,1105,5.776,1106,5.471,1107,6.099,1108,0.983,1109,0.983,1110,0.983,1111,0.983,1112,0.983,1113,0.983,1114,0.983,1115,0.983,1116,0.832,1117,0.983,1118,0.983,1119,0.983,1120,0.983,1121,1.733,1122,1.733,1123,1.733,1124,1.467,1125,1.733,1126,0.983,1127,0.983,1128,0.983,1129,0.983,1130,4.618,1131,0.983,1132,0.983,1133,0.983,1134,0.983,1135,0.983,1136,4.453,1137,4.453,1138,0.983,1139,5.667,1140,1.733,1141,1.733,1142,0.983,1143,1.733,1144,4.897,1145,1.733,1146,5.222,1147,1.733,1148,1.733,1149,1.733,1150,0.983,1151,0.983,1152,2.803,1153,5.325,1154,6.099,1155,4.056,1156,4.056,1157,0.983,1158,4.056,1159,0.983,1160,4.453,1161,3.812,1162,4.056,1163,4.453,1164,0.983,1165,3.182,1166,0.983,1167,0.983,1168,0.983,1169,1.467,1170,0.983,1171,0.983,1172,0.983,1173,0.983,1174,1.733,1175,1.733,1176,0.983,1177,0.983,1178,1.733,1179,5.016,1180,0.983,1181,1.733,1182,0.983,1183,0.983,1184,1.733,1185,0.983,1186,2.325,1187,0.983,1188,0.983,1189,0.983,1190,0.983,1191,3.198,1192,1.733,1193,1.733,1194,0.983,1195,4.498,1196,4.247,1197,2.373,1198,0.983,1199,0.983,1200,0.983,1201,1.733,1202,2.803,1203,2.803,1204,0.983,1205,0.983,1206,1.733,1207,1.733,1208,1.733,1209,0.983,1210,1.733,1211,5.541,1212,3.53,1213,4.056,1214,0.983,1215,1.733,1216,0.983,1217,1.733,1218,1.733,1219,1.733,1220,0.983,1221,0.983,1222,0.983,1223,0.983,1224,0.983,1225,0.983,1226,1.467,1227,0.983,1228,1.733,1229,0.983,1230,0.983,1231,0.983,1232,0.983,1233,0.983,1234,0.983,1235,0.983,1236,1.733,1237,0.983,1238,0.983,1239,0.983,1240,0.983,1241,0.983,1242,0.983,1243,1.733,1244,0.983,1245,0.983,1246,2.325,1247,0.983,1248,2.325,1249,3.198,1250,1.733,1251,1.733,1252,0.983,1253,0.983,1254,0.983,1255,0.983,1256,1.733,1257,1.733,1258,0.983,1259,0.983,1260,0.983,1261,0.983,1262,0.983,1263,0.983,1264,0.983,1265,0.983,1266,0.983,1267,0.983,1268,0.983,1269,1.733,1270,0.983,1271,0.983,1272,0.983,1273,2.325,1274,0.983,1275,0.983,1276,2.325,1277,2.803,1278,0.983,1279,0.983,1280,0.983,1281,0.983,1282,0.983,1283,0.983,1284,0.983,1285,0.983,1286,0.983,1287,0.983,1288,0.983,1289,0.983,1290,0.983,1291,0.983,1292,0.983,1293,0.983,1294,0.983,1295,0.983,1296,0.832,1297,0.983,1298,0.983,1299,2.325,1300,1.467,1301,0.983,1302,0.983,1303,0.983,1304,0.983,1305,2.325,1306,0.983,1307,0.983,1308,0.983,1309,0.983,1310,0.983,1311,2.325,1312,0.983,1313,1.733,1314,1.733,1315,1.733,1316,1.733,1317,0.983,1318,1.733,1319,2.803,1320,2.803,1321,0.983,1322,0.983]],["title/classes/NewUser.html",[49,0.358,1323,2.063]],["body/classes/NewUser.html",[3,0.244,4,0.208,9,0.174,19,0.244,20,0.671,24,0.989,27,1.15,29,0.951,30,0.026,31,0.719,32,0.57,33,0.889,35,1.052,36,1.706,37,1.706,48,0.244,49,0.56,95,0.015,96,0.019,97,0.015,118,0.92,191,2.767,212,1.501,241,1.3,348,2.134,476,1.605,628,2.091,807,2.519,879,3.872,966,3.872,978,2.767,1005,3.079,1021,3.079,1323,3.554,1324,3.495,1325,4.128,1326,4.128,1327,3.495,1328,4.254,1329,4.733,1330,4.733,1331,4.128,1332,5.282,1333,4.128,1334,4.128,1335,4.128,1336,4.128,1337,4.128,1338,4.128,1339,3.079,1340,3.495,1341,4.128,1342,4.128,1343,4.128,1344,4.128,1345,4.128,1346,4.128,1347,4.128,1348,4.128]],["title/components/PastcontestComponent.html",[0,0.325,85,0.888]],["body/components/PastcontestComponent.html",[0,0.527,1,0.767,2,1.357,3,0.161,4,0.138,5,0.995,6,0.995,7,0.995,8,0.995,9,0.115,11,0.995,12,2.246,13,1.972,15,1.357,17,1.357,19,0.161,20,0.506,23,3.057,24,0.746,27,1.108,29,0.63,30,0.026,31,0.819,32,0.533,33,0.589,35,0.773,36,1.356,37,1.356,43,0.76,44,0.443,48,0.161,49,0.29,60,0.873,61,1.449,62,1.357,63,0.995,64,1.759,65,0.995,66,0.995,67,0.719,68,1.156,69,0.995,70,0.719,71,0.995,72,0.719,73,0.995,74,0.719,75,0.995,76,0.719,77,0.818,78,0.995,79,0.719,80,0.995,81,0.767,82,0.995,83,0.719,84,0.995,85,1.356,86,0.995,87,0.719,88,0.995,89,0.719,90,0.995,91,0.767,92,0.995,93,0.995,94,0.995,95,0.01,96,0.014,97,0.01,118,0.956,189,2.096,193,0.858,197,0.858,201,0.873,208,2.431,210,1.063,212,1.449,241,0.98,244,1.777,247,2.5,251,1.272,260,1.91,265,2.703,270,3.311,271,3.461,273,3.15,278,3.374,281,2.971,285,3.374,294,1.955,302,2.007,309,2.431,310,2.475,313,1.357,334,3.374,350,2.671,356,3.374,359,3.374,374,1.669,431,2.316,452,2.04,460,4.371,491,3.348,495,4.092,496,4.141,497,3.979,503,4.371,512,3.979,513,3.85,569,2.316,570,2.04,571,2.316,572,2.316,573,3.374,579,2.316,580,2.316,581,2.316,582,2.316,609,2.316,610,2.04,611,2.316,612,2.316,613,2.316,614,2.316,654,3.374,655,3.374,656,3.374,657,3.374,765,3.374,844,2.431,896,3.374,897,3.374,989,3.461,1087,3.374,1088,2.971,1349,2.316,1350,3.985,1351,3.985,1352,3.374,1353,5.163,1354,3.985,1355,3.985,1356,4.7,1357,3.985,1358,4.7,1359,4.7,1360,3.985,1361,3.985,1362,2.736,1363,3.985,1364,3.15,1365,2.736,1366,3.985,1367,3.985,1368,3.374,1369,2.736,1370,2.736,1371,2.736,1372,2.736,1373,2.736,1374,2.736,1375,2.736,1376,3.985,1377,3.985]],["title/interfaces/Profile.html",[53,1.621,266,0.778]],["body/interfaces/Profile.html",[3,0.288,4,0.246,9,0.205,19,0.288,20,0.744,30,0.025,32,0.575,35,1.039,48,0.288,53,3.008,95,0.018,96,0.021,97,0.018,118,1.02,212,1.771,241,1.198,266,1.348,267,2.026,343,3.632,348,2.518,476,1.893,628,2.137,807,2.971,819,2.518,879,3.828,966,3.828,978,3.265,1328,4.363,1339,3.632,1340,4.124,1378,4.124,1379,6.509]],["title/components/ProfileComponent.html",[0,0.325,87,0.888]],["body/components/ProfileComponent.html",[0,0.477,1,0.609,2,1.394,3,0.128,4,0.11,5,0.79,6,0.79,7,0.79,8,0.79,9,0.091,11,0.79,12,2.156,13,1.893,15,1.141,17,1.141,19,0.128,20,0.585,24,0.862,26,1.91,27,1.051,29,0.5,30,0.026,31,0.866,32,0.511,33,0.467,35,0.916,36,0.571,37,0.571,43,0.744,44,0.351,45,1.041,48,0.128,49,0.23,53,2.71,60,0.693,61,1.488,62,1.141,63,0.79,64,1.567,65,0.79,66,0.79,67,0.571,68,0.825,69,0.79,70,0.571,71,0.79,72,0.571,73,0.79,74,0.571,75,0.79,76,0.571,77,1.224,78,0.79,79,0.571,80,0.79,81,0.609,82,0.79,83,0.571,84,0.79,85,0.571,86,0.79,87,1.208,88,0.79,89,0.571,90,0.79,91,0.609,92,0.79,93,0.79,94,0.79,95,0.008,96,0.012,97,0.008,118,0.985,119,3.083,193,0.721,197,0.467,212,1.91,213,2.044,214,2.044,221,2.941,222,2.499,235,2.837,239,1.607,241,1.483,247,1.303,251,1.069,256,2.499,257,2.496,260,1.962,273,2.044,283,2.378,294,1.702,302,1.788,309,2.806,310,2.205,313,1.141,317,1.325,332,2.246,374,1.325,415,2.837,439,2.496,441,2.246,454,2.837,466,2.499,486,2.499,491,2.806,492,2.378,496,3.888,511,3.051,623,1.839,629,1.62,661,2.246,663,3.706,664,1.456,666,1.62,728,2.246,812,2.246,819,2.715,820,2.837,828,2.837,869,1.839,870,3.051,871,2.499,872,1.839,873,2.499,874,2.499,875,3.706,876,1.839,877,1.839,879,2.496,882,3.916,883,1.456,884,1.839,888,2.246,889,1.839,891,4.208,903,1.62,906,3.464,916,1.839,930,3.894,957,3.43,960,3.916,977,2.499,1023,2.837,1085,1.839,1124,1.839,1165,1.62,1328,3.669,1329,3.706,1330,3.706,1364,2.044,1380,1.839,1381,4.082,1382,4.091,1383,3.351,1384,4.091,1385,4.091,1386,4.091,1387,2.172,1388,3.789,1389,3.351,1390,2.172,1391,3.351,1392,3.351,1393,3.351,1394,2.172,1395,2.172,1396,2.172,1397,2.172,1398,2.172,1399,2.172,1400,2.172,1401,2.172,1402,2.172,1403,2.172,1404,2.172,1405,2.172,1406,2.172,1407,2.172,1408,2.172,1409,2.172,1410,2.172,1411,2.172,1412,2.172,1413,2.172,1414,2.172,1415,2.172,1416,2.172,1417,2.172,1418,2.172,1419,2.172,1420,2.172,1421,2.172,1422,2.172,1423,2.837,1424,3.351,1425,4.447,1426,1.839,1427,4.786,1428,2.172,1429,4.091,1430,3.351,1431,1.839,1432,3.464,1433,4.208,1434,3.464,1435,3.051,1436,2.172,1437,4.091,1438,2.172,1439,2.172,1440,2.172,1441,1.839,1442,3.464,1443,1.839,1444,1.839,1445,2.837,1446,1.839,1447,1.839,1448,1.839,1449,2.172,1450,2.837,1451,2.172,1452,3.351,1453,2.172,1454,4.091,1455,2.172,1456,3.351,1457,4.599,1458,2.172,1459,2.172,1460,2.172,1461,1.839,1462,2.172,1463,2.172,1464,2.172,1465,3.351,1466,2.172,1467,2.172,1468,2.837,1469,2.172,1470,3.351,1471,2.172,1472,3.351,1473,4.091,1474,2.172,1475,2.172,1476,2.172,1477,2.172,1478,2.172,1479,2.172,1480,2.172,1481,2.172,1482,2.172,1483,2.172,1484,2.172,1485,2.172,1486,2.172,1487,2.172,1488,2.172,1489,2.172,1490,2.172,1491,2.172,1492,2.172,1493,2.172]],["title/injectables/ProfileService.html",[248,1.011,1388,2.266]],["body/injectables/ProfileService.html",[3,0.222,4,0.19,9,0.158,14,1.563,19,0.222,20,0.631,24,0.704,27,1.103,29,1.144,30,0.026,31,0.866,32,0.532,33,1.069,35,0.922,36,1.462,37,1.462,43,0.996,44,0.608,48,0.222,49,0.527,53,2.953,95,0.014,96,0.018,97,0.014,118,1.073,150,1.676,193,1.069,197,1.069,201,2.02,210,1.461,212,2.24,231,2.569,232,2.878,239,2.669,241,1.515,244,2.642,248,1.486,249,1.801,258,1.801,261,2.802,348,3.062,395,1.586,469,3.449,628,1.896,667,1.942,672,4.713,689,2.104,690,2.878,692,1.676,733,1.942,770,3.117,792,1.801,793,2.782,794,3.031,795,3.031,819,2.878,970,4.417,1014,5.015,1022,2.802,1051,3.181,1054,3.705,1364,2.292,1381,3.705,1388,3.33,1494,3.181,1495,5.566,1496,4.968,1497,4.968,1498,3.757,1499,4.968,1500,3.757,1501,4.968,1502,3.757,1503,4.968,1504,3.757,1505,3.757,1506,3.757,1507,3.757,1508,3.757,1509,3.757,1510,3.757]],["title/injectables/RegService.html",[112,1.893,248,1.011]],["body/injectables/RegService.html",[0,0.397,3,0.244,4,0.209,9,0.174,14,1.72,19,0.244,20,0.672,24,0.775,27,1.071,29,1.218,30,0.026,31,0.921,32,0.561,33,1.138,35,0.619,36,1.389,37,1.389,43,0.994,44,0.669,48,0.244,49,0.438,55,3.544,95,0.015,96,0.019,97,0.015,112,2.961,118,1.016,150,1.845,193,1.138,197,1.255,201,1.32,212,1.504,237,3.084,239,1.983,241,1.562,244,2.359,248,1.582,249,1.983,258,1.983,348,2.734,395,1.961,469,2.316,476,1.607,551,1.845,667,2.138,676,3.556,689,2.316,690,3.014,692,1.845,697,3.44,733,2.138,770,3.264,792,1.983,793,2.961,794,3.226,795,3.226,819,2.138,970,3.943,1047,3.084,1054,3.084,1056,3.501,1323,3.556,1511,3.501,1512,5.288,1513,5.288,1514,4.135,1515,4.135,1516,5.288,1517,4.135,1518,5.288,1519,4.135,1520,4.135,1521,4.135,1522,4.135]],["title/components/RegisterComponent.html",[0,0.325,89,0.888]],["body/components/RegisterComponent.html",[0,0.469,1,0.587,2,1.109,3,0.124,4,0.106,5,0.761,6,0.761,7,0.761,8,0.761,9,0.206,11,0.761,12,2.14,13,1.879,15,1.109,17,1.109,19,0.124,20,0.414,21,2.331,24,0.392,27,1.122,29,0.92,30,0.026,31,1.041,32,0.516,33,0.86,35,0.675,36,1.419,37,1.419,43,0.873,44,0.338,46,1.986,48,0.124,49,0.222,55,4.169,60,0.668,61,1.184,62,1.109,63,0.761,64,1.536,65,0.761,66,0.761,67,0.55,68,0.801,69,0.761,70,0.55,71,0.761,72,0.55,73,0.761,74,0.55,75,0.761,76,0.55,77,0.626,78,0.761,79,0.55,80,0.761,81,0.587,82,0.761,83,0.55,84,0.761,85,0.55,86,0.761,87,0.55,88,0.761,89,1.185,90,0.761,91,0.587,92,0.761,93,0.761,94,0.761,95,0.008,96,0.012,97,0.008,112,2.238,118,1.022,119,1.403,122,2.182,132,1.082,150,0.933,158,1.772,189,1.452,193,0.701,197,1.202,201,1.723,204,2.428,210,0.813,212,1.777,216,1.082,231,1.683,232,2.066,241,0.801,243,2.438,244,2.307,247,1.753,251,1.039,264,1.772,265,2.307,270,1.823,277,2.751,294,1.663,302,1.553,306,3.362,313,1.664,317,1.986,322,1.277,323,1.56,331,2.757,343,1.56,352,1.277,362,1.986,381,1.403,395,1.651,405,2.679,410,1.452,421,2.757,450,2.98,469,1.172,476,1.553,491,1.277,527,2.428,551,0.933,570,1.56,610,1.56,628,1.361,630,2.428,661,1.403,663,3.362,664,1.403,666,1.56,690,2.066,692,1.783,697,1.172,733,1.683,770,1.823,792,1.561,793,1.172,844,1.986,875,1.56,879,3.577,880,1.56,882,2.98,883,1.403,888,1.403,903,2.428,907,1.772,912,2.757,930,1.986,936,1.56,950,3.818,965,3.818,966,2.98,971,1.772,972,3.384,973,1.772,974,1.772,975,3.818,981,1.772,984,2.428,992,1.56,995,1.772,996,1.772,1005,3.362,1006,2.428,1007,3.384,1047,1.56,1165,1.56,1169,2.757,1300,4.856,1323,2.751,1327,2.757,1328,3.467,1329,2.428,1330,2.428,1364,1.277,1381,2.428,1425,2.757,1426,1.772,1427,2.757,1431,1.772,1432,2.757,1433,2.757,1434,1.772,1435,2.98,1441,1.772,1442,3.384,1443,2.757,1444,2.757,1445,2.757,1446,1.772,1447,1.772,1448,1.772,1450,2.757,1461,1.772,1523,1.772,1524,2.757,1525,3.256,1526,3.256,1527,3.996,1528,3.256,1529,3.256,1530,3.256,1531,4.509,1532,3.256,1533,3.256,1534,3.256,1535,3.996,1536,3.256,1537,3.256,1538,3.256,1539,4.509,1540,3.256,1541,2.093,1542,2.093,1543,2.093,1544,2.093,1545,2.093,1546,2.093,1547,2.093,1548,2.093,1549,2.093,1550,2.093,1551,2.093,1552,3.256,1553,2.093,1554,2.093,1555,2.093,1556,2.093,1557,2.093,1558,2.093,1559,3.256,1560,3.256,1561,3.256,1562,2.093,1563,2.093,1564,2.093,1565,2.093,1566,2.093,1567,2.093,1568,2.093,1569,2.093,1570,2.093,1571,2.093,1572,2.093,1573,2.093,1574,2.093,1575,2.093,1576,2.093,1577,2.093,1578,2.093,1579,2.093,1580,2.093,1581,2.093,1582,2.093,1583,2.093,1584,2.093,1585,2.093,1586,2.093,1587,2.093,1588,2.093,1589,2.093,1590,3.256,1591,2.093,1592,2.093,1593,2.093,1594,2.093,1595,2.093,1596,2.093,1597,2.093,1598,2.093,1599,2.093,1600,2.093,1601,3.256,1602,4.509,1603,3.256,1604,4.885,1605,3.256,1606,3.256,1607,3.256,1608,3.256,1609,2.093,1610,2.093,1611,2.093,1612,2.093,1613,2.093,1614,2.093,1615,2.093,1616,2.093,1617,2.093,1618,2.093,1619,3.256]],["title/interfaces/RenameFile.html",[266,0.778,776,2.063]],["body/interfaces/RenameFile.html",[3,0.299,4,0.256,9,0.284,19,0.299,20,0.762,30,0.025,32,0.551,35,1.022,48,0.299,95,0.018,96,0.022,97,0.018,247,2.481,266,1.168,267,2.11,776,3.657,1195,5.585,1196,5.585,1620,4.293]],["title/interfaces/RunFile.html",[266,0.778,507,1.893]],["body/interfaces/RunFile.html",[3,0.295,4,0.252,9,0.211,19,0.295,20,0.755,30,0.025,32,0.567,35,1.044,48,0.295,95,0.018,96,0.021,97,0.018,266,1.151,267,2.08,410,2.928,507,3.329,567,4.005,568,4.401,628,2.236,1621,4.233]],["title/interfaces/RunInput.html",[266,0.778,1077,2.063]],["body/interfaces/RunInput.html",[3,0.293,4,0.251,9,0.209,19,0.293,20,0.753,30,0.025,32,0.566,35,1.056,48,0.293,95,0.018,96,0.021,97,0.018,266,1.144,267,2.067,410,2.923,567,3.997,568,4.392,628,2.232,1077,3.613,1622,4.207]],["title/interfaces/RunOutput.html",[266,0.778,1623,2.266]],["body/interfaces/RunOutput.html",[3,0.305,4,0.261,9,0.218,19,0.305,20,0.77,30,0.025,32,0.523,35,0.963,48,0.305,95,0.019,96,0.022,97,0.019,247,2.501,266,1.19,267,2.149,412,4.949,1623,4.063,1624,4.374,1625,6.636]],["title/injectables/RunService.html",[248,1.011,1075,2.266]],["body/injectables/RunService.html",[3,0.221,4,0.189,9,0.158,14,1.556,19,0.221,20,0.629,24,0.701,27,1.072,29,1.279,30,0.026,31,0.968,32,0.531,33,1.195,35,1.01,36,1.301,37,1.301,43,0.995,44,0.605,48,0.221,49,0.397,95,0.013,96,0.018,97,0.013,118,0.863,150,1.668,193,1.066,197,1.066,201,1.581,213,3.022,214,3.022,215,3.022,216,2.561,239,2.375,243,3.022,248,1.482,249,1.793,258,1.793,322,3.388,380,3.167,395,1.581,410,1.668,420,3.022,476,1.925,492,2.561,507,2.773,551,1.668,628,2.014,667,1.934,676,3.388,689,2.094,690,3.056,692,2.209,697,3.444,725,3.694,728,3.32,733,1.934,770,3.11,780,4.713,792,1.793,793,2.773,794,3.022,795,3.022,801,4.194,802,3.167,807,3.022,809,3.167,1075,3.32,1077,3.607,1078,3.167,1116,4.194,1368,4.194,1423,4.194,1623,2.507,1626,3.167,1627,4.953,1628,4.953,1629,3.74,1630,4.953,1631,3.74,1632,3.74,1633,4.953,1634,4.953,1635,4.953,1636,3.74,1637,3.74]],["title/components/TimerComponent.html",[0,0.325,91,0.948]],["body/components/TimerComponent.html",[0,0.506,1,0.695,2,1.261,3,0.146,4,0.125,5,0.901,6,0.901,7,0.901,8,0.901,9,0.104,11,0.901,12,2.209,13,1.94,15,1.261,17,1.261,19,0.146,20,0.471,21,3.418,24,0.694,27,1.152,29,1.133,30,0.026,31,0.857,32,0.55,33,0.797,35,0.555,36,1.293,37,1.293,43,0.717,44,0.401,48,0.146,49,0.263,60,0.791,61,1.347,62,1.676,63,0.901,64,1.676,65,0.901,66,0.901,67,0.651,68,0.911,69,0.901,70,0.651,71,0.901,72,0.651,73,0.901,74,0.651,75,0.901,76,0.651,77,0.741,78,0.901,79,0.651,80,0.901,81,0.695,82,0.901,83,0.651,84,0.901,85,0.651,86,0.901,87,0.651,88,0.901,89,0.651,90,0.901,91,1.38,92,2.142,93,0.901,94,0.901,95,0.009,96,0.013,97,0.009,118,0.773,173,2.074,193,0.797,197,1.059,210,0.963,212,1.613,231,1.915,232,2.544,251,1.182,260,2.939,265,1.105,273,3.002,276,2.762,291,2.762,292,3.136,294,1.845,302,1.913,313,1.676,395,1.182,410,2.349,461,4.85,466,2.762,492,2.544,495,2.762,505,4.166,527,4.489,549,2.098,550,2.098,551,1.978,575,2.098,576,2.098,577,2.098,653,2.098,870,3.307,871,1.847,873,1.847,874,1.847,885,3.136,888,2.482,1088,1.847,1352,3.136,1435,1.847,1638,2.098,1639,3.703,1640,3.703,1641,3.703,1642,3.703,1643,3.703,1644,3.703,1645,3.703,1646,3.703,1647,3.703,1648,3.703,1649,3.703,1650,3.703,1651,3.703,1652,3.703,1653,4.435,1654,3.703,1655,5.267,1656,4.435,1657,4.435,1658,5.267,1659,4.435,1660,4.435,1661,5.267,1662,4.435,1663,5.267,1664,4.921,1665,3.703,1666,4.921,1667,3.703,1668,4.435,1669,2.477,1670,3.703,1671,2.477,1672,2.477,1673,3.703,1674,2.477,1675,2.477,1676,2.477,1677,2.477,1678,2.477,1679,2.477,1680,3.703,1681,2.477,1682,2.477,1683,3.703,1684,2.477,1685,4.921,1686,2.477,1687,2.477,1688,2.477,1689,2.477,1690,2.477,1691,4.435,1692,2.477,1693,2.477,1694,2.477,1695,2.477,1696,2.477,1697,2.477,1698,2.477,1699,2.477,1700,2.098,1701,2.477,1702,2.477,1703,2.477,1704,4.921,1705,4.921,1706,4.921,1707,2.477,1708,4.435,1709,2.477,1710,3.703,1711,2.477,1712,2.477,1713,2.477,1714,2.477,1715,2.477,1716,3.703,1717,3.703,1718,3.703,1719,2.477,1720,2.477,1721,2.477,1722,2.477,1723,2.477,1724,2.477]],["title/interceptors/TokenInterceptorService.html",[113,2.063,859,2.266]],["body/interceptors/TokenInterceptorService.html",[3,0.227,4,0.194,9,0.162,14,1.602,19,0.227,24,1.055,26,1.401,27,0.88,29,1.163,30,0.026,31,0.88,32,0.332,33,1.087,43,0.911,44,0.623,45,1.846,47,2.872,48,0.227,49,0.634,54,2.349,95,0.014,96,0.018,97,0.014,113,3.081,118,1.11,150,1.718,164,4.008,193,1.087,197,0.829,201,1.229,212,1.837,221,2.827,241,0.948,248,1.511,249,1.846,251,1.612,252,4.275,257,3.437,258,1.846,330,3.081,348,3.21,468,4.63,473,4.77,477,3.081,692,2.252,812,2.581,846,3.261,859,3.385,880,2.872,989,2.581,1006,2.872,1041,3.261,1042,4.275,1197,3.261,1364,2.349,1468,4.275,1725,3.851,1726,4.77,1727,3.261,1728,5.049,1729,3.851,1730,6.723,1731,3.851,1732,5.049,1733,5.049,1734,3.851,1735,3.851,1736,5.049,1737,5.049,1738,5.634,1739,5.634,1740,5.049,1741,5.049,1742,5.049,1743,5.049,1744,3.851,1745,5.634,1746,3.851,1747,3.851,1748,3.851,1749,3.851,1750,3.851,1751,3.851,1752,3.851,1753,3.851,1754,3.851,1755,3.851,1756,3.851,1757,3.851,1758,3.851,1759,3.851,1760,3.851,1761,3.851,1762,3.851,1763,3.851,1764,3.851,1765,3.851]],["title/interfaces/User.html",[241,0.832,266,0.778]],["body/interfaces/User.html",[3,0.304,4,0.26,9,0.217,19,0.304,20,0.768,30,0.024,32,0.522,35,0.992,48,0.304,95,0.018,96,0.022,97,0.018,118,1.054,241,1.488,266,1.392,267,2.14,628,2.257,807,3.139,966,4.043,1022,3.837,1339,3.837,1766,4.356,1767,3.837]],["title/coverage.html",[1768,3.918]],["body/coverage.html",[0,0.652,1,1.015,9,0.204,10,3.064,26,1.316,30,0.026,32,0.312,49,0.579,53,1.735,67,0.951,68,0.891,70,0.951,72,0.951,74,0.951,76,0.951,79,0.951,81,1.015,83,0.951,85,0.951,87,0.951,89,0.951,91,1.015,95,0.013,96,0.017,97,0.013,112,2.027,113,2.208,159,2.208,162,2.426,166,2.426,168,2.426,190,2.699,192,3.064,227,2.699,229,3.064,241,0.891,248,1.873,266,1.515,268,3.064,274,3.614,275,3.064,283,1.871,310,1.735,395,1.155,413,3.064,441,2.426,457,3.064,483,3.064,507,2.027,668,3.064,746,3.064,749,3.064,750,3.064,766,3.064,768,2.426,769,3.064,776,2.208,810,3.064,833,3.614,859,2.426,892,3.064,930,4.167,936,2.699,940,4.103,942,3.064,967,4.94,1010,3.064,1066,2.699,1067,4.103,1075,2.426,1077,2.208,1153,3.064,1323,2.208,1324,3.064,1349,3.064,1378,3.064,1380,3.064,1388,2.426,1494,3.064,1511,3.064,1523,3.064,1620,3.064,1621,3.064,1622,3.064,1623,2.426,1624,3.064,1626,3.064,1638,3.064,1726,3.064,1727,3.064,1766,3.064,1768,3.064,1769,3.619,1770,3.619,1771,5.463,1772,3.619,1773,4.846,1774,4.846,1775,3.619,1776,3.619,1777,3.619,1778,3.619,1779,4.846,1780,3.619,1781,3.619,1782,3.619,1783,5.463,1784,4.846,1785,3.619,1786,3.064,1787,3.619,1788,5.835,1789,5.463,1790,3.619,1791,3.619,1792,3.619,1793,3.619,1794,3.619,1795,3.619,1796,3.619,1797,3.619,1798,4.846,1799,4.846,1800,3.619,1801,3.619,1802,3.619,1803,3.619,1804,3.619,1805,3.619,1806,3.619,1807,3.619,1808,3.064,1809,5.835,1810,3.064,1811,4.103,1812,3.064,1813,3.064,1814,3.619]],["title/dependencies.html",[101,2.483,1815,2.817]],["body/dependencies.html",[30,0.026,44,0.758,95,0.017,96,0.021,97,0.017,101,2.858,103,3.494,126,4.263,127,3.488,132,2.422,173,3.455,174,4.84,175,3.967,176,3.967,178,3.967,179,3.967,210,1.821,551,2.09,553,3.494,554,3.494,1816,4.685,1817,4.685,1818,4.685,1819,5.798,1820,4.685,1821,5.717,1822,4.685,1823,4.685,1824,4.685,1825,4.685,1826,4.685,1827,5.717,1828,4.685,1829,4.685,1830,5.717,1831,4.685,1832,4.685,1833,4.685,1834,4.685,1835,4.685,1836,4.685,1837,4.685,1838,4.685,1839,4.685,1840,4.685,1841,4.685,1842,4.685,1843,4.685,1844,4.685]],["title/index.html",[19,0.166,1845,2.817,1846,2.817]],["body/index.html",[0,0.588,4,0.232,13,1.378,30,0.02,31,0.803,38,3.9,46,3.452,95,0.017,96,0.02,97,0.017,116,2.81,173,3.429,200,3.9,324,3.452,330,3.736,335,5.185,350,3.792,352,2.81,384,3.896,395,1.47,418,3.792,492,2.382,660,4.889,841,3.435,992,3.435,1025,3.435,1226,3.9,1296,4.79,1524,3.9,1700,3.9,1819,3.9,1847,4.607,1848,6.124,1849,4.607,1850,4.607,1851,6.76,1852,4.607,1853,4.607,1854,4.607,1855,4.607,1856,4.607,1857,4.607,1858,4.607,1859,6.555,1860,4.607,1861,4.607,1862,4.607,1863,3.9,1864,5.658,1865,6.387,1866,4.607,1867,4.607,1868,4.607,1869,6.124,1870,4.607,1871,4.607,1872,4.607,1873,4.607]],["title/modules.html",[100,2.823]],["body/modules.html",[30,0.022,95,0.02,96,0.022,97,0.02,99,3.646,100,3.319,111,3.319,127,3.319,842,4.606,1874,5.44,1875,6.245,1876,5.44,1877,5.44]],["title/overview.html",[1878,3.918]],["body/overview.html",[1,1.86,2,1.437,26,2.14,30,0.025,60,1.347,67,1.546,70,1.546,72,1.546,74,1.546,76,1.546,79,1.546,81,1.65,83,1.546,85,1.546,87,1.546,89,1.546,91,1.65,95,0.015,96,0.019,97,0.015,98,2.575,99,4.818,100,2.575,101,2.575,102,3.573,103,3.147,104,3.573,105,3.147,106,3.573,107,3.573,108,3.573,109,3.573,110,3.573,111,3.59,112,3.295,113,3.59,114,4.535,115,3.573,116,2.575,191,2.829,208,2.575,227,3.147,267,1.756,439,2.575,440,3.147,441,2.829,667,2.182,1095,3.573,1786,3.573,1878,3.573,1879,4.22,1880,4.22]],["title/routes.html",[208,2.823]],["body/routes.html",[30,0.023,95,0.02,96,0.023,97,0.02,208,3.386]],["title/miscellaneous/variables.html",[1767,3.035,1881,2.385]],["body/miscellaneous/variables.html",[19,0.296,30,0.025,32,0.568,36,1.67,37,1.67,95,0.018,96,0.021,97,0.018,189,2.658,265,2.239,792,2.857,833,4.902,1767,3.743,1808,4.25,1810,4.25,1811,4.25,1812,5.045,1813,5.045,1863,5.045,1881,4.25,1882,5.959,1883,5.019,1884,5.019,1885,5.019,1886,5.019,1887,5.019]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":930,"title":{},"body":{"components/LoadingComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1844,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["0.2em",{"_index":1489,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.2s",{"_index":1483,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.3em",{"_index":1473,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.5em",{"_index":1476,"title":{},"body":{"components/ProfileComponent.html":{}}}],["0.8em",{"_index":1720,"title":{},"body":{"components/TimerComponent.html":{}}}],["0/1",{"_index":1809,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1439,"title":{},"body":{"components/ProfileComponent.html":{}}}],["08",{"_index":1613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1",{"_index":439,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"overview.html":{}}}],["1.2em",{"_index":1474,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1.3.0",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["1.4.12",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["1.5px",{"_index":665,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["1.5rem",{"_index":1610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["1.8",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["1/11",{"_index":1787,"title":{},"body":{"coverage.html":{}}}],["1/19",{"_index":1807,"title":{},"body":{"coverage.html":{}}}],["1/22",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1789,"title":{},"body":{"coverage.html":{}}}],["1/31",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1801,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1799,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":1803,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1880,"title":{},"body":{"overview.html":{}}}],["10.1.4",{"_index":1819,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.2.6",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":332,"title":{},"body":{"components/CompCreateComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{}}}],["100%!important",{"_index":1467,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1000",{"_index":1683,"title":{},"body":{"components/TimerComponent.html":{}}}],["104",{"_index":1612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["11",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1802,"title":{},"body":{"coverage.html":{}}}],["125",{"_index":1449,"title":{},"body":{"components/ProfileComponent.html":{}}}],["13",{"_index":1879,"title":{},"body":{"overview.html":{}}}],["14",{"_index":595,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["15",{"_index":939,"title":{},"body":{"components/LoadingComponent.html":{}}}],["15px",{"_index":1431,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["16",{"_index":1798,"title":{},"body":{"coverage.html":{}}}],["163a939a7929",{"_index":1097,"title":{},"body":{"classes/NavigationModel.html":{}}}],["16em",{"_index":908,"title":{},"body":{"components/LoadingComponent.html":{}}}],["16px",{"_index":587,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["1a202c",{"_index":1428,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1c9ee9",{"_index":1482,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1cm",{"_index":1475,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1em",{"_index":1724,"title":{},"body":{"components/TimerComponent.html":{}}}],["1px",{"_index":1435,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["1rem",{"_index":1453,"title":{},"body":{"components/ProfileComponent.html":{}}}],["1rem!important",{"_index":1462,"title":{},"body":{"components/ProfileComponent.html":{}}}],["2",{"_index":440,"title":{},"body":{"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{},"overview.html":{}}}],["2.0.0",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["2.4.0",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1796,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["20/50",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["2014",{"_index":656,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["20em",{"_index":904,"title":{},"body":{"components/LoadingComponent.html":{}}}],["20px",{"_index":1426,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["21s",{"_index":917,"title":{},"body":{"components/LoadingComponent.html":{}}}],["24",{"_index":1680,"title":{},"body":{"components/TimerComponent.html":{}}}],["25",{"_index":940,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["25rem",{"_index":1451,"title":{},"body":{"components/ProfileComponent.html":{}}}],["28",{"_index":1795,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":1438,"title":{},"body":{"components/ProfileComponent.html":{}}}],["2rem",{"_index":1616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["3",{"_index":441,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["3.1.0",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["3/12",{"_index":1797,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1465,"title":{},"body":{"components/ProfileComponent.html":{}}}],["33",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["3852f21a4ea0",{"_index":1652,"title":{},"body":{"components/TimerComponent.html":{}}}],["3bb7ff",{"_index":1485,"title":{},"body":{"components/ProfileComponent.html":{}}}],["3px",{"_index":1436,"title":{},"body":{"components/ProfileComponent.html":{}}}],["4",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["4.0.6",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["4.5.3",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["4/12",{"_index":1794,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":936,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["42",{"_index":1804,"title":{},"body":{"coverage.html":{}}}],["4b4b4b",{"_index":915,"title":{},"body":{"components/LoadingComponent.html":{}}}],["4s",{"_index":921,"title":{},"body":{"components/LoadingComponent.html":{}}}],["5",{"_index":1806,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["5/8",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":907,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegisterComponent.html":{}}}],["50px",{"_index":1619,"title":{},"body":{"components/RegisterComponent.html":{}}}],["6",{"_index":1095,"title":{},"body":{"classes/NavigationModel.html":{},"overview.html":{}}}],["6.6.0",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1685,"title":{},"body":{"components/TimerComponent.html":{}}}],["62",{"_index":1792,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":931,"title":{},"body":{"components/LoadingComponent.html":{}}}],["66",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":655,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["75",{"_index":933,"title":{},"body":{"components/LoadingComponent.html":{}}}],["8/19",{"_index":1805,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":934,"title":{},"body":{"components/LoadingComponent.html":{}}}],["86",{"_index":937,"title":{},"body":{"components/LoadingComponent.html":{}}}],["8px",{"_index":1457,"title":{},"body":{"components/ProfileComponent.html":{}}}],["9",{"_index":1786,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9/13",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":941,"title":{},"body":{"components/LoadingComponent.html":{}}}],["92",{"_index":935,"title":{},"body":{"components/LoadingComponent.html":{}}}],["96",{"_index":938,"title":{},"body":{"components/LoadingComponent.html":{}}}],["_login",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_login:loginservice",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{}}}],["_loginserv",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["_loginserv:loginservice",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["_router",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["_router:router",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{}}}],["a.button3",{"_index":1470,"title":{},"body":{"components/ProfileComponent.html":{}}}],["a.button3:hover",{"_index":1484,"title":{},"body":{"components/ProfileComponent.html":{}}}],["absolute",{"_index":905,"title":{},"body":{"components/LoadingComponent.html":{}}}],["accept",{"_index":289,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["accesible",{"_index":349,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["access",{"_index":725,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["accessible",{"_index":814,"title":{},"body":{"components/HomeComponent.html":{}}}],["accumulates",{"_index":321,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["accurate",{"_index":292,"title":{},"body":{"components/CompCreateComponent.html":{},"components/TimerComponent.html":{}}}],["ace",{"_index":553,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"dependencies.html":{}}}],["ace.ace.editor",{"_index":529,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.config.set(\"fontsize",{"_index":586,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.config.set('basepath",{"_index":585,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.edit(this.editor.nativeelement",{"_index":604,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.require('ace/ext/beautify",{"_index":590,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["ace.require('ace/ext/language_tools",{"_index":588,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["aceeditor",{"_index":489,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["acess",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activate",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activate/deactivate",{"_index":1561,"title":{},"body":{"components/RegisterComponent.html":{}}}],["activatedroute",{"_index":513,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{}}}],["activatedroute,router",{"_index":552,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["actual_component",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["adapter",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["add",{"_index":846,"title":{},"body":{"components/HomeComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["address",{"_index":1140,"title":{},"body":{"classes/NavigationModel.html":{}}}],["adds",{"_index":1178,"title":{},"body":{"classes/NavigationModel.html":{}}}],["afterviewinit",{"_index":485,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["again",{"_index":450,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["agrawal",{"_index":866,"title":{},"body":{"components/HomeComponent.html":{}}}],["al",{"_index":1185,"title":{},"body":{"classes/NavigationModel.html":{}}}],["alert(\"an",{"_index":1136,"title":{},"body":{"classes/NavigationModel.html":{}}}],["alert(\"competition",{"_index":619,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["alert(\"invalid",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(\"something",{"_index":632,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["alert(response",{"_index":404,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["align",{"_index":661,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["allocatetimeunits",{"_index":1665,"title":{},"body":{"components/TimerComponent.html":{}}}],["allocatetimeunits(timedifference",{"_index":1673,"title":{},"body":{"components/TimerComponent.html":{}}}],["allowed",{"_index":490,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["allows",{"_index":1100,"title":{},"body":{"classes/NavigationModel.html":{}}}],["along",{"_index":281,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{}}}],["alongside",{"_index":325,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["ambiance",{"_index":560,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["angular",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/TimerComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular's",{"_index":285,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["angular/animations",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["angular/compiler",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/datepicker",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{}}}],["angular/material/form",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":920,"title":{},"body":{"components/LoadingComponent.html":{}}}],["another",{"_index":328,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{}}}],["api",{"_index":476,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["apis",{"_index":1392,"title":{},"body":{"components/ProfileComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["app.component",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appended",{"_index":1757,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["application/json",{"_index":1563,"title":{},"body":{"components/RegisterComponent.html":{}}}],["appmodule",{"_index":99,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":190,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":422,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["approutingmodule",{"_index":111,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["april",{"_index":654,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["arial",{"_index":1719,"title":{},"body":{"components/TimerComponent.html":{}}}],["arora",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{}}}],["artifacts",{"_index":1860,"title":{},"body":{"index.html":{}}}],["aryan",{"_index":865,"title":{},"body":{"components/HomeComponent.html":{}}}],["auth.guard",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authenticate",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{}}}],["authenticated",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["authentication",{"_index":1041,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["authguard",{"_index":159,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authization",{"_index":1756,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authorization",{"_index":1763,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authorized",{"_index":1759,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["auto",{"_index":1452,"title":{},"body":{"components/ProfileComponent.html":{}}}],["autocomplete",{"_index":1092,"title":{},"body":{"classes/NavigationModel.html":{}}}],["automatically",{"_index":1855,"title":{},"body":{"index.html":{}}}],["available",{"_index":1877,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":1604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["b2b2b2",{"_index":932,"title":{},"body":{"components/LoadingComponent.html":{}}}],["backend",{"_index":844,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["background",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["bar",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{}}}],["basic",{"_index":894,"title":{},"body":{"components/LoadingComponent.html":{},"classes/NavigationModel.html":{}}}],["basically",{"_index":1325,"title":{},"body":{"classes/NewUser.html":{}}}],["basiceditoroptions",{"_index":591,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["beautify",{"_index":566,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["beautifycontents",{"_index":500,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["being",{"_index":622,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["bg",{"_index":1463,"title":{},"body":{"components/ProfileComponent.html":{}}}],["bgimg",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{}}}],["block",{"_index":1472,"title":{},"body":{"components/ProfileComponent.html":{}}}],["body",{"_index":491,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["body,h1,h2,h3,h4,h5,h6",{"_index":869,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["boolean",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunOutput.html":{}}}],["bootstrap",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":663,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["bottom",{"_index":1461,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["box",{"_index":1433,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["break",{"_index":1165,"title":{},"body":{"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["browse",{"_index":1875,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":202,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["buffer",{"_index":902,"title":{},"body":{"components/LoadingComponent.html":{}}}],["build",{"_index":1859,"title":{},"body":{"index.html":{}}}],["builds",{"_index":554,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"dependencies.html":{}}}],["builds/src",{"_index":555,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["button",{"_index":317,"title":{},"body":{"components/CompCreateComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["c",{"_index":659,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{}}}],["c++,python,ruby",{"_index":836,"title":{},"body":{"components/HomeComponent.html":{}}}],["c_cpp",{"_index":539,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["call",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/RegService.html":{}}}],["called",{"_index":315,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["calls",{"_index":477,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["canactivate",{"_index":220,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate():boolean",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancel",{"_index":764,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["capabilities",{"_index":1093,"title":{},"body":{"classes/NavigationModel.html":{}}}],["capability",{"_index":1692,"title":{},"body":{"components/TimerComponent.html":{}}}],["card",{"_index":1432,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["case",{"_index":1743,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["center",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["change",{"_index":1856,"title":{},"body":{"index.html":{}}}],["chaos",{"_index":561,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["characters",{"_index":333,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["check",{"_index":1872,"title":{},"body":{"index.html":{}}}],["checking",{"_index":462,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["checkrunning",{"_index":501,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["child",{"_index":424,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["children",{"_index":1068,"title":{},"body":{"classes/NavigationModel.html":{}}}],["choose",{"_index":1549,"title":{},"body":{"components/RegisterComponent.html":{}}}],["chrome",{"_index":562,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["clarifications",{"_index":484,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["class",{"_index":49,"title":{"classes/AppPage.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["classes",{"_index":191,"title":{},"body":{"classes/AppPage.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"overview.html":{}}}],["clears",{"_index":326,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["cli",{"_index":1848,"title":{},"body":{"index.html":{}}}],["click",{"_index":1548,"title":{},"body":{"components/RegisterComponent.html":{}}}],["clip",{"_index":1448,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["clone",{"_index":1753,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["cloned",{"_index":1755,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["closed",{"_index":1251,"title":{},"body":{"classes/NavigationModel.html":{}}}],["cluster_appmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cobalt",{"_index":563,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["code",{"_index":492,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"index.html":{}}}],["coding",{"_index":830,"title":{},"body":{"components/HomeComponent.html":{}}}],["collect",{"_index":1557,"title":{},"body":{"components/RegisterComponent.html":{}}}],["color",{"_index":1427,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["column",{"_index":1444,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["comment",{"_index":1308,"title":{},"body":{"classes/NavigationModel.html":{}}}],["comp",{"_index":68,"title":{"interfaces/Comp.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{}}}],["comp.problem",{"_index":582,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["comp.problem.substr(0,100",{"_index":453,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["comp.title",{"_index":452,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["compatible",{"_index":837,"title":{},"body":{"components/HomeComponent.html":{}}}],["compcreatecomponent",{"_index":67,"title":{"components/CompCreateComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["compdashboardcomponent",{"_index":70,"title":{"components/CompDashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["competition",{"_index":486,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["competition'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["competition.component.html",{"_index":488,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["competition.component.scss",{"_index":487,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["competition.service",{"_index":374,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{}}}],["competition/:id",{"_index":223,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["competition/competition.component",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["competitioncomponent",{"_index":72,"title":{"components/CompetitionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["competitions",{"_index":417,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["competitionservice",{"_index":310,"title":{"injectables/CompetitionService.html":{}},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["compile",{"_index":1423,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["compiling",{"_index":1634,"title":{},"body":{"injectables/RunService.html":{}}}],["completely",{"_index":472,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"overview.html":{}}}],["components/datetime",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["components/moment",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["connection",{"_index":480,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["console.log(`dialog",{"_index":1127,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(console.error",{"_index":406,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["console.log(dir",{"_index":1168,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(err",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["console.log(error",{"_index":637,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["console.log(file",{"_index":1210,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(input",{"_index":809,"title":{},"body":{"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["console.log(res",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(send",{"_index":1316,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(this.dirk",{"_index":1269,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(this.list",{"_index":1243,"title":{},"body":{"classes/NavigationModel.html":{}}}],["console.log(url",{"_index":803,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["console.log({'username':username",{"_index":1509,"title":{},"body":{"injectables/ProfileService.html":{}}}],["const",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":761,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["constructor(_login",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(_loginserv",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_router",{"_index":1669,"title":{},"body":{"components/TimerComponent.html":{}}}],["constructor(cpservice",{"_index":431,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/PastcontestComponent.html":{}}}],["constructor(data",{"_index":754,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["constructor(fb",{"_index":307,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["constructor(http",{"_index":689,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["constructor(injector",{"_index":1729,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["constructor(logserv",{"_index":951,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(private",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(public",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(regserv",{"_index":1541,"title":{},"body":{"components/RegisterComponent.html":{}}}],["constructor(username",{"_index":1331,"title":{},"body":{"classes/NewUser.html":{}}}],["constructor(uservice",{"_index":1387,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructs",{"_index":1565,"title":{},"body":{"components/RegisterComponent.html":{}}}],["containing",{"_index":1139,"title":{},"body":{"classes/NavigationModel.html":{}}}],["content",{"_index":204,"title":{},"body":{"classes/AppPage.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["contents",{"_index":1249,"title":{},"body":{"classes/NavigationModel.html":{}}}],["contest",{"_index":283,"title":{"interfaces/Contest.html":{}},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"interfaces/Contest.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["contestpassed",{"_index":679,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["contestpassed(id",{"_index":693,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["contests",{"_index":1350,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["context",{"_index":1812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["corresponding",{"_index":1391,"title":{},"body":{"components/ProfileComponent.html":{}}}],["countdown",{"_index":1651,"title":{},"body":{"components/TimerComponent.html":{}}}],["cout",{"_index":1125,"title":{},"body":{"classes/NavigationModel.html":{}}}],["cover",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1768,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpservice",{"_index":309,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{}}}],["create",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["create'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["create.component",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["create.component.html",{"_index":296,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.scss",{"_index":295,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts",{"_index":275,"title":{},"body":{"components/CompCreateComponent.html":{},"coverage.html":{}}}],["create.component.ts:20",{"_index":368,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:21",{"_index":371,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:23",{"_index":363,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:25",{"_index":369,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:26",{"_index":311,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:29",{"_index":361,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:45",{"_index":355,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:53",{"_index":312,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:59",{"_index":340,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:70",{"_index":354,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create.component.ts:88",{"_index":314,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["create/comp",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"coverage.html":{}}}],["created",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["creates",{"_index":1021,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{}}}],["creation",{"_index":1108,"title":{},"body":{"classes/NavigationModel.html":{}}}],["credentials",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{},"classes/NewUser.html":{},"components/RegisterComponent.html":{}}}],["currentfile",{"_index":1115,"title":{},"body":{"classes/NavigationModel.html":{}}}],["currently",{"_index":1031,"title":{},"body":{"injectables/LoginService.html":{}}}],["cycle1",{"_index":924,"title":{},"body":{"components/LoadingComponent.html":{}}}],["cycle2",{"_index":926,"title":{},"body":{"components/LoadingComponent.html":{}}}],["cycle3",{"_index":928,"title":{},"body":{"components/LoadingComponent.html":{}}}],["cyclic",{"_index":1732,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["dashboard",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["dashboard'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["dashboard.component",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboard.component.html",{"_index":426,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.scss",{"_index":425,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":413,"title":{},"body":{"components/CompDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:22",{"_index":438,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:23",{"_index":436,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:25",{"_index":435,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:26",{"_index":437,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:27",{"_index":434,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:28",{"_index":432,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard.component.ts:34",{"_index":433,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["dashboard/comp",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompDashboardComponent.html":{},"coverage.html":{}}}],["data",{"_index":344,"title":{},"body":{"components/CompCreateComponent.html":{},"components/EditorDialogComponent.html":{}}}],["data.image",{"_index":1407,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data.text",{"_index":763,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["data.text2",{"_index":762,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["data.user_fk",{"_index":1409,"title":{},"body":{"components/ProfileComponent.html":{}}}],["database",{"_index":1203,"title":{},"body":{"classes/NavigationModel.html":{}}}],["date",{"_index":290,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["date().gettime",{"_index":1695,"title":{},"body":{"components/TimerComponent.html":{}}}],["date(this.endsat",{"_index":1715,"title":{},"body":{"components/TimerComponent.html":{}}}],["date_joined",{"_index":1384,"title":{},"body":{"components/ProfileComponent.html":{}}}],["datetime",{"_index":1641,"title":{},"body":{"components/TimerComponent.html":{}}}],["day(s",{"_index":1716,"title":{},"body":{"components/TimerComponent.html":{}}}],["daystodday",{"_index":1655,"title":{},"body":{"components/TimerComponent.html":{}}}],["ddate",{"_index":1656,"title":{},"body":{"components/TimerComponent.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declared",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["decode",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["decoration",{"_index":1478,"title":{},"body":{"components/ProfileComponent.html":{}}}],["decorator",{"_index":1089,"title":{},"body":{"classes/NavigationModel.html":{}}}],["decorators",{"_index":365,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{}}}],["default",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":954,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["delete",{"_index":847,"title":{},"body":{"components/HomeComponent.html":{}}}],["deleted",{"_index":1172,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefile",{"_index":772,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefile(file",{"_index":1279,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefile(id",{"_index":779,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefilestruc(table",{"_index":1222,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefolder",{"_index":773,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{}}}],["deletefolder(folder",{"_index":1283,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletefolder(username",{"_index":782,"title":{},"body":{"injectables/FileService.html":{}}}],["deletefolderstruc(table",{"_index":1173,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletes",{"_index":1034,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["deletestructure(table",{"_index":1167,"title":{},"body":{"classes/NavigationModel.html":{}}}],["deletion",{"_index":1109,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dependancy",{"_index":1733,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["dependencies",{"_index":101,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"classes/NavigationModel.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["details",{"_index":819,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{}}}],["determined",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dev",{"_index":1852,"title":{},"body":{"index.html":{}}}],["development",{"_index":1850,"title":{},"body":{"index.html":{}}}],["dhruv",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["dialog",{"_index":751,"title":{},"body":{"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{}}}],["dialog'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["dialog.component",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"classes/NavigationModel.html":{}}}],["dialog.component.html",{"_index":753,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.scss",{"_index":752,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.ts",{"_index":750,"title":{},"body":{"components/EditorDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:11",{"_index":758,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":756,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog.component.ts:9",{"_index":755,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["dialog/editor",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{},"coverage.html":{}}}],["dir",{"_index":1154,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dir.splice(1",{"_index":1162,"title":{},"body":{"classes/NavigationModel.html":{}}}],["direct",{"_index":1101,"title":{},"body":{"classes/NavigationModel.html":{}}}],["direction",{"_index":1443,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["directive",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["directives",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1858,"title":{},"body":{"index.html":{}}}],["directory",{"_index":841,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["dirk",{"_index":780,"title":{},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["dirs",{"_index":1211,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dirs,file",{"_index":1242,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dirs,this.dirk",{"_index":1261,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dirs.splice(1",{"_index":1213,"title":{},"body":{"classes/NavigationModel.html":{}}}],["disabled",{"_index":358,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["display",{"_index":1381,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{}}}],["displayed",{"_index":337,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["displays",{"_index":1352,"title":{},"body":{"components/PastcontestComponent.html":{},"components/TimerComponent.html":{}}}],["dist",{"_index":1861,"title":{},"body":{"index.html":{}}}],["django",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["done",{"_index":765,"title":{},"body":{"components/EditorDialogComponent.html":{},"components/PastcontestComponent.html":{}}}],["drk",{"_index":1284,"title":{},"body":{"classes/NavigationModel.html":{}}}],["drk).subscribe(err",{"_index":1287,"title":{},"body":{"classes/NavigationModel.html":{}}}],["dynamic",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1304,"title":{},"body":{"classes/NavigationModel.html":{}}}],["e15241",{"_index":1440,"title":{},"body":{"components/ProfileComponent.html":{}}}],["e2e",{"_index":1868,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":192,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":199,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":196,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e8f0",{"_index":1430,"title":{},"body":{"components/ProfileComponent.html":{}}}],["e5e9f2",{"_index":1615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ease",{"_index":918,"title":{},"body":{"components/LoadingComponent.html":{}}}],["easy",{"_index":346,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["editfile(table",{"_index":1225,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editfolder(table",{"_index":1180,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editings",{"_index":1138,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editor",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["editor'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["editor.component.html",{"_index":1112,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editor.component.scss",{"_index":1113,"title":{},"body":{"classes/NavigationModel.html":{}}}],["editor/editor.component",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["editorbeautify",{"_index":493,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["editorcomponent",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editordialogcomponent",{"_index":76,"title":{"components/EditorDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editoroptions",{"_index":601,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["element",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["element(by.css('app",{"_index":203,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":364,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["email",{"_index":1328,"title":{},"body":{"classes/NewUser.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["email:string",{"_index":1338,"title":{},"body":{"classes/NewUser.html":{}}}],["empty",{"_index":1169,"title":{},"body":{"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["enablebasicautocompletion",{"_index":599,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["enableliveautocompletion",{"_index":600,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["end",{"_index":384,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["endpoint",{"_index":1635,"title":{},"body":{"injectables/RunService.html":{}}}],["endpoints",{"_index":727,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{}}}],["endsat",{"_index":1668,"title":{},"body":{"components/TimerComponent.html":{}}}],["endtime",{"_index":269,"title":{},"body":{"interfaces/Comp.html":{},"components/CompetitionComponent.html":{}}}],["english/implement",{"_index":1650,"title":{},"body":{"components/TimerComponent.html":{}}}],["entrycomponents",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":833,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":405,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["error",{"_index":631,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["errormessage",{"_index":1529,"title":{},"body":{"components/RegisterComponent.html":{}}}],["errors",{"_index":482,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["essential",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{}}}],["essentially",{"_index":276,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["event",{"_index":527,"title":{},"body":{"components/CompetitionComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["event.target",{"_index":644,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["execute",{"_index":1296,"title":{},"body":{"classes/NavigationModel.html":{},"index.html":{}}}],["executed",{"_index":1246,"title":{},"body":{"classes/NavigationModel.html":{}}}],["execution",{"_index":1368,"title":{},"body":{"components/PastcontestComponent.html":{},"injectables/RunService.html":{}}}],["existing",{"_index":1193,"title":{},"body":{"classes/NavigationModel.html":{}}}],["expected",{"_index":411,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["expiration",{"_index":1697,"title":{},"body":{"components/TimerComponent.html":{}}}],["expired",{"_index":620,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["expires",{"_index":1645,"title":{},"body":{"components/TimerComponent.html":{}}}],["explanatory",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["export",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["exports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extraeditoroptions",{"_index":598,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["f.file",{"_index":1223,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f.filename",{"_index":1257,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f.isfile",{"_index":1175,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f.title",{"_index":1176,"title":{},"body":{"classes/NavigationModel.html":{}}}],["f2f3f8",{"_index":1609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["facilitate",{"_index":345,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["fail",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":871,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["fast",{"_index":816,"title":{},"body":{"components/HomeComponent.html":{}}}],["fb",{"_index":297,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["fd",{"_index":1586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["fd.append('image',this.myfile,this.myfile.name",{"_index":1587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["features",{"_index":822,"title":{},"body":{"components/HomeComponent.html":{}}}],["fetch",{"_index":960,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["fetchcompetitionbyid",{"_index":680,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchcompetitionbyid(index",{"_index":695,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchpastcompetetions",{"_index":681,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchpoints",{"_index":682,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchrunningcompetetions",{"_index":683,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fetchupcomingcompetetions",{"_index":684,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["fff",{"_index":1447,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["ffffff",{"_index":1481,"title":{},"body":{"components/ProfileComponent.html":{}}}],["field",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["fields",{"_index":1560,"title":{},"body":{"components/RegisterComponent.html":{}}}],["file",{"_index":9,"title":{"interfaces/File.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["file\",true,file.title",{"_index":1290,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file.filename",{"_index":1228,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file.service",{"_index":1080,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file.url",{"_index":1273,"title":{},"body":{"classes/NavigationModel.html":{}}}],["file/folder",{"_index":1271,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filename",{"_index":767,"title":{},"body":{"interfaces/File.html":{},"classes/NavigationModel.html":{}}}],["filename.title",{"_index":1239,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader",{"_index":1299,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader.onloadend",{"_index":1303,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader.readastext(file",{"_index":1310,"title":{},"body":{"classes/NavigationModel.html":{}}}],["filereader.result",{"_index":1306,"title":{},"body":{"classes/NavigationModel.html":{}}}],["files",{"_index":352,"title":{},"body":{"components/CompCreateComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["files.item(0",{"_index":392,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["fileservice",{"_index":768,"title":{"injectables/FileService.html":{}},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"coverage.html":{}}}],["filestring",{"_index":1114,"title":{},"body":{"classes/NavigationModel.html":{}}}],["fill",{"_index":914,"title":{},"body":{"components/LoadingComponent.html":{}}}],["first",{"_index":331,"title":{},"body":{"components/CompCreateComponent.html":{},"components/RegisterComponent.html":{}}}],["first_name",{"_index":1329,"title":{},"body":{"classes/NewUser.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["first_name:string",{"_index":1341,"title":{},"body":{"classes/NewUser.html":{}}}],["firstry",{"_index":1011,"title":{},"body":{"injectables/LoginService.html":{}}}],["fix",{"_index":1183,"title":{},"body":{"classes/NavigationModel.html":{}}}],["fixing",{"_index":635,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["fixurl(table",{"_index":1187,"title":{},"body":{"classes/NavigationModel.html":{}}}],["flag",{"_index":1226,"title":{},"body":{"classes/NavigationModel.html":{},"index.html":{}}}],["flex",{"_index":1442,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["flexbox",{"_index":1614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["folder",{"_index":1107,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folder\",true",{"_index":1293,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folder.title",{"_index":1277,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folder.url",{"_index":1276,"title":{},"body":{"classes/NavigationModel.html":{}}}],["foldername",{"_index":1204,"title":{},"body":{"classes/NavigationModel.html":{}}}],["foldername.title",{"_index":1208,"title":{},"body":{"classes/NavigationModel.html":{}}}],["foldername.title).subscribe",{"_index":1209,"title":{},"body":{"classes/NavigationModel.html":{}}}],["folders",{"_index":848,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["following",{"_index":341,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["font",{"_index":870,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["for(var",{"_index":1144,"title":{},"body":{"classes/NavigationModel.html":{}}}],["form",{"_index":277,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["formatted",{"_index":1090,"title":{},"body":{"classes/NavigationModel.html":{}}}],["formbuilder",{"_index":308,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["formcontrol",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol('',validators.required",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["formdata",{"_index":322,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["formdata.append(\"language",{"_index":650,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["formdata.append(\"script",{"_index":648,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["formdata.append(\"username",{"_index":647,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["formdata.append('end',this.form.get('end').value.format",{"_index":401,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('infile',this.form.get('infile').value",{"_index":398,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('outfile',this.form.get('outfile').value",{"_index":399,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('problem_st',this.form.get('problem_st').value",{"_index":397,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('start',this.form.get('start').value.format",{"_index":400,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formdata.append('title',this.form.get('title').value",{"_index":396,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["formgroup",{"_index":362,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["formgroup,formbuilder",{"_index":373,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{}}}],["formsmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["forum",{"_index":1526,"title":{},"body":{"components/RegisterComponent.html":{}}}],["found",{"_index":1647,"title":{},"body":{"components/TimerComponent.html":{}}}],["framework",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{}}}],["free",{"_index":815,"title":{},"body":{"components/HomeComponent.html":{}}}],["frontend",{"_index":473,"title":{},"body":{"components/CompetitionComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["fucntion",{"_index":1736,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["full",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{}}}],["function",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["functionality",{"_index":1083,"title":{},"body":{"classes/NavigationModel.html":{}}}],["functions",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{}}}],["further",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["generate",{"_index":335,"title":{},"body":{"components/CompCreateComponent.html":{},"index.html":{}}}],["generated",{"_index":1847,"title":{},"body":{"index.html":{}}}],["getfile",{"_index":774,"title":{},"body":{"injectables/FileService.html":{}}}],["getfile(id",{"_index":784,"title":{},"body":{"injectables/FileService.html":{}}}],["getfiles",{"_index":775,"title":{},"body":{"injectables/FileService.html":{}}}],["getfiles(newfolder",{"_index":1253,"title":{},"body":{"classes/NavigationModel.html":{}}}],["getfiles(username",{"_index":786,"title":{},"body":{"injectables/FileService.html":{}}}],["getimage",{"_index":1012,"title":{},"body":{"injectables/LoginService.html":{}}}],["getpoints",{"_index":502,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["getpointsurl",{"_index":669,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["getpurl",{"_index":670,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["getrurl",{"_index":671,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["gettimedifference",{"_index":1666,"title":{},"body":{"components/TimerComponent.html":{}}}],["getting",{"_index":1845,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":194,"title":{},"body":{"classes/AppPage.html":{}}}],["gettoken",{"_index":1013,"title":{},"body":{"injectables/LoginService.html":{}}}],["geturl",{"_index":672,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/ProfileService.html":{}}}],["getuser",{"_index":1014,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{}}}],["getuserdetail",{"_index":1496,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserdetail(username",{"_index":1499,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuserid",{"_index":1015,"title":{},"body":{"injectables/LoginService.html":{}}}],["getuserurl",{"_index":1495,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getuurl",{"_index":673,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["github",{"_index":545,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["given",{"_index":463,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["go",{"_index":1871,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1294,"title":{},"body":{"classes/NavigationModel.html":{}}}],["gotcontest",{"_index":1358,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["gotpoints",{"_index":1359,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["graph",{"_index":1876,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":1464,"title":{},"body":{"components/ProfileComponent.html":{}}}],["guard",{"_index":227,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gutters",{"_index":1454,"title":{},"body":{"components/ProfileComponent.html":{}}}],["h",{"_index":1466,"title":{},"body":{"components/ProfileComponent.html":{}}}],["handling",{"_index":458,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["happen",{"_index":471,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["header",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["headers",{"_index":793,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["hear",{"_index":955,"title":{},"body":{"components/LoginComponent.html":{}}}],["height",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["hello",{"_index":1603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["help",{"_index":1869,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":1221,"title":{},"body":{"classes/NavigationModel.html":{}}}],["here",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["highlightactiveline",{"_index":593,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["home",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["home.component.html",{"_index":825,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":824,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":79,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homepage",{"_index":811,"title":{},"body":{"components/HomeComponent.html":{}}}],["hoursinaday",{"_index":1657,"title":{},"body":{"components/TimerComponent.html":{}}}],["hourstodday",{"_index":1658,"title":{},"body":{"components/TimerComponent.html":{}}}],["hr.new1",{"_index":662,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["hrs",{"_index":1717,"title":{},"body":{"components/TimerComponent.html":{}}}],["html",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["htmlinputelement).files[0",{"_index":645,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["http",{"_index":692,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["http://127.0.0.1:8000/api/competition",{"_index":716,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/compile",{"_index":1633,"title":{},"body":{"injectables/RunService.html":{}}}],["http://127.0.0.1:8000/api/contest/get/past",{"_index":712,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/get/running",{"_index":714,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/get/upcoming",{"_index":718,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/isrunning",{"_index":720,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/passed",{"_index":722,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/contest/postcontest",{"_index":723,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/display",{"_index":797,"title":{},"body":{"injectables/FileService.html":{}}}],["http://127.0.0.1:8000/api/login",{"_index":1045,"title":{},"body":{"injectables/LoginService.html":{}}}],["http://127.0.0.1:8000/api/points",{"_index":710,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/profile",{"_index":1501,"title":{},"body":{"injectables/ProfileService.html":{}}}],["http://127.0.0.1:8000/api/profile/add",{"_index":1518,"title":{},"body":{"injectables/RegService.html":{}}}],["http://127.0.0.1:8000/api/profile/pk",{"_index":1503,"title":{},"body":{"injectables/ProfileService.html":{}}}],["http://127.0.0.1:8000/api/rename",{"_index":799,"title":{},"body":{"injectables/FileService.html":{}}}],["http://127.0.0.1:8000/api/submit/code",{"_index":729,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/api/submit/file",{"_index":731,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["http://127.0.0.1:8000/auth",{"_index":1043,"title":{},"body":{"injectables/LoginService.html":{}}}],["http://localhost:4200",{"_index":1854,"title":{},"body":{"index.html":{}}}],["http:httpclient",{"_index":1521,"title":{},"body":{"injectables/RegService.html":{}}}],["http:httpclient,private",{"_index":1051,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{}}}],["http_interceptors",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":690,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["httpclientmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":800,"title":{},"body":{"injectables/FileService.html":{}}}],["httpheaders",{"_index":733,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["httpheaders({'content",{"_index":794,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["httpinterceptor",{"_index":1745,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["httpoptions",{"_index":770,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["httpresponse",{"_index":1047,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["https://medium.com/@ofir3322/create",{"_index":1094,"title":{},"body":{"classes/NavigationModel.html":{}}}],["https://medium.com/javascript",{"_index":1648,"title":{},"body":{"components/TimerComponent.html":{}}}],["id",{"_index":270,"title":{},"body":{"interfaces/Comp.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["ide",{"_index":840,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["identifier",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["if(!flag",{"_index":1230,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!item.isfile",{"_index":1160,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!rename",{"_index":1128,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!result){return",{"_index":1126,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(!this.working",{"_index":618,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["if(deletefolder",{"_index":1262,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(dir.length",{"_index":1158,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(filename.title",{"_index":1237,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(files.length>0",{"_index":391,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(item.isfile",{"_index":1233,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(item.title",{"_index":1227,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(loc",{"_index":1267,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(localstorage.getitem('token",{"_index":1760,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["if(newfolder",{"_index":1259,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(receivied.success==true",{"_index":1318,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(text",{"_index":1129,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(text==\"file",{"_index":1133,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(this._login.loggedin",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(this.dirk",{"_index":1263,"title":{},"body":{"classes/NavigationModel.html":{}}}],["if(this.form.get('end').value",{"_index":388,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.form.get('problem_st').value",{"_index":386,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.form.get('start').value",{"_index":387,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.form.get('title').value",{"_index":385,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["if(this.link",{"_index":1584,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('email').value",{"_index":1582,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('first_name').value",{"_index":1579,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('last_name').value",{"_index":1580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('password').value",{"_index":1583,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.regform.get('username').value",{"_index":1581,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(this.timedifference",{"_index":1698,"title":{},"body":{"components/TimerComponent.html":{}}}],["image",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["image:new",{"_index":1573,"title":{},"body":{"components/RegisterComponent.html":{}}}],["image:string",{"_index":1340,"title":{},"body":{"classes/NewUser.html":{},"interfaces/Profile.html":{}}}],["imagepath",{"_index":1530,"title":{},"body":{"components/RegisterComponent.html":{}}}],["imgerr",{"_index":1531,"title":{},"body":{"components/RegisterComponent.html":{}}}],["imgurl",{"_index":1532,"title":{},"body":{"components/RegisterComponent.html":{}}}],["implements",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["import",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["important",{"_index":1746,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["imports",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/NavigationModel.html":{}}}],["improve",{"_index":851,"title":{},"body":{"components/HomeComponent.html":{}}}],["in_tc",{"_index":747,"title":{},"body":{"interfaces/Contest.html":{}}}],["inbutton",{"_index":298,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["include",{"_index":1120,"title":{},"body":{"classes/NavigationModel.html":{}}}],["incoming",{"_index":1740,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["incorrect",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["infile",{"_index":380,"title":{},"body":{"components/CompCreateComponent.html":{},"injectables/RunService.html":{}}}],["infinite",{"_index":923,"title":{},"body":{"components/LoadingComponent.html":{}}}],["infinity",{"_index":597,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["information",{"_index":320,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["inject",{"_index":759,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":757,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["injectable",{"_index":248,"title":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["injectable,injector",{"_index":1744,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["injectables",{"_index":667,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"overview.html":{}}}],["injector",{"_index":1730,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["inline",{"_index":1471,"title":{},"body":{"components/ProfileComponent.html":{}}}],["input",{"_index":410,"title":{},"body":{"components/CompCreateComponent.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{}}}],["inputready",{"_index":299,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["inputs",{"_index":1667,"title":{},"body":{"components/TimerComponent.html":{}}}],["insert",{"_index":1151,"title":{},"body":{"classes/NavigationModel.html":{}}}],["insert(url:string",{"_index":1142,"title":{},"body":{"classes/NavigationModel.html":{}}}],["inserted",{"_index":1141,"title":{},"body":{"classes/NavigationModel.html":{}}}],["insertstructure(table",{"_index":1157,"title":{},"body":{"classes/NavigationModel.html":{}}}],["instacne",{"_index":958,"title":{},"body":{"components/LoginComponent.html":{}}}],["instance",{"_index":957,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["instances",{"_index":1023,"title":{},"body":{"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["instantiates",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{}}}],["int",{"_index":1123,"title":{},"body":{"classes/NavigationModel.html":{}}}],["intercept",{"_index":1728,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(req",{"_index":1734,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercept(req,next",{"_index":1748,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor",{"_index":859,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"components/HomeComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.ts",{"_index":1727,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["interceptor.service.ts:16",{"_index":1731,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:28",{"_index":1735,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptors",{"_index":1725,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["intercepts",{"_index":1737,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interest",{"_index":336,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["interface",{"_index":266,"title":{"interfaces/Comp.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"interfaces/Profile.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"interfaces/User.html":{}},"body":{"interfaces/Comp.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"interfaces/Profile.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":267,"title":{},"body":{"interfaces/Comp.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"interfaces/Profile.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interval",{"_index":550,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["interval(1000",{"_index":576,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["is_staff",{"_index":1385,"title":{},"body":{"components/ProfileComponent.html":{}}}],["iscontestrunning",{"_index":685,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["iscontestrunning(id",{"_index":702,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["isfile",{"_index":1069,"title":{},"body":{"classes/NavigationModel.html":{}}}],["isolation",{"_index":849,"title":{},"body":{"components/HomeComponent.html":{}}}],["isrunningurl",{"_index":674,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["issue",{"_index":636,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["item",{"_index":1146,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.children",{"_index":1163,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.file",{"_index":1229,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.title",{"_index":1191,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.title===dir[0",{"_index":1170,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.title==dir[0",{"_index":1161,"title":{},"body":{"classes/NavigationModel.html":{}}}],["item.url",{"_index":1189,"title":{},"body":{"classes/NavigationModel.html":{}}}],["items",{"_index":1035,"title":{},"body":{"injectables/LoginService.html":{}}}],["itself",{"_index":1166,"title":{},"body":{"classes/NavigationModel.html":{}}}],["jwt",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":1867,"title":{},"body":{"index.html":{}}}],["keeps",{"_index":357,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["key",{"_index":821,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyframes",{"_index":929,"title":{},"body":{"components/LoadingComponent.html":{}}}],["know",{"_index":1363,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["lang",{"_index":494,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["language",{"_index":568,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{}}}],["language_tools",{"_index":565,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["last",{"_index":1607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["last_name",{"_index":1330,"title":{},"body":{"classes/NewUser.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["last_name:string",{"_index":1342,"title":{},"body":{"classes/NewUser.html":{}}}],["later",{"_index":451,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["layer",{"_index":913,"title":{},"body":{"components/LoadingComponent.html":{}}}],["layer1",{"_index":919,"title":{},"body":{"components/LoadingComponent.html":{}}}],["layer2",{"_index":925,"title":{},"body":{"components/LoadingComponent.html":{}}}],["layer3",{"_index":927,"title":{},"body":{"components/LoadingComponent.html":{}}}],["left",{"_index":906,"title":{},"body":{"components/LoadingComponent.html":{},"components/ProfileComponent.html":{}}}],["legend",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"overview.html":{}}}],["lets",{"_index":278,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["letter",{"_index":1721,"title":{},"body":{"components/TimerComponent.html":{}}}],["library",{"_index":1086,"title":{},"body":{"classes/NavigationModel.html":{}}}],["life",{"_index":1082,"title":{},"body":{"classes/NavigationModel.html":{}}}],["line",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["linear",{"_index":922,"title":{},"body":{"components/LoadingComponent.html":{}}}],["link",{"_index":421,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/RegisterComponent.html":{}}}],["list",{"_index":1105,"title":{},"body":{"classes/NavigationModel.html":{}}}],["listed",{"_index":823,"title":{},"body":{"components/HomeComponent.html":{}}}],["listns",{"_index":1547,"title":{},"body":{"components/RegisterComponent.html":{}}}],["literal",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["live",{"_index":459,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["load",{"_index":427,"title":{},"body":{"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{}}}],["loaded",{"_index":503,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["loading",{"_index":896,"title":{},"body":{"components/LoadingComponent.html":{},"components/PastcontestComponent.html":{}}}],["loading'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["loading.component.html",{"_index":899,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading.component.scss",{"_index":898,"title":{},"body":{"components/LoadingComponent.html":{}}}],["loading/loading.component",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["loadingcomponent",{"_index":81,"title":{"components/LoadingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loc",{"_index":1265,"title":{},"body":{"classes/NavigationModel.html":{}}}],["local",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["localcall",{"_index":949,"title":{},"body":{"components/LoginComponent.html":{}}}],["locallogserv",{"_index":952,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('token",{"_index":1057,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem('userid",{"_index":1065,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem('userimage",{"_index":1064,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.getitem('username",{"_index":1063,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('token",{"_index":1058,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('userid",{"_index":1061,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('userimage",{"_index":1060,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.removeitem('username",{"_index":1059,"title":{},"body":{"injectables/LoginService.html":{}}}],["localstorage.setitem('token',res.token",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('userid",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('userid',res.userid",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('userimage',res.image",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('username',this.myuser.username",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{}}}],["location",{"_index":1152,"title":{},"body":{"classes/NavigationModel.html":{}}}],["logged",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"components/ProfileComponent.html":{}}}],["loggedin",{"_index":1016,"title":{},"body":{"injectables/LoginService.html":{}}}],["logic",{"_index":1696,"title":{},"body":{"components/TimerComponent.html":{}}}],["login",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["login',component:logincomponent",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["login.component.html",{"_index":945,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":944,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["login/login.component",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["login/user",{"_index":1048,"title":{},"body":{"injectables/LoginService.html":{}}}],["logincomponent",{"_index":83,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logined",{"_index":1038,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginform",{"_index":946,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginservice",{"_index":26,"title":{"injectables/LoginService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["logoutuser",{"_index":1017,"title":{},"body":{"injectables/LoginService.html":{}}}],["logs",{"_index":1033,"title":{},"body":{"injectables/LoginService.html":{}}}],["logser",{"_index":1749,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["logser.gettoken",{"_index":1764,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["logserv",{"_index":956,"title":{},"body":{"components/LoginComponent.html":{}}}],["loop",{"_index":1366,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["lot",{"_index":1491,"title":{},"body":{"components/ProfileComponent.html":{}}}],["made",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["main",{"_index":1124,"title":{},"body":{"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["maintain",{"_index":479,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["make",{"_index":469,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["makes",{"_index":1738,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["margin",{"_index":1425,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["mat_dialog_data",{"_index":760,"title":{},"body":{"components/EditorDialogComponent.html":{}}}],["matbuttonmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdatepickermodule",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":1079,"title":{},"body":{"classes/NavigationModel.html":{}}}],["matdialogmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["material",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["matformfieldmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["math.floor((timedifference",{"_index":1704,"title":{},"body":{"components/TimerComponent.html":{}}}],["maticonmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1487,"title":{},"body":{"components/ProfileComponent.html":{}}}],["maxlines",{"_index":596,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["mb",{"_index":1460,"title":{},"body":{"components/ProfileComponent.html":{}}}],["means",{"_index":1752,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["media",{"_index":1486,"title":{},"body":{"components/ProfileComponent.html":{}}}],["message",{"_index":1533,"title":{},"body":{"components/RegisterComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["method",{"_index":1202,"title":{},"body":{"classes/NavigationModel.html":{}}}],["methods",{"_index":193,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["mid",{"_index":481,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["middle",{"_index":1618,"title":{},"body":{"components/RegisterComponent.html":{}}}],["millisecondsinasecond",{"_index":1659,"title":{},"body":{"components/TimerComponent.html":{}}}],["min",{"_index":888,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["minlines",{"_index":594,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["minute",{"_index":293,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["minutesinanhour",{"_index":1660,"title":{},"body":{"components/TimerComponent.html":{}}}],["minutestodday",{"_index":1661,"title":{},"body":{"components/TimerComponent.html":{}}}],["miscellaneous",{"_index":1881,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modification",{"_index":1646,"title":{},"body":{"components/TimerComponent.html":{}}}],["modularising",{"_index":1111,"title":{},"body":{"classes/NavigationModel.html":{}}}],["module",{"_index":98,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"overview.html":{}}}],["modules",{"_index":100,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["moment.js",{"_index":288,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["more",{"_index":1870,"title":{},"body":{"index.html":{}}}],["ms",{"_index":912,"title":{},"body":{"components/LoadingComponent.html":{},"components/RegisterComponent.html":{}}}],["multi",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["multiple",{"_index":726,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{}}}],["myfile",{"_index":1534,"title":{},"body":{"components/RegisterComponent.html":{}}}],["mynewuser",{"_index":1535,"title":{},"body":{"components/RegisterComponent.html":{}}}],["myuser",{"_index":947,"title":{},"body":{"components/LoginComponent.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["names",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["namespace",{"_index":1121,"title":{},"body":{"classes/NavigationModel.html":{}}}],["navigate",{"_index":1853,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":195,"title":{},"body":{"classes/AppPage.html":{}}}],["navigation",{"_index":1081,"title":{},"body":{"classes/NavigationModel.html":{}}}],["navigationmodel",{"_index":1066,"title":{"classes/NavigationModel.html":{}},"body":{"classes/NavigationModel.html":{},"coverage.html":{}}}],["navigationmodel[],url",{"_index":1188,"title":{},"body":{"classes/NavigationModel.html":{}}}],["nayak",{"_index":863,"title":{},"body":{"components/HomeComponent.html":{}}}],["needed",{"_index":1088,"title":{},"body":{"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/TimerComponent.html":{}}}],["nested",{"_index":1248,"title":{},"body":{"classes/NavigationModel.html":{}}}],["new",{"_index":395,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"coverage.html":{},"index.html":{}}}],["newfolder",{"_index":1252,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newname",{"_index":1195,"title":{},"body":{"classes/NavigationModel.html":{},"interfaces/RenameFile.html":{}}}],["newname,oldname",{"_index":1201,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newnamefile(oldname",{"_index":1244,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newnamefolder(oldname",{"_index":1216,"title":{},"body":{"classes/NavigationModel.html":{}}}],["newuser",{"_index":1323,"title":{"classes/NewUser.html":{}},"body":{"classes/NewUser.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["next",{"_index":468,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["next.handle(req",{"_index":1765,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["ng",{"_index":1851,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":504,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["nginit",{"_index":1247,"title":{},"body":{"classes/NavigationModel.html":{}}}],["ngmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":505,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["ngoninit",{"_index":302,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["ngxdatetimemodule",{"_index":286,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["ngxmatdatetimepickermodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmatmomentmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmattimepickermodule",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxmomentmodule",{"_index":287,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["noconflict/ext",{"_index":564,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["noconflict/mode",{"_index":556,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["noconflict/theme",{"_index":559,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["nodejs",{"_index":1096,"title":{},"body":{"classes/NavigationModel.html":{}}}],["non",{"_index":1608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["none",{"_index":1468,"title":{},"body":{"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["none!important",{"_index":1469,"title":{},"body":{"components/ProfileComponent.html":{}}}],["note",{"_index":329,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["notsuccess",{"_index":948,"title":{},"body":{"components/LoginComponent.html":{}}}],["null",{"_index":381,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["number",{"_index":273,"title":{},"body":{"interfaces/Comp.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["object",{"_index":792,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"miscellaneous/variables.html":{}}}],["object.assign(basiceditoroptions",{"_index":602,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["objects",{"_index":1106,"title":{},"body":{"classes/NavigationModel.html":{}}}],["observable",{"_index":697,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["obtained",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["occurred",{"_index":1137,"title":{},"body":{"classes/NavigationModel.html":{}}}],["ocde",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["oldname",{"_index":1196,"title":{},"body":{"classes/NavigationModel.html":{},"interfaces/RenameFile.html":{}}}],["ondestroy",{"_index":549,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["onfilelistener",{"_index":1538,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onfilelistener(event",{"_index":1545,"title":{},"body":{"components/RegisterComponent.html":{}}}],["oninit",{"_index":294,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["online",{"_index":839,"title":{},"body":{"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["onsubmit",{"_index":950,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["onupload",{"_index":1539,"title":{},"body":{"components/RegisterComponent.html":{}}}],["operations",{"_index":1297,"title":{},"body":{"classes/NavigationModel.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["options",{"_index":845,"title":{},"body":{"components/HomeComponent.html":{}}}],["original",{"_index":1197,"title":{},"body":{"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["out",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingComponent.html":{},"injectables/LoginService.html":{},"index.html":{},"overview.html":{}}}],["out_tc",{"_index":748,"title":{},"body":{"interfaces/Contest.html":{}}}],["outbutton",{"_index":300,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["outfile",{"_index":382,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["output",{"_index":412,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"interfaces/RunOutput.html":{}}}],["outputready",{"_index":301,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["over",{"_index":1351,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["overview",{"_index":1878,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1815,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["page",{"_index":466,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["pages",{"_index":423,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["param",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["parametrized",{"_index":1361,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["params",{"_index":570,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["params.id",{"_index":572,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["part",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{}}}],["partial",{"_index":592,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["participate",{"_index":454,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["parts",{"_index":1085,"title":{},"body":{"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["pass",{"_index":1741,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["passed",{"_index":495,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/TimerComponent.html":{}}}],["passurl",{"_index":675,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["password",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{}}}],["password:new",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["password:string",{"_index":1339,"title":{},"body":{"classes/NewUser.html":{},"interfaces/Profile.html":{},"interfaces/User.html":{}}}],["past",{"_index":419,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["pastcompetition/:id",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pastcontest",{"_index":1355,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["pastcontest'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["pastcontest.component.html",{"_index":1357,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["pastcontest.component.scss",{"_index":1356,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["pastcontest/pastcontest.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pastcontestcomponent",{"_index":85,"title":{"components/PastcontestComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["path",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["pcomps",{"_index":428,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["performance",{"_index":456,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["performs",{"_index":893,"title":{},"body":{"components/LoadingComponent.html":{}}}],["pick",{"_index":1555,"title":{},"body":{"components/RegisterComponent.html":{}}}],["picker",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["place",{"_index":1050,"title":{},"body":{"injectables/LoginService.html":{}}}],["places",{"_index":1516,"title":{},"body":{"injectables/RegService.html":{}}}],["plain",{"_index":1649,"title":{},"body":{"components/TimerComponent.html":{}}}],["platform",{"_index":835,"title":{},"body":{"components/HomeComponent.html":{}}}],["please",{"_index":1593,"title":{},"body":{"components/RegisterComponent.html":{}}}],["point",{"_index":1099,"title":{},"body":{"classes/NavigationModel.html":{}}}],["points",{"_index":496,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{}}}],["position",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["post",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{}}}],["posturl",{"_index":676,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["present",{"_index":1742,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["presses",{"_index":316,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{}}}],["prevent",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TokenInterceptorService.html":{}}}],["prevents",{"_index":1367,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["preview",{"_index":1540,"title":{},"body":{"components/RegisterComponent.html":{}}}],["preview(files",{"_index":1553,"title":{},"body":{"components/RegisterComponent.html":{}}}],["private",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["problem",{"_index":271,"title":{},"body":{"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["problem_st",{"_index":379,"title":{},"body":{"components/CompCreateComponent.html":{},"interfaces/Contest.html":{}}}],["process",{"_index":470,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["prod",{"_index":1862,"title":{},"body":{"index.html":{}}}],["production",{"_index":1863,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":53,"title":{"interfaces/Profile.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CompetitionComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["profile.component.html",{"_index":1383,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":1382,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.service",{"_index":1402,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile",{"_index":1507,"title":{},"body":{"injectables/ProfileService.html":{}}}],["profile/profile.component",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profilecomponent",{"_index":87,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilecomponent,canactivate",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profileservice",{"_index":1388,"title":{"injectables/ProfileService.html":{}},"body":{"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["programming",{"_index":834,"title":{},"body":{"components/HomeComponent.html":{}}}],["project",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["promise",{"_index":198,"title":{},"body":{"classes/AppPage.html":{}}}],["prompt",{"_index":464,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interfaces/User.html":{}}}],["protractor",{"_index":200,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":360,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["providedin",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["providers",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":420,"title":{},"body":{"components/CompDashboardComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["providing",{"_index":318,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoadingComponent.html":{}}}],["pts",{"_index":1421,"title":{},"body":{"components/ProfileComponent.html":{}}}],["public",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["publicly",{"_index":813,"title":{},"body":{"components/HomeComponent.html":{}}}],["python",{"_index":558,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["querystring",{"_index":1506,"title":{},"body":{"injectables/ProfileService.html":{}}}],["quite",{"_index":728,"title":{},"body":{"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["radius",{"_index":1450,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["raj",{"_index":864,"title":{},"body":{"components/HomeComponent.html":{}}}],["raleway",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["ranjan",{"_index":868,"title":{},"body":{"components/HomeComponent.html":{}}}],["rcomps",{"_index":429,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["reactiveformsmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["reader",{"_index":1556,"title":{},"body":{"components/RegisterComponent.html":{}}}],["reader.result",{"_index":1577,"title":{},"body":{"components/RegisterComponent.html":{}}}],["readme",{"_index":1873,"title":{},"body":{"index.html":{}}}],["ready",{"_index":327,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["receivied.output",{"_index":1320,"title":{},"body":{"classes/NavigationModel.html":{}}}],["recieve",{"_index":1552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["recive",{"_index":1520,"title":{},"body":{"injectables/RegService.html":{}}}],["recursive",{"_index":1104,"title":{},"body":{"classes/NavigationModel.html":{}}}],["redirected",{"_index":465,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["redirectto:'home',pathmatch:'full",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducing",{"_index":475,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["refresh",{"_index":1691,"title":{},"body":{"components/TimerComponent.html":{}}}],["refreshes",{"_index":1644,"title":{},"body":{"components/TimerComponent.html":{}}}],["reg.service",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"components/RegisterComponent.html":{}}}],["regcontest",{"_index":686,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["regcontest(formdata",{"_index":704,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["regform",{"_index":1536,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["register.component.html",{"_index":1528,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1527,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register/newuser",{"_index":1519,"title":{},"body":{"injectables/RegService.html":{}}}],["register/register.component",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registercomponent",{"_index":89,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":1327,"title":{},"body":{"classes/NewUser.html":{},"components/RegisterComponent.html":{}}}],["registration",{"_index":1525,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regserv",{"_index":1543,"title":{},"body":{"components/RegisterComponent.html":{}}}],["regservice",{"_index":112,"title":{"injectables/RegService.html":{}},"body":{"modules/AppModule.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["regservice,loginservice,authguard",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["relative",{"_index":1441,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["relevant",{"_index":319,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["reload",{"_index":1700,"title":{},"body":{"components/TimerComponent.html":{},"index.html":{}}}],["remaining",{"_index":1639,"title":{},"body":{"components/TimerComponent.html":{}}}],["remains",{"_index":39,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":1307,"title":{},"body":{"classes/NavigationModel.html":{}}}],["rename",{"_index":1215,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamed",{"_index":1186,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamefile",{"_index":776,"title":{"interfaces/RenameFile.html":{}},"body":{"injectables/FileService.html":{},"classes/NavigationModel.html":{},"interfaces/RenameFile.html":{},"coverage.html":{}}}],["renamefile(file",{"_index":1288,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamefile(input",{"_index":788,"title":{},"body":{"injectables/FileService.html":{}}}],["renamefolder(folder",{"_index":1291,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamelistfile(table",{"_index":1232,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renamelistfolder(table",{"_index":1198,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renames",{"_index":1192,"title":{},"body":{"classes/NavigationModel.html":{}}}],["renameurl",{"_index":771,"title":{},"body":{"injectables/FileService.html":{}}}],["renaming",{"_index":1110,"title":{},"body":{"classes/NavigationModel.html":{}}}],["render",{"_index":1302,"title":{},"body":{"classes/NavigationModel.html":{}}}],["rendered",{"_index":1314,"title":{},"body":{"classes/NavigationModel.html":{}}}],["rendering",{"_index":460,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["renders",{"_index":414,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["req",{"_index":1739,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["req.clone",{"_index":1761,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["request",{"_index":348,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["request.files['filename",{"_index":351,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["requests",{"_index":1364,"title":{},"body":{"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["require",{"_index":1813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["res",{"_index":610,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{}}}],["res.passed",{"_index":612,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["res.points",{"_index":614,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["res.url",{"_index":1591,"title":{},"body":{"components/RegisterComponent.html":{}}}],["res.userid",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["res:any",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["reset",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resources",{"_index":820,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["responds",{"_index":1313,"title":{},"body":{"classes/NavigationModel.html":{}}}],["response",{"_index":403,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{}}}],["rest",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{},"components/HomeComponent.html":{}}}],["result",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":201,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["returns",{"_index":197,"title":{},"body":{"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"components/EditorDialogComponent.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["rgba(0",{"_index":1437,"title":{},"body":{"components/ProfileComponent.html":{}}}],["rgba(52",{"_index":1611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["right",{"_index":1456,"title":{},"body":{"components/ProfileComponent.html":{}}}],["roboto",{"_index":1479,"title":{},"body":{"components/ProfileComponent.html":{}}}],["robustness",{"_index":852,"title":{},"body":{"components/HomeComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["root'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["route",{"_index":512,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["router",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{},"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["routermodule",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":208,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/PastcontestComponent.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ruby",{"_index":557,"title":{},"body":{"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{}}}],["run",{"_index":660,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["run.service",{"_index":1076,"title":{},"body":{"classes/NavigationModel.html":{}}}],["run_input",{"_index":1078,"title":{},"body":{"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["run_output",{"_index":1636,"title":{},"body":{"injectables/RunService.html":{}}}],["runcode",{"_index":506,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["runfile",{"_index":507,"title":{"interfaces/RunFile.html":{}},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"interfaces/RunFile.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["runfile(infile",{"_index":1628,"title":{},"body":{"injectables/RunService.html":{}}}],["runinput",{"_index":1077,"title":{"interfaces/RunInput.html":{}},"body":{"classes/NavigationModel.html":{},"interfaces/RunInput.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["running",{"_index":418,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["runoutput",{"_index":1623,"title":{"interfaces/RunOutput.html":{}},"body":{"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["runscript",{"_index":1116,"title":{},"body":{"classes/NavigationModel.html":{},"injectables/RunService.html":{}}}],["runscript(input",{"_index":1630,"title":{},"body":{"injectables/RunService.html":{}}}],["runservice",{"_index":1075,"title":{"injectables/RunService.html":{}},"body":{"classes/NavigationModel.html":{},"injectables/RunService.html":{},"coverage.html":{}}}],["rxjs",{"_index":551,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"dependencies.html":{}}}],["s",{"_index":1718,"title":{},"body":{"components/TimerComponent.html":{}}}],["sahasra",{"_index":867,"title":{},"body":{"components/HomeComponent.html":{}}}],["same",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"classes/NavigationModel.html":{}}}],["sans",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["save",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["savefile",{"_index":777,"title":{},"body":{"injectables/FileService.html":{}}}],["savefile(filename",{"_index":1235,"title":{},"body":{"classes/NavigationModel.html":{}}}],["savefile(input",{"_index":790,"title":{},"body":{"injectables/FileService.html":{}}}],["savefolder(foldername",{"_index":1205,"title":{},"body":{"classes/NavigationModel.html":{}}}],["scaffolding",{"_index":1857,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":282,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["schools",{"_index":1492,"title":{},"body":{"components/ProfileComponent.html":{}}}],["screen",{"_index":897,"title":{},"body":{"components/LoadingComponent.html":{},"components/PastcontestComponent.html":{}}}],["script",{"_index":567,"title":{},"body":{"components/CompetitionComponent.html":{},"interfaces/File.html":{},"classes/NavigationModel.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{}}}],["second",{"_index":1712,"title":{},"body":{"components/TimerComponent.html":{}}}],["seconds",{"_index":1640,"title":{},"body":{"components/TimerComponent.html":{}}}],["secondsinaminute",{"_index":1662,"title":{},"body":{"components/TimerComponent.html":{}}}],["secondstodday",{"_index":1663,"title":{},"body":{"components/TimerComponent.html":{}}}],["see",{"_index":455,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["select",{"_index":658,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["self",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/ProfileComponent.html":{},"injectables/RunService.html":{}}}],["send",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{}}}],["sends",{"_index":323,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["sent",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{}}}],["serif",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/TimerComponent.html":{}}}],["serve",{"_index":1524,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["server",{"_index":324,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["service",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["services",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProfileComponent.html":{}}}],["session",{"_index":638,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["set",{"_index":1751,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["setfile(file",{"_index":1272,"title":{},"body":{"classes/NavigationModel.html":{}}}],["setfolder(folder",{"_index":1275,"title":{},"body":{"classes/NavigationModel.html":{}}}],["setheaders",{"_index":1762,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["shadow",{"_index":1434,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["sibasis",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{}}}],["side",{"_index":850,"title":{},"body":{"components/HomeComponent.html":{}}}],["simple",{"_index":356,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["site",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/LoginService.html":{}}}],["sites",{"_index":832,"title":{},"body":{"components/HomeComponent.html":{}}}],["size",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{},"components/TimerComponent.html":{}}}],["sizing",{"_index":1477,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sm",{"_index":1455,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sm>.col",{"_index":1458,"title":{},"body":{"components/ProfileComponent.html":{}}}],["sm>[class*=col",{"_index":1459,"title":{},"body":{"components/ProfileComponent.html":{}}}],["solid",{"_index":666,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["solve",{"_index":657,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["solved/unsolved",{"_index":1354,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"index.html":{}}}],["spacing",{"_index":1722,"title":{},"body":{"components/TimerComponent.html":{}}}],["span",{"_index":1723,"title":{},"body":{"components/TimerComponent.html":{}}}],["span')).gettext",{"_index":205,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specification",{"_index":211,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["specifying",{"_index":1642,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/.../environment.prod.ts",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.guard.ts",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/auth.guard.ts:13",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/auth.guard.ts:25",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/comp",{"_index":274,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"coverage.html":{}}}],["src/app/comp.ts",{"_index":268,"title":{},"body":{"interfaces/Comp.html":{},"coverage.html":{}}}],["src/app/competition.service.ts",{"_index":668,"title":{},"body":{"injectables/CompetitionService.html":{},"coverage.html":{}}}],["src/app/competition.service.ts:17",{"_index":724,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:18",{"_index":715,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:19",{"_index":719,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:20",{"_index":713,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:21",{"_index":717,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:22",{"_index":730,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:23",{"_index":732,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:24",{"_index":711,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:25",{"_index":721,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:26",{"_index":691,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:30",{"_index":700,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:34",{"_index":701,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:38",{"_index":698,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:42",{"_index":705,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:46",{"_index":696,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:50",{"_index":707,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:54",{"_index":709,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:58",{"_index":699,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:62",{"_index":703,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition.service.ts:66",{"_index":694,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["src/app/competition/competition.component.ts",{"_index":457,"title":{},"body":{"components/CompetitionComponent.html":{},"coverage.html":{}}}],["src/app/competition/competition.component.ts:116",{"_index":518,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:120",{"_index":517,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:129",{"_index":516,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:138",{"_index":528,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:146",{"_index":521,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:167",{"_index":515,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:174",{"_index":524,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:178",{"_index":523,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:187",{"_index":526,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:197",{"_index":522,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:217",{"_index":520,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:40",{"_index":534,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:42",{"_index":538,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:43",{"_index":543,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:45",{"_index":544,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:47",{"_index":530,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:48",{"_index":535,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:50",{"_index":541,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:51",{"_index":542,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:53",{"_index":531,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:54",{"_index":548,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:56",{"_index":537,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:58",{"_index":547,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:59",{"_index":532,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:61",{"_index":546,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:62",{"_index":540,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:64",{"_index":514,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:67",{"_index":536,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/competition/competition.component.ts:85",{"_index":519,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["src/app/contest.ts",{"_index":746,"title":{},"body":{"interfaces/Contest.html":{},"coverage.html":{}}}],["src/app/editor",{"_index":749,"title":{},"body":{"components/EditorDialogComponent.html":{},"coverage.html":{}}}],["src/app/editor/editor.component.ts",{"_index":1067,"title":{},"body":{"classes/NavigationModel.html":{},"coverage.html":{}}}],["src/app/editor/editor.component.ts:733",{"_index":1073,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:734",{"_index":1074,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:735",{"_index":1072,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:736",{"_index":1071,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/editor/editor.component.ts:737",{"_index":1070,"title":{},"body":{"classes/NavigationModel.html":{}}}],["src/app/file.service.ts",{"_index":769,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["src/app/file.service.ts:17",{"_index":798,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:18",{"_index":778,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:22",{"_index":796,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:26",{"_index":791,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:31",{"_index":787,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:37",{"_index":785,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:42",{"_index":781,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:48",{"_index":783,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.service.ts:54",{"_index":789,"title":{},"body":{"injectables/FileService.html":{}}}],["src/app/file.ts",{"_index":766,"title":{},"body":{"interfaces/File.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":810,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:14",{"_index":826,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:18",{"_index":827,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/loading/loading.component.ts",{"_index":892,"title":{},"body":{"components/LoadingComponent.html":{},"coverage.html":{}}}],["src/app/loading/loading.component.ts:13",{"_index":900,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/loading/loading.component.ts:16",{"_index":901,"title":{},"body":{"components/LoadingComponent.html":{}}}],["src/app/login.service.ts",{"_index":1010,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login.service.ts:15",{"_index":1046,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:16",{"_index":1020,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:25",{"_index":1044,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:32",{"_index":1040,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:39",{"_index":1037,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:45",{"_index":1029,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:51",{"_index":1032,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:61",{"_index":1026,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:67",{"_index":1027,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:73",{"_index":1024,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login.service.ts:79",{"_index":1028,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login/login.component.ts",{"_index":942,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:20",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":953,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":963,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:51",{"_index":959,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:65",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/user.ts",{"_index":1766,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/pastcontest/pastcontest.component.ts",{"_index":1349,"title":{},"body":{"components/PastcontestComponent.html":{},"coverage.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:19",{"_index":1371,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:20",{"_index":1374,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:22",{"_index":1372,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:23",{"_index":1373,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:25",{"_index":1375,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:26",{"_index":1369,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:28",{"_index":1370,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:29",{"_index":1360,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:50",{"_index":1365,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/pastcontest/pastcontest.component.ts:74",{"_index":1362,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["src/app/profile.service.ts",{"_index":1494,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/profile.service.ts:14",{"_index":1502,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:15",{"_index":1497,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:19",{"_index":1504,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:26",{"_index":1498,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile.service.ts:33",{"_index":1500,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/profile/profile.component.ts",{"_index":1380,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:18",{"_index":1400,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:19",{"_index":1401,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:20",{"_index":1397,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:21",{"_index":1399,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:22",{"_index":1395,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:23",{"_index":1394,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:24",{"_index":1398,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:25",{"_index":1396,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:26",{"_index":1389,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:42",{"_index":1390,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.ts",{"_index":1378,"title":{},"body":{"interfaces/Profile.html":{},"coverage.html":{}}}],["src/app/reg.service.ts",{"_index":1511,"title":{},"body":{"injectables/RegService.html":{},"coverage.html":{}}}],["src/app/reg.service.ts:13",{"_index":1513,"title":{},"body":{"injectables/RegService.html":{}}}],["src/app/reg.service.ts:16",{"_index":1517,"title":{},"body":{"injectables/RegService.html":{}}}],["src/app/reg.service.ts:22",{"_index":1515,"title":{},"body":{"injectables/RegService.html":{}}}],["src/app/register/newuser.ts",{"_index":1324,"title":{},"body":{"classes/NewUser.html":{},"coverage.html":{}}}],["src/app/register/newuser.ts:10",{"_index":1332,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:5",{"_index":1337,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:6",{"_index":1333,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:7",{"_index":1336,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:8",{"_index":1335,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/newuser.ts:9",{"_index":1334,"title":{},"body":{"classes/NewUser.html":{}}}],["src/app/register/register.component.ts",{"_index":1523,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/register/register.component.ts:105",{"_index":1551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:127",{"_index":1550,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:22",{"_index":1572,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:23",{"_index":1571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:24",{"_index":1569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:25",{"_index":1575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:26",{"_index":1562,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:27",{"_index":1567,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:32",{"_index":1574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:44",{"_index":1564,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:46",{"_index":1542,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:50",{"_index":1544,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:53",{"_index":1566,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:54",{"_index":1568,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:55",{"_index":1570,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:60",{"_index":1546,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:68",{"_index":1554,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/register/register.component.ts:92",{"_index":1558,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/renamefile.ts",{"_index":1620,"title":{},"body":{"interfaces/RenameFile.html":{},"coverage.html":{}}}],["src/app/run.service.ts",{"_index":1626,"title":{},"body":{"injectables/RunService.html":{},"coverage.html":{}}}],["src/app/run.service.ts:17",{"_index":1627,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run.service.ts:21",{"_index":1632,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run.service.ts:25",{"_index":1631,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run.service.ts:31",{"_index":1629,"title":{},"body":{"injectables/RunService.html":{}}}],["src/app/run_file.ts",{"_index":1621,"title":{},"body":{"interfaces/RunFile.html":{},"coverage.html":{}}}],["src/app/run_input.ts",{"_index":1622,"title":{},"body":{"interfaces/RunInput.html":{},"coverage.html":{}}}],["src/app/run_output.ts",{"_index":1624,"title":{},"body":{"interfaces/RunOutput.html":{},"coverage.html":{}}}],["src/app/timer/timer.component.ts",{"_index":1638,"title":{},"body":{"components/TimerComponent.html":{},"coverage.html":{}}}],["src/app/timer/timer.component.ts:21",{"_index":1671,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:22",{"_index":1672,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:24",{"_index":1679,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:25",{"_index":1670,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:35",{"_index":1684,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:36",{"_index":1681,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:37",{"_index":1686,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:38",{"_index":1688,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:40",{"_index":1690,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:41",{"_index":1689,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:42",{"_index":1687,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:43",{"_index":1682,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:44",{"_index":1678,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:47",{"_index":1675,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:62",{"_index":1674,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:69",{"_index":1677,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/timer/timer.component.ts:78",{"_index":1676,"title":{},"body":{"components/TimerComponent.html":{}}}],["src/app/token",{"_index":1726,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":342,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["start",{"_index":383,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{}}}],["start\"/\"end",{"_index":1643,"title":{},"body":{"components/TimerComponent.html":{}}}],["started",{"_index":1846,"title":{"index.html":{}},"body":{}}],["startexecution",{"_index":497,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["starting",{"_index":1098,"title":{},"body":{"classes/NavigationModel.html":{}}}],["starttime",{"_index":272,"title":{},"body":{"interfaces/Comp.html":{}}}],["statement",{"_index":334,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["statements",{"_index":483,"title":{},"body":{"components/CompetitionComponent.html":{},"coverage.html":{}}}],["static",{"_index":367,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["status",{"_index":1353,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["std",{"_index":1122,"title":{},"body":{"classes/NavigationModel.html":{}}}],["still",{"_index":478,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["storage",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["store",{"_index":343,"title":{},"body":{"components/CompCreateComponent.html":{},"interfaces/Profile.html":{},"components/RegisterComponent.html":{}}}],["stored",{"_index":1025,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"index.html":{}}}],["stores",{"_index":1326,"title":{},"body":{"classes/NewUser.html":{}}}],["storing",{"_index":474,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{}}}],["string",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comp.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interfaces/User.html":{}}}],["stringify",{"_index":1505,"title":{},"body":{"injectables/ProfileService.html":{}}}],["strings",{"_index":1155,"title":{},"body":{"classes/NavigationModel.html":{}}}],["structure",{"_index":1103,"title":{},"body":{"classes/NavigationModel.html":{}}}],["studied",{"_index":1084,"title":{},"body":{"classes/NavigationModel.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["styling",{"_index":1490,"title":{},"body":{"components/ProfileComponent.html":{}}}],["subdirectory",{"_index":1156,"title":{},"body":{"classes/NavigationModel.html":{}}}],["submit",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["submitcode",{"_index":687,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitcode(id",{"_index":706,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitcode(id,code",{"_index":739,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitcodeurl",{"_index":677,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfile",{"_index":688,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfile(id",{"_index":708,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfile(id,code",{"_index":741,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitfileurl",{"_index":678,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["submitform",{"_index":303,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["subscribe",{"_index":630,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe(data",{"_index":1405,"title":{},"body":{"components/ProfileComponent.html":{}}}],["subscribe(receivied",{"_index":1322,"title":{},"body":{"classes/NavigationModel.html":{}}}],["subscribe(x",{"_index":577,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["subscription",{"_index":461,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["success",{"_index":1625,"title":{},"body":{"interfaces/RunOutput.html":{}}}],["successfully",{"_index":1606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["suitable",{"_index":817,"title":{},"body":{"components/HomeComponent.html":{}}}],["supply",{"_index":279,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["support",{"_index":842,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["supported",{"_index":838,"title":{},"body":{"components/HomeComponent.html":{}}}],["supports",{"_index":1091,"title":{},"body":{"classes/NavigationModel.html":{}}}],["svg",{"_index":1874,"title":{},"body":{"modules.html":{}}}],["synced",{"_index":843,"title":{},"body":{"components/HomeComponent.html":{}}}],["system",{"_index":943,"title":{},"body":{"components/LoginComponent.html":{},"classes/NavigationModel.html":{}}}],["table",{"_index":1153,"title":{},"body":{"classes/NavigationModel.html":{},"coverage.html":{}}}],["table.filter(f",{"_index":1174,"title":{},"body":{"classes/NavigationModel.html":{}}}],["table.push(item",{"_index":1181,"title":{},"body":{"classes/NavigationModel.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1814,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":623,"title":{},"body":{"components/CompetitionComponent.html":{},"components/ProfileComponent.html":{}}}],["takes",{"_index":1042,"title":{},"body":{"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["tamper",{"_index":1754,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["task",{"_index":895,"title":{},"body":{"components/LoadingComponent.html":{}}}],["team",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["temp",{"_index":1143,"title":{},"body":{"classes/NavigationModel.html":{}}}],["temp.push(item",{"_index":1147,"title":{},"body":{"classes/NavigationModel.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["templates",{"_index":1493,"title":{},"body":{"components/ProfileComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["test",{"_index":1866,"title":{},"body":{"index.html":{}}}],["testcase",{"_index":280,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["tests",{"_index":1865,"title":{},"body":{"index.html":{}}}],["text",{"_index":1429,"title":{},"body":{"components/ProfileComponent.html":{}}}],["textarea",{"_index":1315,"title":{},"body":{"classes/NavigationModel.html":{}}}],["theme",{"_index":498,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this._router.navigate(['/dashboard",{"_index":1701,"title":{},"body":{"components/TimerComponent.html":{}}}],["this._router.navigate(['/home",{"_index":1062,"title":{},"body":{"injectables/LoginService.html":{}}}],["this._router.navigate(['/login",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{},"components/RegisterComponent.html":{}}}],["this._router.navigate(['/profile",{"_index":624,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoginComponent.html":{}}}],["this._router.onsameurlnavigation",{"_index":1699,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.aceeditor",{"_index":603,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.aceeditor.getsession",{"_index":639,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.aceeditor.session.getvalue",{"_index":626,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setmode('ace/mode",{"_index":607,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.aceeditor.session.setmode('ace/mode/'+this.lang",{"_index":1119,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setvalue",{"_index":641,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setvalue(file.file.script",{"_index":1274,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.aceeditor.session.setvalue(this.filestring",{"_index":1309,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.aceeditor.settheme('ace/theme",{"_index":605,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.aceeditor.settheme('ace/theme/'+this.theme",{"_index":1118,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.allocatetimeunits(this.timedifference",{"_index":1702,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.allowed",{"_index":616,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.body",{"_index":581,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.checkrunning",{"_index":583,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.code",{"_index":625,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.cpservice.contestpassed(this.id).subscribe",{"_index":609,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.cpservice.fetchcompetitionbyid(this.id).subscribe",{"_index":579,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.cpservice.fetchpastcompetetions().subscribe",{"_index":447,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.cpservice.fetchpoints().subscribe",{"_index":1420,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.cpservice.fetchrunningcompetetions().subscribe",{"_index":442,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.cpservice.fetchupcomingcompetetions().subscribe",{"_index":444,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.cpservice.iscontestrunning(this.id).subscribe",{"_index":615,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.cpservice.regcontest(formdata).subscribe",{"_index":402,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.cpservice.submitcode",{"_index":627,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.cpservice.submitfile",{"_index":652,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.currentfile",{"_index":1236,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.date_joined",{"_index":1412,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.daystodday",{"_index":1711,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.ddate",{"_index":1714,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.ddate.gettime",{"_index":1694,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.deletefilestruc(item.children",{"_index":1224,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletefilestruc(this.list,dirs,file.file",{"_index":1280,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletefolderstruc(item.children",{"_index":1177,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletefolderstruc(this.list,dirs",{"_index":1285,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletestructure(item.children",{"_index":1171,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.deletestructure(this.list",{"_index":1264,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk",{"_index":1130,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk).subscribe",{"_index":1240,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk).subscribe(err",{"_index":1282,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk.lastindexof",{"_index":1266,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk.split",{"_index":1212,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.dirk.substring(0,loc",{"_index":1268,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfile(item.children",{"_index":1231,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfile(this.list",{"_index":1241,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfolder(item.children",{"_index":1182,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editfolder(this.list",{"_index":1214,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.editorbeautify",{"_index":589,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.editorbeautify.beautify(session",{"_index":640,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.email",{"_index":1410,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.email=email",{"_index":1345,"title":{},"body":{"classes/NewUser.html":{}}}],["this.errormessage",{"_index":1601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.fb.group",{"_index":378,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.files",{"_index":1149,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.files.filter(f",{"_index":1256,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.files=files",{"_index":1255,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.deletefile(file.title,this.uservice.getuser",{"_index":1281,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.deletefolder(this.uservice.getuser",{"_index":1286,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.getfiles(this.uservice.getuser(),this.dirk).subscribe",{"_index":1254,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.renamefile",{"_index":1217,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fileservice.savefile",{"_index":1206,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.filestring",{"_index":1305,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.first_name",{"_index":1416,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.first_name=first_name",{"_index":1347,"title":{},"body":{"classes/NewUser.html":{}}}],["this.fixurl(item.children",{"_index":1190,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.fixurl(item.children,item.url",{"_index":1199,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.folders",{"_index":1145,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.form",{"_index":377,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.get('infile').setvalue(file",{"_index":393,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.form.get('input').updatevalueandvalidity",{"_index":1312,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.form.get('language').updatevalueandvalidity",{"_index":643,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.get('language').value",{"_index":651,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.form.get('outfile').setvalue(file",{"_index":394,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.form.get('script').updatevalueandvalidity",{"_index":646,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.get('script').value",{"_index":649,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.form.patchvalue",{"_index":642,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.form.setvalue",{"_index":407,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.getfiles(false,false",{"_index":1117,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.getfiles(false,true",{"_index":1295,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.getfiles(true,false",{"_index":1278,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.getpoints",{"_index":584,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.gettimedifference",{"_index":1713,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.gotcontest",{"_index":1376,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["this.gotpoints",{"_index":1377,"title":{},"body":{"components/PastcontestComponent.html":{}}}],["this.hoursinaday",{"_index":1710,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.hourstodday",{"_index":1709,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.http.delete(url",{"_index":806,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.get(`${this.getpointsurl}/${localstorage.getitem('username",{"_index":743,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(`${this.geturl}/${index",{"_index":738,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(`${this.isrunningurl}/${id",{"_index":744,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(`${this.passurl}/${id}/${localstorage.getitem('username",{"_index":745,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(this.getpurl",{"_index":736,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(this.getrurl",{"_index":734,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(this.getuurl",{"_index":735,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.get(url",{"_index":804,"title":{},"body":{"injectables/FileService.html":{}}}],["this.http.post('http://127.0.0.1:8000/api/image',fd",{"_index":1588,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.http.post(`${this.submitcodeurl}/${id}`,code",{"_index":740,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.post(`${this.submitfileurl}/${id}`,code",{"_index":742,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.post(this.firstry",{"_index":1053,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.http.post(this.geturl",{"_index":1508,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.http.post(this.getuserurl",{"_index":1510,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.http.post(this.posturl",{"_index":1056,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegService.html":{}}}],["this.http.post(this.posturl,formdata",{"_index":737,"title":{},"body":{"injectables/CompetitionService.html":{}}}],["this.http.post(url,infile,this.httpoptions",{"_index":1637,"title":{},"body":{"injectables/RunService.html":{}}}],["this.http.post(url,input,this.httpoptions",{"_index":802,"title":{},"body":{"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["this.httpoptions",{"_index":1054,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{}}}],["this.id",{"_index":571,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.image",{"_index":1406,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.image=image",{"_index":1343,"title":{},"body":{"classes/NewUser.html":{}}}],["this.imgerr",{"_index":1589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.imgerr=\"invalid",{"_index":1592,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.imgurl",{"_index":1576,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.inbutton.nativeelement.value",{"_index":408,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.injector.get(loginservice",{"_index":1750,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.input",{"_index":1311,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.inputready",{"_index":389,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.insert(this.dirk",{"_index":1270,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.insert(url",{"_index":1159,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.insertstructure(item.children",{"_index":1164,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.insertstructure(this.list",{"_index":1260,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.is_staff",{"_index":1414,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.lang",{"_index":608,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["this.last_name",{"_index":1418,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.last_name=last_name",{"_index":1348,"title":{},"body":{"classes/NewUser.html":{}}}],["this.link",{"_index":1590,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.list",{"_index":1179,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.load",{"_index":446,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.localcall",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('password').value",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username').value",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logserv.trytoken(this.myuser",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.millisecondsinasecond",{"_index":1705,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.minutesinanhour",{"_index":1708,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.minutestodday",{"_index":1707,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.mynewuser",{"_index":1594,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.myuser",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.newnamefile(oldname,result,url",{"_index":1134,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.newnamefolder(oldname,result,url",{"_index":1135,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.notsuccess",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.onupload",{"_index":1578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.opendialog(\"file\",\"create",{"_index":1238,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.opendialog(\"file\",\"rename",{"_index":1289,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.opendialog(\"folder\",\"rename",{"_index":1292,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.outbutton.nativeelement.value",{"_index":409,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.output",{"_index":1319,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.outputready",{"_index":390,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["this.passed",{"_index":611,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.password=password",{"_index":1346,"title":{},"body":{"classes/NewUser.html":{}}}],["this.pcomps",{"_index":448,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.points",{"_index":613,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.points=pts",{"_index":1422,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.posturl}/${username}/${dirk",{"_index":801,"title":{},"body":{"injectables/FileService.html":{},"injectables/RunService.html":{}}}],["this.posturl}/${username}/${dirk}/${id",{"_index":805,"title":{},"body":{"injectables/FileService.html":{}}}],["this.profileservice.getuserdetail(this.user",{"_index":1404,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.rcomps",{"_index":443,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.regform.get('email').value",{"_index":1596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('first_name').value",{"_index":1598,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('last_name').value",{"_index":1599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('password').value",{"_index":1597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regform.get('username').value",{"_index":1595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.regserv.tryreg(this.mynewuser",{"_index":1600,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.renamelistfile(item.children",{"_index":1234,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renamelistfile(this.list",{"_index":1245,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renamelistfolder(item.children",{"_index":1200,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renamelistfolder(this.list",{"_index":1220,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.renameurl}/${username}/${dirk",{"_index":808,"title":{},"body":{"injectables/FileService.html":{}}}],["this.route.params.subscribe",{"_index":569,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.runscript.runscript(send,this.uservice.getuser",{"_index":1321,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.runscript.runscript(send,this.uservice.getuser(),this.currentfile.url).subscribe(receivied",{"_index":1317,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.savefile(file",{"_index":1131,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.savefolder(folder",{"_index":1132,"title":{},"body":{"classes/NavigationModel.html":{}}}],["this.secondsinaminute",{"_index":1706,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.secondstodday",{"_index":1703,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.startexecution",{"_index":573,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.subscription",{"_index":575,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":653,"title":{},"body":{"components/CompetitionComponent.html":{},"components/TimerComponent.html":{}}}],["this.theme",{"_index":606,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.timedifference",{"_index":1693,"title":{},"body":{"components/TimerComponent.html":{}}}],["this.title",{"_index":580,"title":{},"body":{"components/CompetitionComponent.html":{},"components/PastcontestComponent.html":{}}}],["this.ucomps",{"_index":445,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["this.user",{"_index":1403,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet",{"_index":1408,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.date_joined",{"_index":1413,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.email",{"_index":1411,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.first_name",{"_index":1417,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.is_staff",{"_index":1415,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userdet.last_name",{"_index":1419,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.username=username",{"_index":1344,"title":{},"body":{"classes/NewUser.html":{}}}],["this.uservice.getuser",{"_index":629,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["this.validate",{"_index":578,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["this.visible=false",{"_index":1585,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.working",{"_index":617,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["three",{"_index":415,"title":{},"body":{"components/CompDashboardComponent.html":{},"components/ProfileComponent.html":{}}}],["through",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["throughout",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["till",{"_index":359,"title":{},"body":{"components/CompCreateComponent.html":{},"components/PastcontestComponent.html":{}}}],["time",{"_index":291,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/TimerComponent.html":{}}}],["timedifference",{"_index":1664,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["timer.component.html",{"_index":1654,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer.component.scss",{"_index":1653,"title":{},"body":{"components/TimerComponent.html":{}}}],["timer/timer.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["timercomponent",{"_index":91,"title":{"components/TimerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["times",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"interfaces/Contest.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{}}}],["token",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["tokeninterceptor",{"_index":1747,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["tokeninterceptorservice",{"_index":113,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["tokens",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{}}}],["top",{"_index":664,"title":{},"body":{"components/CompetitionComponent.html":{},"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["transform",{"_index":910,"title":{},"body":{"components/LoadingComponent.html":{}}}],["transition",{"_index":916,"title":{},"body":{"components/LoadingComponent.html":{},"components/ProfileComponent.html":{}}}],["translatex",{"_index":911,"title":{},"body":{"components/LoadingComponent.html":{}}}],["trash.trash",{"_index":1207,"title":{},"body":{"classes/NavigationModel.html":{}}}],["trash.trash\").map(f=>f.script",{"_index":1258,"title":{},"body":{"classes/NavigationModel.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["true",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["trying",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{}}}],["trylogin",{"_index":1018,"title":{},"body":{"injectables/LoginService.html":{}}}],["trylogin(user",{"_index":1036,"title":{},"body":{"injectables/LoginService.html":{}}}],["trylogin(user:user):observable",{"_index":1055,"title":{},"body":{"injectables/LoginService.html":{}}}],["tryreg",{"_index":1512,"title":{},"body":{"injectables/RegService.html":{}}}],["tryreg(user",{"_index":1514,"title":{},"body":{"injectables/RegService.html":{}}}],["tryreg(user:newuser):observable",{"_index":1522,"title":{},"body":{"injectables/RegService.html":{}}}],["trytoken",{"_index":1019,"title":{},"body":{"injectables/LoginService.html":{}}}],["trytoken(user",{"_index":1039,"title":{},"body":{"injectables/LoginService.html":{}}}],["trytoken(user:user):observable",{"_index":1052,"title":{},"body":{"injectables/LoginService.html":{}}}],["tsd",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":1022,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"interfaces/User.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Comp.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"interfaces/Contest.html":{},"components/EditorDialogComponent.html":{},"interfaces/File.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interfaces/RenameFile.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"interfaces/RunOutput.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type':'application/json",{"_index":795,"title":{},"body":{"injectables/FileService.html":{},"injectables/LoginService.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"injectables/RunService.html":{}}}],["types",{"_index":416,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["types/jwt",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1298,"title":{},"body":{"classes/NavigationModel.html":{}}}],["ucomps",{"_index":430,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["unique",{"_index":1758,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["unit",{"_index":1864,"title":{},"body":{"index.html":{}}}],["until",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{}}}],["upcoming",{"_index":338,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{}}}],["update",{"_index":467,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["updatelang",{"_index":508,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["updates",{"_index":1194,"title":{},"body":{"classes/NavigationModel.html":{}}}],["updatetheme",{"_index":509,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["upload",{"_index":1300,"title":{},"body":{"classes/NavigationModel.html":{},"components/RegisterComponent.html":{}}}],["uploaded",{"_index":1605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["uploadinput",{"_index":304,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploadinput(files",{"_index":339,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploadoutput",{"_index":305,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploadoutput(files",{"_index":353,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["uploads",{"_index":1102,"title":{},"body":{"classes/NavigationModel.html":{}}}],["uploadsource",{"_index":510,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["uploadsource(event",{"_index":525,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["upoads",{"_index":347,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["url",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/FileService.html":{},"classes/NavigationModel.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{}}}],["url(\"/back",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{}}}],["url,this.uservice.getuser()).subscribe",{"_index":1218,"title":{},"body":{"classes/NavigationModel.html":{}}}],["url.split",{"_index":1219,"title":{},"body":{"classes/NavigationModel.html":{}}}],["use",{"_index":330,"title":{},"body":{"components/CompCreateComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["useclass",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["useful",{"_index":831,"title":{},"body":{"components/HomeComponent.html":{}}}],["user",{"_index":241,"title":{"interfaces/User.html":{}},"body":{"guards/AuthGuard.html":{},"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"interfaces/Profile.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user_fk",{"_index":1379,"title":{},"body":{"interfaces/Profile.html":{}}}],["userdet",{"_index":1386,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userid",{"_index":961,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["userimage",{"_index":962,"title":{},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{}}}],["username",{"_index":628,"title":{},"body":{"components/CompetitionComponent.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/ProfileService.html":{},"components/RegisterComponent.html":{},"interfaces/RunFile.html":{},"interfaces/RunInput.html":{},"injectables/RunService.html":{},"interfaces/User.html":{}}}],["username/password",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["username:new",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["username:string",{"_index":807,"title":{},"body":{"injectables/FileService.html":{},"classes/NewUser.html":{},"interfaces/Profile.html":{},"injectables/RunService.html":{},"interfaces/User.html":{}}}],["users",{"_index":1393,"title":{},"body":{"components/ProfileComponent.html":{}}}],["users.we",{"_index":818,"title":{},"body":{"components/HomeComponent.html":{}}}],["uservice",{"_index":511,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{},"components/ProfileComponent.html":{}}}],["uses",{"_index":284,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"classes/NavigationModel.html":{}}}],["using",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["val",{"_index":1148,"title":{},"body":{"classes/NavigationModel.html":{}}}],["val.filename",{"_index":1150,"title":{},"body":{"classes/NavigationModel.html":{}}}],["validate",{"_index":306,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"components/RegisterComponent.html":{}}}],["validates",{"_index":1559,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"injectables/CompetitionService.html":{},"injectables/FileService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NewUser.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"injectables/ProfileService.html":{},"injectables/RegService.html":{},"components/RegisterComponent.html":{},"injectables/RunService.html":{},"components/TimerComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1184,"title":{},"body":{"classes/NavigationModel.html":{}}}],["var",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["variable",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1767,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":1049,"title":{},"body":{"injectables/LoginService.html":{},"classes/NavigationModel.html":{}}}],["version",{"_index":1849,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["via",{"_index":350,"title":{},"body":{"components/CompCreateComponent.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"index.html":{}}}],["view",{"_index":1087,"title":{},"body":{"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{}}}],["viewchild",{"_index":372,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["viewchild('codeeditor",{"_index":533,"title":{},"body":{"components/CompetitionComponent.html":{},"classes/NavigationModel.html":{}}}],["viewchild('inacceptor",{"_index":366,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewchild('inacceptor',{static",{"_index":375,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewchild('outacceptor",{"_index":370,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewchild('outacceptor',{static",{"_index":376,"title":{},"body":{"components/CompCreateComponent.html":{}}}],["viewed",{"_index":1250,"title":{},"body":{"classes/NavigationModel.html":{}}}],["visible",{"_index":1537,"title":{},"body":{"components/RegisterComponent.html":{}}}],["visit",{"_index":449,"title":{},"body":{"components/CompDashboardComponent.html":{}}}],["void",{"_index":313,"title":{},"body":{"components/CompCreateComponent.html":{},"components/CompDashboardComponent.html":{},"components/CompetitionComponent.html":{},"components/EditorDialogComponent.html":{},"components/HomeComponent.html":{},"components/LoadingComponent.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"classes/NavigationModel.html":{},"components/PastcontestComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/TimerComponent.html":{}}}],["w3",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["way",{"_index":1301,"title":{},"body":{"classes/NavigationModel.html":{}}}],["webkit",{"_index":909,"title":{},"body":{"components/LoadingComponent.html":{}}}],["website",{"_index":812,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["weight",{"_index":1480,"title":{},"body":{"components/ProfileComponent.html":{}}}],["welcome",{"_index":828,"title":{},"body":{"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["went",{"_index":633,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["whether",{"_index":1030,"title":{},"body":{"injectables/LoginService.html":{}}}],["while(!this.startexecution",{"_index":574,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["whole",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["width",{"_index":903,"title":{},"body":{"components/LoadingComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["width:30em",{"_index":1488,"title":{},"body":{"components/ProfileComponent.html":{}}}],["word",{"_index":1445,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["working",{"_index":499,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["workspaces",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrap",{"_index":1446,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["wresslemaniacs",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["wressler",{"_index":1424,"title":{},"body":{"components/ProfileComponent.html":{}}}],["wresslers",{"_index":829,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrong",{"_index":634,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["you're",{"_index":621,"title":{},"body":{"components/CompetitionComponent.html":{}}}],["yourself",{"_index":1602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["zone.js",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _loginserv\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_loginserv: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loginserv\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _loginserv\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoginService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ocde'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                        Title remains same throughout the site \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LoginService } from './login.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n/**\n * The root component of the project which has all the other components as a part of it\n */\nexport class AppComponent {\n  /**Title remains same throughout the site */\n  title = 'ocde';\n\n  constructor(public _loginserv:LoginService){}\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n      \n        Home\n      \n      \n        Profile\n      \n    \n    \n        Login\n        Register\n        Logout        \n    \n  \n    \n -->\n\n              \n\n\n\n    Made with  by Team WreSSLemaniacs.      \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Home                    Profile                      Login        Register        Logout                   -->                  Made with  by Team WreSSLemaniacs.      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompCreateComponent\n\nCompCreateComponent\n\nAppModule -->\n\nCompCreateComponent->AppModule\n\n\n\n\n\nCompDashboardComponent\n\nCompDashboardComponent\n\nAppModule -->\n\nCompDashboardComponent->AppModule\n\n\n\n\n\nCompetitionComponent\n\nCompetitionComponent\n\nAppModule -->\n\nCompetitionComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nEditorDialogComponent\n\nEditorDialogComponent\n\nAppModule -->\n\nEditorDialogComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPastcontestComponent\n\nPastcontestComponent\n\nAppModule -->\n\nPastcontestComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nRegService\n\nRegService\n\nAppModule -->\n\nRegService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            All the modules that were required for the whole site are declared here\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CompCreateComponent\n                        \n                        \n                            CompDashboardComponent\n                        \n                        \n                            CompetitionComponent\n                        \n                        \n                            EditorComponent\n                        \n                        \n                            EditorDialogComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoadingComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            PastcontestComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            TimerComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            EditorDialogComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                        \n                            RegService\n                        \n                        \n                            TokenInterceptorService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HomeComponent } from './home/home.component';\nimport { RegService } from './reg.service';\nimport { LoginService } from './login.service';\nimport { AuthGuard } from './auth.guard';\nimport { EditorComponent } from './editor/editor.component';\nimport { EditorDialogComponent } from './editor-dialog/editor-dialog.component';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { CompDashboardComponent } from './comp-dashboard/comp-dashboard.component';\nimport { CompCreateComponent } from './comp-create/comp-create.component';\nimport { CompetitionComponent } from './competition/competition.component';\nimport { NgxMatDatetimePickerModule, NgxMatTimepickerModule } from '@angular-material-components/datetime-picker';\nimport { NgxMatMomentModule } from \"@angular-material-components/moment-adapter\";\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport { TimerComponent } from './timer/timer.component';\nimport { PastcontestComponent } from './pastcontest/pastcontest.component';\nimport { LoadingComponent } from './loading/loading.component';\n/**\n * All the modules that were required for the whole site are declared here\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    HomeComponent,\n    EditorComponent,\n    EditorDialogComponent,\n    CompDashboardComponent,\n    CompCreateComponent,\n    CompetitionComponent,\n    TimerComponent,\n    PastcontestComponent,\n    LoadingComponent\n  ],\n  entryComponents: [EditorDialogComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatListModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatMomentModule,\n    MatDatepickerModule\n  ],\n  providers: [RegService,LoginService,AuthGuard,\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component'\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AuthGuard } from './auth.guard';\nimport { EditorComponent } from './editor/editor.component';\nimport { CompCreateComponent } from './comp-create/comp-create.component';\nimport { CompDashboardComponent } from \"./comp-dashboard/comp-dashboard.component\";\nimport { CompetitionComponent } from \"./competition/competition.component\";\nimport { PastcontestComponent } from \"./pastcontest/pastcontest.component\";\n\n/**\n * Specification of all the routes that are used by the site. All the routes are self-explanatory from their names\n */\nconst routes: Routes = [\n  { path: 'login',component:LoginComponent },\n  { path: 'register', component: RegisterComponent},\n  { path: 'home', component: HomeComponent },\n  { path: 'profile', component: ProfileComponent,canActivate:[ AuthGuard ]},\n  { path: 'editor', component: EditorComponent, canActivate:[ AuthGuard ]},\n  { path: 'create', component: CompCreateComponent, canActivate:[ AuthGuard ] },\n  { path: 'dashboard', component: CompDashboardComponent, canActivate:[ AuthGuard ] },\n  { path: 'competition/:id', component: CompetitionComponent, canActivate:[ AuthGuard ] },\n  { path: 'pastcompetition/:id', component: PastcontestComponent, canActivate:[ AuthGuard ] },\n  { path: '**', redirectTo:'home',pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [BrowserModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_login: LoginService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor instantiates required services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _login\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To call the functions of login service class\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To call the functions of router class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.guard.ts:25\n                \n            \n\n\n            \n                \n                    The user can activate the component url only if this function returns True, which is determined using a function from loginservice.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**Description\n * An essential class that implements CanActivate from router module.\n * This class been used to prevent the acess of the rest of the site to the user until the user is logged in.\n */\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor instantiates required services\n   * @param _login To call the functions of login service class\n   * @param _router To call the functions of router class\n   */\n  constructor(private _login:LoginService, private _router:Router){}\n\n  /**\n   * The user can activate the component url only if this function returns True, which is determined using a function from loginservice.\n   */\n  canActivate():boolean{\n    if(this._login.loggedIn()){\n      return true\n    }\n    else{\n      this._router.navigate(['/login'])\n      return false\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Comp.html":{"url":"interfaces/Comp.html","title":"interface - Comp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Comp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/comp.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endtime\n                                \n                                \n                                        id\n                                \n                                \n                                        problem\n                                \n                                \n                                        starttime\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endtime\n                                    \n                                \n                                \n                                    \n                                        endtime:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        problem\n                                    \n                                \n                                \n                                    \n                                        problem:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        starttime\n                                    \n                                \n                                \n                                    \n                                        starttime:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Comp {\n    title : String,\n    problem : String,\n    id : number,\n    starttime,\n    endtime\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompCreateComponent.html":{"url":"components/CompCreateComponent.html","title":"component - CompCreateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompCreateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comp-create/comp-create.component.ts\n\n\n    \n        Description\n    \n    \n        Description\nThis component is essentially a form. \nIt lets you supply a problem and a testcase along with a schedule of your contest.\nIt uses Angular's NgxDateTimeModule and NgxMomentModule which uses Moment.js to accept Date and Time accurate to the minute.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comp-create\n            \n\n            \n                styleUrls\n                ./comp-create.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comp-create.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                inbutton\n                            \n                            \n                                inputReady\n                            \n                            \n                                outbutton\n                            \n                            \n                                outputReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                submitForm\n                            \n                            \n                                uploadInput\n                            \n                            \n                                uploadOutput\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, cpservice: CompetitionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comp-create/comp-create.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitForm\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:88\n                \n            \n\n\n            \n                \n                    The submitForm function is called when a user presses the Create button after providing the relevant information.\nThis button accumulates all the information into a FormData component and sends it to the server.\nAlongside, it clears the form so that you can be ready to create another contest.\nNote : Use the first 100 or so characters of your problem statement to generate interest. These are displayed when your problem is upcoming!\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadInput\n                        \n                        \n                    \n                \n            \n            \n                \nuploadInput(files)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:59\n                \n            \n\n\n            \n                \n                    The following are standard function to store File type data in a form to facilitate easy upoads\nIn a request, the file is accesible via request.FILES['filename']\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadOutput\n                        \n                        \n                    \n                \n            \n            \n                \nuploadOutput(files)\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-create/comp-create.component.ts:45\n                \n            \n\n\n            \n                \n                    A simple boolean function which keeps the Create button disabled till all the relevant information is provided\n\n\n                    \n                        Returns :         Boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inbutton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('inAcceptor', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outbutton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('outAcceptor', {static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            outputReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-create/comp-create.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup,FormBuilder } from \"@angular/forms\";\nimport { CompetitionService } from \"../competition.service\";\n\n/**\n * Description\n * This component is essentially a form. \n * It lets you supply a problem and a testcase along with a schedule of your contest.\n * It uses Angular's NgxDateTimeModule and NgxMomentModule which uses Moment.js to accept Date and Time accurate to the minute.\n */\n\n@Component({\n  selector: 'app-comp-create',\n  templateUrl: './comp-create.component.html',\n  styleUrls: ['./comp-create.component.scss']\n})\n\nexport class CompCreateComponent implements OnInit {\n\n  @ViewChild('inAcceptor',{static: false}) inbutton : ElementRef;\n  @ViewChild('outAcceptor',{static: false}) outbutton : ElementRef;\n\n  form: FormGroup;\n\n  inputReady : Boolean = false;\n  outputReady : Boolean = false;\n\n  constructor(\n    public fb: FormBuilder,\n    private cpservice: CompetitionService\n    ) {\n    this.form = this.fb.group({\n      title: [''],\n      problem_st: [''],\n      infile :[null],\n      outfile: [null],\n      start: [''],\n      end: [''],\n    })\n  }\n\n  /**\n   * A simple boolean function which keeps the Create button disabled till all the relevant information is provided\n   */\n  validate(): Boolean {\n    if(this.form.get('title').value=='') return false;\n    if(this.form.get('problem_st').value=='') return false;\n    if(this.form.get('start').value=='') return false;\n    if(this.form.get('end').value=='') return false;\n    return true && this.inputReady && this.outputReady;\n  }\n\n  ngOnInit() { }\n\n  /**\n   * The following are standard function to store File type data in a form to facilitate easy upoads\n   * In a request, the file is accesible via request.FILES['filename']\n   */\n  uploadInput(files) {\n    if(files.length>0) {\n      const file = files.item(0);\n      this.form.get('infile').setValue(file);\n      this.inputReady = true;\n    }\n    else {\n      this.inputReady = false;\n    }\n  }\n\n  uploadOutput(files) {\n    if(files.length>0) {\n      const file = files.item(0);\n      this.form.get('outfile').setValue(file);\n      this.outputReady = true;\n    }\n    else {\n      this.outputReady = false;\n    }\n  }\n\n  /**\n   * The submitForm function is called when a user presses the Create button after providing the relevant information.\n   * This button accumulates all the information into a FormData component and sends it to the server.\n   * Alongside, it clears the form so that you can be ready to create another contest.\n   * \n   * Note : Use the first 100 or so characters of your problem statement to generate interest. These are displayed when your problem is upcoming!\n   */\n  submitForm() {\n    const formData = new FormData();\n    formData.append('title',this.form.get('title').value);\n    formData.append('problem_st',this.form.get('problem_st').value);\n    formData.append('infile',this.form.get('infile').value);\n    formData.append('outfile',this.form.get('outfile').value);\n    formData.append('start',this.form.get('start').value.format());\n    formData.append('end',this.form.get('end').value.format());\n    this.cpservice.regContest(formData).subscribe(\n      (response) => alert(response),\n      (err) => console.log(console.error()\n      )\n    );\n    this.form.setValue({\n      title: [''],\n      problem_st: [''],\n      infile :[null],\n      outfile: [null],\n      start: [''],\n      end: ['']\n    });\n    this.inbutton.nativeElement.value = null;\n    this.outbutton.nativeElement.value = null;\n  }\n\n}\n    \n\n    \n        \n    \n        \n            \n                \n                    Title\n                    \n                \n            \n         -->\n\n        \n            \n                Problem Statement\n                \n            \n        \n        \n        \n            \n                Input\n                \n            \n    \n            \n                Expected Output\n                \n            \n            \n            \n            \n            \n    \n            \n            \n            \n    \n            \n                \n                    Create\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./comp-create.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Title                                                         -->                                    Problem Statement                                                                                Input                                                            Expected Output                                                                                                                                                                        Create                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompCreateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompDashboardComponent.html":{"url":"components/CompDashboardComponent.html","title":"component - CompDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/comp-dashboard/comp-dashboard.component.ts\n\n\n    \n        Description\n    \n    \n        Description\nThis component renders the three types of competitions :\n\nRunning\nUpcoming\nPast\nand provides link to appropriate pages.\nIt uses TimerComponent as a child component.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-comp-dashboard\n            \n\n            \n                styleUrls\n                ./comp-dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./comp-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                pcomps\n                            \n                            \n                                rcomps\n                            \n                            \n                                running\n                            \n                            \n                                ucomps\n                            \n                            \n                                upcoming\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cpservice: CompetitionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/comp-dashboard/comp-dashboard.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pcomps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comp[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rcomps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comp[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            running\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"end:\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ucomps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Comp[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upcoming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"start:\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/comp-dashboard/comp-dashboard.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CompetitionService } from \"../competition.service\";\nimport { Comp } from \"../comp\"\n\n/** Description\n * This component renders the three types of competitions :\n * 1. Running\n * 2. Upcoming\n * 3. Past\n * and provides link to appropriate pages.\n * It uses TimerComponent as a child component.\n */\n\n@Component({\n  selector: 'app-comp-dashboard',\n  templateUrl: './comp-dashboard.component.html',\n  styleUrls: ['./comp-dashboard.component.scss']\n})\n\nexport class CompDashboardComponent implements OnInit {\n\n  upcoming: String = \"start:\";\n  running: String = \"end:\";\n\n  rcomps : Comp[] = [];\n  ucomps : Comp[] = [];\n  pcomps : Comp[] = [];\n  load: boolean= true;\n  \n  constructor(\n    private cpservice : CompetitionService\n  ) { }\n\n  ngOnInit(): void {\n    this.cpservice.fetchRunningCompetetions().subscribe(\n      running => {\n        this.rcomps = running;\n      }\n    );\n    this.cpservice.fetchUpcomingCompetetions().subscribe(\n      running => {\n        this.ucomps = running;\n        this.load = false;\n      }\n    );\n    this.cpservice.fetchPastCompetetions().subscribe(\n      running => {\n        this.pcomps = running;\n      }\n    );\n  }\n}\n    \n\n    \n        \n    \n\n\n\n\n    \n        \n            \n                \n                    Running Competitions\n\n                    \n                        No Competitions Running! Visit again later!\n                    \n\n                    \n                        \n                            \n                                {{comp.title}}\n                                \n                            \n                            \n                                {{comp.problem.substr(0,100)}}\n                                Participate\n                            \n                        \n                    \n                \n            \n            \n                \n                    Past Competitions\n\n                    \n                        \n                            \n                                {{comp.title}}\n                            \n                            \n                                {{comp.problem.substr(0,100)}}\n                                See Your Performance\n                            \n                        \n                    \n                \n            \n            \n                \n                    Upcoming Competitions\n\n                    \n                        No Upcoming Competitions! Create your own!\n                    \n\n                    \n                        \n                            \n                                {{comp.title}}\n                                \n                            \n                            \n                                {{comp.problem.substr(0,100)}}\n                                Participate\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./comp-dashboard.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Running Competitions                                            No Competitions Running! Visit again later!                                                                                                                            {{comp.title}}                                                                                                                        {{comp.problem.substr(0,100)}}                                Participate                                                                                                                                                    Past Competitions                                                                                                        {{comp.title}}                                                                                        {{comp.problem.substr(0,100)}}                                See Your Performance                                                                                                                                                    Upcoming Competitions                                            No Upcoming Competitions! Create your own!                                                                                                                            {{comp.title}}                                                                                                                        {{comp.problem.substr(0,100)}}                                Participate                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CompetitionComponent.html":{"url":"components/CompetitionComponent.html","title":"component - CompetitionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CompetitionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/competition/competition.component.ts\n\n\n    \n        Description\n    \n    \n        Description:\nThis component is essentially EditorComponent - File Handling + Live Rendering\nThe component has a Subscription which keeps checking that the contest is running\nAt the end of a contest, the user is given a prompt and redirected to the profile page\nUPDATE : In the next update, we would like to make this process happen completely on the frontend by storing the endtime of the contest, reducing API calls\nUPDATE : We would still maintain a connection with the server for mid-contest information like errors in problem statements and clarifications\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-competition\n            \n\n            \n                styleUrls\n                ./competition.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./competition.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aceEditor\n                            \n                            \n                                allowed\n                            \n                            \n                                body\n                            \n                            \n                                code\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                    Private\n                                editorBeautify\n                            \n                            \n                                    Public\n                                fb\n                            \n                            \n                                form\n                            \n                            \n                                id\n                            \n                            \n                                LANG\n                            \n                            \n                                passed\n                            \n                            \n                                points\n                            \n                            \n                                startexecution\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                THEME\n                            \n                            \n                                title\n                            \n                            \n                                working\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                beautifyContents\n                            \n                            \n                                checkRunning\n                            \n                            \n                                getPoints\n                            \n                            \n                                loaded\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                runCode\n                            \n                            \n                                runFile\n                            \n                            \n                                    Public\n                                updateLang\n                            \n                            \n                                    Public\n                                updateTheme\n                            \n                            \n                                uploadSource\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, uservice: LoginService, cpservice: CompetitionService, _router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/competition/competition.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        uservice\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            beautifyContents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    beautifyContents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkRunning\n                        \n                        \n                    \n                \n            \n            \n                \ncheckRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPoints\n                        \n                        \n                    \n                \n            \n            \n                \ngetPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loaded\n                        \n                        \n                    \n                \n            \n            \n                \nloaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            runCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    runCode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runFile\n                        \n                        \n                    \n                \n            \n            \n                \nrunFile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateLang\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLang()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateTheme\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadSource\n                        \n                        \n                    \n                \n            \n            \n                \nuploadSource(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition/competition.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aceEditor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ace.Ace.Editor\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('codeEditor')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editorBeautify\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LANG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'c_cpp'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startexecution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            THEME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'github'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            working\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition/competition.component.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { LoginService } from \"../login.service\";\n\nimport { interval, Subscription } from \"rxjs\";\nimport { ActivatedRoute,Router } from \"@angular/router\";\n\nimport * as ace from 'ace-builds';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-ruby';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-ambiance';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-chaos';\nimport 'ace-builds/src-noconflict/theme-chrome';\nimport 'ace-builds/src-noconflict/theme-cobalt';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-beautify';\n\nimport { CompetitionService } from '../competition.service';\n\n/**Description:\n * This component is essentially EditorComponent - File Handling + Live Rendering\n * \n * The component has a Subscription which keeps checking that the contest is running\n * At the end of a contest, the user is given a prompt and redirected to the profile page\n * \n * UPDATE : In the next update, we would like to make this process happen completely on the frontend by storing the endtime of the contest, reducing API calls\n * UPDATE : We would still maintain a connection with the server for mid-contest information like errors in problem statements and clarifications\n */\n\n@Component({\n  selector: 'app-competition',\n  templateUrl: './competition.component.html',\n  styleUrls: ['./competition.component.scss']\n})\n\nexport class CompetitionComponent implements AfterViewInit {\n\n  @ViewChild('codeEditor') private editor: ElementRef;\n\n  id: number;\n  startexecution: Boolean = false;\n\n  private subscription : Subscription;\n\n  private aceEditor: ace.Ace.Editor;\n  private editorBeautify;\n\n  passed: Boolean = false;\n  points: number;\n\n  allowed: Boolean = false;\n  working: Boolean = true;\n\n  form: FormGroup;\n\n  title: String;\n  body: String;\n\n  THEME: string = 'github';\n  LANG: string = 'c_cpp';\n\n  code: string = '';\n\n  constructor(\n    public fb: FormBuilder,\n    private uservice: LoginService,\n    private cpservice: CompetitionService,\n    private _router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.form = this.fb.group({\n      script: [null],\n      language: [''],\n    });\n    this.route.params.subscribe(\n      (params) => {\n        this.id = params.id;\n        this.startexecution = true;\n      }\n    )\n  }\n\n  ngAfterViewInit(): void {\n    while(!this.startexecution) {;}\n    this.subscription = interval(1000)\n      .subscribe(x => { this.validate(); });\n    this.cpservice.fetchCompetitionbyId(this.id).subscribe(\n      (comp) => {\n        this.title = comp.title;\n        this.body = comp.problem;\n      }\n    );\n    this.checkRunning();\n    this.getPoints();\n    ace.config.set('basePath', 'path');\n    ace.config.set(\"fontSize\", \"16px\");\n    ace.require('ace/ext/language_tools');\n    this.editorBeautify = ace.require('ace/ext/beautify');\n    const basicEditorOptions: Partial = {\n      highlightActiveLine: true,\n      minLines: 14,\n      maxLines: Infinity,\n    };\n    const extraEditorOptions = {\n      enableBasicAutocompletion: true,\n      enableLiveAutocompletion: true\n    };\n    const editorOptions = Object.assign(basicEditorOptions, extraEditorOptions);\n    this.aceEditor = ace.edit(this.editor.nativeElement, editorOptions);\n    this.aceEditor.setTheme('ace/theme/' + this.THEME);\n    this.aceEditor.session.setMode('ace/mode/' + this.LANG);\n  }\n\n  loaded() : Boolean {\n    return true;\n  }\n\n  getPoints() {\n    this.cpservice.contestPassed(this.id).subscribe(\n      (res) => {\n        this.passed = res.passed;\n        this.points = res.points;\n      }\n    );\n  }\n\n  checkRunning() {\n    this.cpservice.isContestRunning(this.id).subscribe(\n      (res) => {\n        this.allowed = res;\n        this.working = res;\n      }\n    );\n  }\n\n  validate() {\n    this.checkRunning();\n    if(!this.working) {\n      alert(\"Competition Expired! You're being taken to your profile!\");\n      this._router.navigate(['/profile']);\n    }\n  }\n\n  public runCode() {\n    this.code = this.aceEditor.session.getValue();\n    this.cpservice.submitCode(\n      this.id,\n      {\n        'username' : this.uservice.getUser(),\n        'script' : this.code,\n        'language' : this.LANG\n      }\n    ).subscribe(\n      (response) => {\n        alert(response);\n        this.getPoints();\n      },\n      (error) => {\n        alert(\"Something went wrong, we are fixing the issue!\");\n        console.log(error);\n      }\n    );\n  }\n\n  public beautifyContents() {\n    if (this.aceEditor && this.editorBeautify) {\n      const session = this.aceEditor.getSession();\n      this.editorBeautify.beautify(session);\n    }\n  }\n\n  public updateTheme() {\n    this.aceEditor.setTheme('ace/theme/' + this.THEME);\n  }\n\n  public updateLang() {\n    this.aceEditor.session.setMode('ace/mode/' + this.LANG);\n    this.aceEditor.session.setValue(\"\");\n    this.form.patchValue({\n      language: this.LANG,\n    });\n    this.form.get('language').updateValueAndValidity();\n  }\n\n  uploadSource(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.form.patchValue({\n      script: file,\n      language: this.LANG,\n    });\n    this.form.get('script').updateValueAndValidity();\n    this.form.get('language').updateValueAndValidity();\n  }\n\n  runFile() {\n    var formData: any = new FormData();\n    formData.append(\"username\", this.uservice.getUser());\n    formData.append(\"script\", this.form.get('script').value);\n    formData.append(\"language\", this.form.get('language').value);\n    this.cpservice.submitFile(\n      this.id,\n      formData\n    ).subscribe(\n      (response) => {\n        alert(response);\n        this.getPoints();\n      },\n      (error) => {\n        alert(\"Something went wrong, we are fixing the issue!\");\n        console.log(error);\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n    \n\n    \n        \n    \n\n\n\n\n    \n        \n            {{title}}\n            \n            Title description, April 7, 2014 -->\n        \n        \n        \n            {{body}}\n            \n            \n                Passed with {{points}} points!\n            \n            \n                Yet to solve!\n            \n            \n        \n    \n  \n    \n        \n            \n                Select Theme\n                \n                Github Theme\n                Ambiance Theme\n                Chaos Theme\n                Chrome Theme\n                Cobalt Theme\n                \n            \n        \n        \n            \n                Select Language\n                \n                C++\n                Python\n                Ruby\n                \n            \n        \n    \n    \n    \n    \n\n    \n        \n            \n                \n                        Run\n                \n            \n            \n            \n                \n                    Align\n                \n            \n        \n        \n            \n                \n                    \n                \n                \n                \n                    \n                        Run File\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./competition.component.scss\n                \n                hr.new1{\n    border-top: 1.5px solid;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{title}}                        Title description, April 7, 2014 -->                                    {{body}}                                        Passed with {{points}} points!                                        Yet to solve!                                                                              Select Theme                                Github Theme                Ambiance Theme                Chaos Theme                Chrome Theme                Cobalt Theme                                                                        Select Language                                C++                Python                Ruby                                                                                                                    Run                                                                                        Align                                                                                                                                                                                        Run File                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CompetitionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompetitionService.html":{"url":"injectables/CompetitionService.html","title":"injectable - CompetitionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompetitionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/competition.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getPointsUrl\n                            \n                            \n                                getPUrl\n                            \n                            \n                                getRUrl\n                            \n                            \n                                getUrl\n                            \n                            \n                                getUUrl\n                            \n                            \n                                isRunningUrl\n                            \n                            \n                                passUrl\n                            \n                            \n                                postUrl\n                            \n                            \n                                submitCodeUrl\n                            \n                            \n                                submitFileUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                contestPassed\n                            \n                            \n                                fetchCompetitionbyId\n                            \n                            \n                                fetchPastCompetetions\n                            \n                            \n                                fetchPoints\n                            \n                            \n                                fetchRunningCompetetions\n                            \n                            \n                                fetchUpcomingCompetetions\n                            \n                            \n                                isContestRunning\n                            \n                            \n                                regContest\n                            \n                            \n                                submitCode\n                            \n                            \n                                submitFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/competition.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            contestPassed\n                        \n                        \n                    \n                \n            \n            \n                \ncontestPassed(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchCompetitionbyId\n                        \n                        \n                    \n                \n            \n            \n                \nfetchCompetitionbyId(index)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchPastCompetetions\n                        \n                        \n                    \n                \n            \n            \n                \nfetchPastCompetetions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchPoints\n                        \n                        \n                    \n                \n            \n            \n                \nfetchPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchRunningCompetetions\n                        \n                        \n                    \n                \n            \n            \n                \nfetchRunningCompetetions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetchUpcomingCompetetions\n                        \n                        \n                    \n                \n            \n            \n                \nfetchUpcomingCompetetions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isContestRunning\n                        \n                        \n                    \n                \n            \n            \n                \nisContestRunning(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            regContest\n                        \n                        \n                    \n                \n            \n            \n                \nregContest(formData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    formData\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitCode\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitCode(id, code)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitFile\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitFile(id, code)\n                \n            \n\n\n            \n                \n                    Defined in src/app/competition.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPointsUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/points'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/get/past'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/get/running'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/competition'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/get/upcoming'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRunningUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/isrunning'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/passed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/contest/postcontest'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:17\n                            \n                        \n\n                \n                    \n                        Description\nProvides access to multiple API endpoints\nThe service names are quite self explanatory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitCodeUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/submit/code'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitFileUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/submit/file'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/competition.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Comp } from './comp';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CompetitionService {\n\n  /**Description\n   * Provides access to multiple API endpoints\n   * The service names are quite self explanatory\n   */\n\n  postUrl = 'http://127.0.0.1:8000/api/contest/postcontest';\n  getRUrl = 'http://127.0.0.1:8000/api/contest/get/running';\n  getUUrl = 'http://127.0.0.1:8000/api/contest/get/upcoming';\n  getPUrl = 'http://127.0.0.1:8000/api/contest/get/past';\n  getUrl = 'http://127.0.0.1:8000/api/competition';\n  submitCodeUrl = 'http://127.0.0.1:8000/api/submit/code';\n  submitFileUrl = 'http://127.0.0.1:8000/api/submit/file';\n  getPointsUrl = 'http://127.0.0.1:8000/api/points';\n  isRunningUrl = 'http://127.0.0.1:8000/api/contest/isrunning';\n  passUrl = 'http://127.0.0.1:8000/api/contest/passed';\n\n  constructor(private http : HttpClient) { }\n\n  fetchRunningCompetetions() : Observable {\n    return this.http.get(this.getRUrl);\n  }\n\n  fetchUpcomingCompetetions() : Observable {\n    return this.http.get(this.getUUrl);\n  }\n\n  fetchPastCompetetions() : Observable {\n    return this.http.get(this.getPUrl);\n  }\n\n  regContest(formData) {\n    return this.http.post(this.postUrl,formData);\n  }\n\n  fetchCompetitionbyId(index) : Observable {\n    return this.http.get(`${this.getUrl}/${index}`);\n  }\n\n  submitCode(id,code) : Observable {\n    return this.http.post(`${this.submitCodeUrl}/${id}`,code);\n  }\n\n  submitFile(id,code) : Observable {\n    return this.http.post(`${this.submitFileUrl}/${id}`,code);\n  }\n\n  fetchPoints() : Observable {\n    return this.http.get(`${this.getPointsUrl}/${localStorage.getItem('username')}`);\n  }\n\n  isContestRunning(id): Observable {\n    return this.http.get(`${this.isRunningUrl}/${id}`);\n  }\n\n  contestPassed(id) {\n    return this.http.get(`${this.passUrl}/${id}/${localStorage.getItem('username')}`);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Contest.html":{"url":"interfaces/Contest.html","title":"interface - Contest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Contest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/contest.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        in_tc\n                                \n                                \n                                        out_tc\n                                \n                                \n                                        problem_st\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        in_tc\n                                    \n                                \n                                \n                                    \n                                        in_tc:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out_tc\n                                    \n                                \n                                \n                                    \n                                        out_tc:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        problem_st\n                                    \n                                \n                                \n                                    \n                                        problem_st:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Contest {\n    title: String,\n    problem_st : String,\n    in_tc: File[],\n    out_tc: File[]\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditorDialogComponent.html":{"url":"components/EditorDialogComponent.html","title":"component - EditorDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditorDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editor-dialog/editor-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-editor-dialog\n            \n\n            \n                styleUrls\n                ./editor-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./editor-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/editor-dialog/editor-dialog.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editor-dialog/editor-dialog.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor-dialog/editor-dialog.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Inject} from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog'\n\n@Component({\n  selector: 'app-editor-dialog',\n  templateUrl: './editor-dialog.component.html',\n  styleUrls: ['./editor-dialog.component.scss']\n})\nexport class EditorDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        {{data.text2}}\n\n         {{data.text}} name \n        \n\n\n     Cancel\n     Done \n\n\n    \n\n    \n                \n                    ./editor-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.text2}}         {{data.text}} name              Cancel     Done '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditorDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/File.html":{"url":"interfaces/File.html","title":"interface - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        filename\n                                \n                                \n                                        script\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                    \n                                \n                                \n                                    \n                                        script:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface File {\n    filename : string,\n    script : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/file.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                            \n                                renameUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteFile\n                            \n                            \n                                deleteFolder\n                            \n                            \n                                getFile\n                            \n                            \n                                getFiles\n                            \n                            \n                                renameFile\n                            \n                            \n                                saveFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/file.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFile\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFile(id: String, username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteFolder\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteFolder(username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFile\n                        \n                        \n                    \n                \n            \n            \n                \ngetFile(id: String, username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFiles\n                        \n                        \n                    \n                \n            \n            \n                \ngetFiles(username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renameFile\n                        \n                        \n                    \n                \n            \n            \n                \nrenameFile(input: RenameFile, dirk: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RenameFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveFile\n                        \n                        \n                    \n                \n            \n            \n                \nsaveFile(input: File, username: String, dirk: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/file.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/display'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file.service.ts:17\n                            \n                        \n\n                \n                    \n                        Description\nProvides access to multiple API endpoints\nThe service names are quite self explanatory\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renameUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/rename'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/file.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { File } from './file';\nimport { RenameFile } from './renameFile';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n\n  /**Description\n   * Provides access to multiple API endpoints\n   * The service names are quite self explanatory\n   */\n\n  postUrl = 'http://127.0.0.1:8000/api/display';\n  renameUrl = 'http://127.0.0.1:8000/api/rename';\n\n  constructor(private http : HttpClient) { }\n\n  httpOptions = {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  };\n\n  saveFile(input: File, username: String, dirk: String): Observable{\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    return this.http.post(url,input,this.httpOptions);\n  }\n\n  getFiles(username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    console.log(url);\n    return this.http.get(url);\n  }\n\n  getFile(id: String, username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}/${id}`;\n    return this.http.get(url)\n  }\n\n  deleteFile(id: String, username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}/${id}`;\n    console.log(url);\n    return this.http.delete(url);\n  }\n\n  deleteFolder(username: String, dirk: String): Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    console.log(url);\n    return this.http.delete(url);\n  }\n\n  renameFile(input: RenameFile, dirk: string, username:string): Observable{\n    const url = `${this.renameUrl}/${username}/${dirk}`;\n    console.log(input);\n    return this.http.post(url,input,this.httpOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        Description\nThis is the homepage of our website.\nIt is publicly accessible and API free, which make it completely fast and suitable for our users.We have our team details, some resources and key features of the project are listed on the homepage.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**Description\n * This is the homepage of our website.\n * It is publicly accessible and API free, which make it completely fast and suitable for our users.We have our team details, some resources and key features of the project are listed on the homepage.\n */\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n  \n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    WELCOME WreSSLers\n    New to coding ? Here are some useful sites.\n    C++\n    Python\n    Ruby\n\n\n\n\n  KEY FEATURES OF WreSSLemaniacs\n  \n    \n      \n      Competition Environment\n      Programming contest platform C++,Python,Ruby compatible and supported by an online IDE\n    \n    \n      \n      Directory Support\n      Directory support for every user synced with backend, with options to add and delete files and folders\n    \n    \n      \n      Environment Isolation\n      Environment isolation on the server side to improve the robustness of individual workspaces.\n    \n    \n        \n        Authenticated\n        Authenticated API end-points with Django Rest Framework tokens and Angular Http Interceptor\n    \n  \n\n\n\n\n    THE TEAM\n    \n      \n      \n        \n          \n          \n            Dhruv Arora\n            WreSSLemaniacs\n             Github\n          \n        \n      \n      \n            \n              \n              \n                Sibasis Nayak\n                WreSSLemaniacs\n                 Github\n              \n            \n          \n      \n        \n          \n          \n            Raj Aryan Agrawal\n            WreSSLemaniacs\n             Github\n          \n        \n      \n      \n        \n          \n          \n            Sahasra Ranjan\n            WreSSLemaniacs\n             Github \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                body,h1,h2,h3,h4,h5,h6 {font-family: \"Raleway\", sans-serif}\n\nbody, html {\n  height: 100%;\n  line-height: 1.8;\n}\n\n/* Full height image header */\n.bgimg-1 {\n  background-position: center;\n  background-size: cover;\n  background-image: url(\"/back\");\n  min-height: 100%;\n}\n\n.w3-bar .w3-button {\n  padding: 16px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    WELCOME WreSSLers    New to coding ? Here are some useful sites.    C++    Python    Ruby  KEY FEATURES OF WreSSLemaniacs                  Competition Environment      Programming contest platform C++,Python,Ruby compatible and supported by an online IDE                    Directory Support      Directory support for every user synced with backend, with options to add and delete files and folders                    Environment Isolation      Environment isolation on the server side to improve the robustness of individual workspaces.                        Authenticated        Authenticated API end-points with Django Rest Framework tokens and Angular Http Interceptor          THE TEAM                                                        Dhruv Arora            WreSSLemaniacs             Github                                                                                      Sibasis Nayak                WreSSLemaniacs                 Github                                                                                  Raj Aryan Agrawal            WreSSLemaniacs             Github                                                                      Sahasra Ranjan            WreSSLemaniacs             Github                               '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingComponent.html":{"url":"components/LoadingComponent.html","title":"component - LoadingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoadingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/loading/loading.component.ts\n\n\n    \n        Description\n    \n    \n        Description\nThis component performs the basic task of providing a loading screen\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading\n            \n\n            \n                styleUrls\n                ./loading.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loading.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/loading/loading.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/loading/loading.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Description\n * This component performs the basic task of providing a loading screen\n */\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss']\n})\n\nexport class LoadingComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n\n\n    \n        \n        \n        \n    \n\n    \n\n    \n                \n                    ./loading.component.scss\n                \n                .buffer {\n    width: 20em;\n    position: absolute;\n    left: 50%;\n    top: 16em;\n    -webkit-transform: translateX(-50%);\n        -ms-transform: translateX(-50%);\n            transform: translateX(-50%); }\n  \n  .layer {\n    fill: #4b4b4b;\n    -webkit-transition: all 21s ease-out;\n            transition: all 21s ease-out; }\n  \n  .loading .layer1 {\n    -webkit-animation: 4s linear infinite;\n            animation: 4s linear infinite;\n    -webkit-animation-name: cycle1;\n            animation-name: cycle1; }\n  \n  .loading .layer2 {\n    -webkit-animation: 4s linear infinite;\n            animation: 4s linear infinite;\n    -webkit-animation-name: cycle2;\n            animation-name: cycle2; }\n  \n  .loading .layer3 {\n    -webkit-animation: 4s linear infinite;\n            animation: 4s linear infinite;\n    -webkit-animation-name: cycle3;\n            animation-name: cycle3; }\n  \n  \n  @-webkit-keyframes cycle1 {\n    0%, 65% {\n      fill: #b2b2b2; }\n    75%, 82% {\n      fill: #4b4b4b; }\n    92%, 100% {\n      fill: #b2b2b2; } }\n  \n  @keyframes cycle1 {\n    0%, 65% {\n      fill: #b2b2b2; }\n    75%, 82% {\n      fill: #4b4b4b; }\n    92%, 100% {\n      fill: #b2b2b2; } }\n  \n  @-webkit-keyframes cycle2 {\n    0%, 40% {\n      fill: #b2b2b2; }\n    50%, 86% {\n      fill: #4b4b4b; }\n    96%, 100% {\n      fill: #b2b2b2; } }\n  \n  @keyframes cycle2 {\n    0%, 40% {\n      fill: #b2b2b2; }\n    50%, 86% {\n      fill: #4b4b4b; }\n    96%, 100% {\n      fill: #b2b2b2; } }\n  \n  @-webkit-keyframes cycle3 {\n    0%, 15% {\n      fill: #b2b2b2; }\n    25%, 90% {\n      fill: #4b4b4b; }\n    100% {\n      fill: #b2b2b2; } }\n  \n  @keyframes cycle3 {\n    0%, 15% {\n      fill: #b2b2b2; }\n    25%, 90% {\n      fill: #4b4b4b; }\n    100% {\n      fill: #b2b2b2; } }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoadingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Description\nThis component is the login system for our website.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                myuser\n                            \n                            \n                                notsuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                localcall\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logserv: LoginService, _router: Router, locallogserv: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            Description\nWe define the constructor of the class hear\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        logserv\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of class login service\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of the class router\n\n                                                        \n                                                \n                                                \n                                                        locallogserv\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Another instacne of login service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            localcall\n                        \n                        \n                    \n                \n            \n            \n                \nlocalcall()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:51\n                \n            \n\n\n            \n                \n                    Description\nThis function will fetch the userid and the userimage after a authenticated login is made.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:65\n                \n            \n\n\n            \n                \n                    Description\nThis function is to submit the form to the backend. We are also storing the username and the password of this user in myuser variable. This variable is sent through the POST request.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    username:new FormControl('', Validators.required), \n    password:new FormControl('',Validators.required)\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n                \n                    \n                        A Formgroup created that will be send through the POST request\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myuser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notsuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from './user';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { LoginService } from '../login.service';\n\n/** Description\n * This component is the login system for our website.\n */\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\nexport class LoginComponent implements OnInit {\n\n  myuser : User; /**{\n        localStorage.setItem('userimage',res.image);\n        localStorage.setItem('userid',res.userid);\n      },\n      err=>{\n        console.log(err);\n      }\n    )\n  }\n  /**Description\n   * This function is to submit the form to the backend. We are also storing the username and the password of this user in myuser variable. This variable is sent through the POST request.\n   */\n  onSubmit(){\n    this.myuser={\n      username: this.loginForm.get('username').value,\n      password: this.loginForm.get('password').value,\n    }\n\n    /**Description\n     * We are trying to make an API call and get a token, with the obtained token we are storing it in local storage, so that we can further use this token to authenticate further API calls.\n     */\n\n    this.logserv.trytoken(this.myuser)\n      .subscribe(\n        (res:any) => {\n          // console.log(res)\n          this.notsuccess =\"\";\n          /**\n           * This local call function is to fetch the login details of the user after the token has been obtained.\n           */\n          this.localcall();\n          localStorage.setItem('token',res.token);\n          // localStorage.setItem('userimage',res.image);\n          // localStorage.setItem('userid', res.userid);\n          localStorage.setItem('username',this.myuser.username);\n          this._router.navigate(['/profile']);\n        },\n        err => {\n          // this.notsuccess = \"fail\";\n          alert(\"Invalid credentials. Try Again!\")\n          console.log(err);\n\n        }\n      )\n  }\n\n}\n\n    \n\n    \n        User Login\n\n    Username: \n    password: \n\nSubmit -->\n\n\n    \n        \n            \n\n                \n                    Login\n                \n\n                \n                    \n                        \n                            \n                                Username\n                                \n                                Password\n                                \n                            \n                            \n                                Login\n                                \n                                    &times;\n                                    Incorrect username/password! Try again.\n                                \n                            \n\n                        \n                    \n                \n\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'User Login    Username:     password: Submit -->                                                            Login                                                                                                                                        Username                                                                Password                                                                                                                        Login                                                                    ×                                    Incorrect username/password! Try again.                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstry\n                            \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getImage\n                            \n                            \n                                getToken\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserId\n                            \n                            \n                                loggedIn\n                            \n                            \n                                logoutUser\n                            \n                            \n                                trylogin\n                            \n                            \n                                trytoken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/login.service.ts:16\n                            \n                        \n\n                \n                    \n                            Description\nConstructor creates two instances\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of a HttpClient class\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An instance of the Router class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:73\n                \n            \n\n\n            \n                \n                    Function to get the userimage stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:61\n                \n            \n\n\n            \n                \n                    Function to get the token stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:67\n                \n            \n\n\n            \n                \n                    Function to get the username stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:79\n                \n            \n\n\n            \n                \n                    Function to get the userid stored in local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nloggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:45\n                \n            \n\n\n            \n                \n                    Function that returns whether the user is currently logged in using the token\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logoutUser\n                        \n                        \n                    \n                \n            \n            \n                \nlogoutUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:51\n                \n            \n\n\n            \n                \n                    Function that logs out the user and deletes all the items stored in local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trylogin\n                        \n                        \n                    \n                \n            \n            \n                \ntrylogin(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:39\n                \n            \n\n\n            \n                \n                    Function used to fetch the details of the logined user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The details of the user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            trytoken\n                        \n                        \n                    \n                \n            \n            \n                \ntrytoken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login.service.ts:32\n                \n            \n\n\n            \n                \n                    Description\nFunction to get the token which will be used in site authentication\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Takes the login details as the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/auth/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/login'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse , HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './login/user';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n/**Description\n * A class that has been used to define various functions that place the API calls.\n */\nexport class LoginService {\n  postUrl = 'http://127.0.0.1:8000/api/login'\n  firstry = 'http://127.0.0.1:8000/auth/'\n\n  /**Description\n   * Constructor creates two instances\n   * @param http  An instance of a HttpClient class\n   * @param _router An instance of the Router class\n   */\n  constructor(private http:HttpClient,private _router:Router) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  };\n  /**Description\n   * Function to get the token which will be used in site authentication\n   * @param user Takes the login details as the input\n   */\n  trytoken(user:User):Observable{\n    return this.http.post(this.firstry, user, this.httpOptions)\n  }\n  /**\n   * Function used to fetch the details of the logined user\n   * @param user The details of the user\n   */\n  trylogin(user:User):Observable{\n    return this.http.post(this.postUrl, user, this.httpOptions)\n  }\n  /**\n   * Function that returns whether the user is currently logged in using the token\n   */\n  loggedIn(){\n    return !!localStorage.getItem('token');\n  }\n  /**\n   * Function that logs out the user and deletes all the items stored in local storage\n   */\n  logoutUser(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('userimage');\n    localStorage.removeItem('userid');\n    this._router.navigate(['/home']);\n  }\n  /**\n   * Function to get the token stored in local storage\n   */\n  getToken(){\n    return localStorage.getItem('token');\n  }\n  /**\n   * Function to get the username stored in local storage\n   */\n  getUser() {\n    return localStorage.getItem('username');\n  }\n  /**\n   * Function to get the userimage stored in local storage\n   */\n  getImage(){\n    return localStorage.getItem('userimage');\n  }\n  /**\n   * Function to get the userid stored in local storage\n   */\n  getUserId(){\n    return localStorage.getItem('userid');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NavigationModel.html":{"url":"classes/NavigationModel.html","title":"class - NavigationModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NavigationModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/editor/editor.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                children\n                            \n                            \n                                    Public\n                                    Optional\n                                file\n                            \n                            \n                                    Public\n                                isFile\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NavigationModel[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:737\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:736\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:735\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:733\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editor/editor.component.ts:734\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormGroup,FormBuilder } from \"@angular/forms\";\nimport { RunService } from '../run.service';\nimport { RunInput } from '../run_input';\nimport { RenameFile } from '../renameFile';\nimport { MatDialog } from '@angular/material/dialog';\nimport { LoginService } from \"../login.service\";\n\nimport * as ace from 'ace-builds';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-ruby';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/theme-ambiance';\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-chaos';\nimport 'ace-builds/src-noconflict/theme-chrome';\nimport 'ace-builds/src-noconflict/theme-cobalt';\nimport 'ace-builds/src-noconflict/ext-language_tools';\nimport 'ace-builds/src-noconflict/ext-beautify';\nimport { EditorDialogComponent } from '../editor-dialog/editor-dialog.component';\nimport { FileService } from '../file.service';\n\nimport { File } from '../file';\nimport { Navigation } from '@angular/router';\n\n/**Description\n   * \n   * The life of the project, the editor component. Its functionality can be studied in 2 parts\n   * \n   * 1. Editor :\n   * The editor is created using the \"Ace\" library\n   * The view uses ngAfterViewInit which is needed for @ViewChild decorator\n   * The code is stored as a formatted string, along with the language and theme\n   * \n   * The editor supports basic autocomplete and align (beautify) capabilities\n   * The code uses https://medium.com/@ofir3322/create-an-online-ide-with-angular-6-nodejs-part-1-163a939a7929 as a starting point\n   * \n   * The project also allows for running files via direct uploads\n   * \n   * 2. Directory Structure\n   * The directory is stored as a recursive list of objects of class type NavigationModel\n   * The structure supports file and folder creation, deletion and renaming\n   * Provides a system for modularising code and running with various imports and dependencies\n   */\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\n\nexport class EditorComponent implements AfterViewInit {\n\n  @ViewChild('codeEditor') private editor: ElementRef;\n  private aceEditor : ace.Ace.Editor;\n  private editorBeautify;\n  public fileString;\n\n  files: File[] = [];\n  folders: string[] = [];\n  list: NavigationModel[] = [];\n  currentfile: NavigationModel = {\n        title: '',\n        isFile: true,\n        children: [],\n  };\n  dirk: string = '.';\n  form: FormGroup;\n\n  THEME : string = 'github';\n  LANG : string = 'c_cpp';\n\n  code : string = '';\n  input : string = '';\n  output : string = '';\n\n  constructor(\n    public fb: FormBuilder,\n    private runscript : RunService,\n    public dialog: MatDialog,\n    private fileService: FileService,\n    private uservice: LoginService\n    ) { \n      this.form = this.fb.group({\n        script: [null],\n        language: [''],\n        input: ['']\n      });\n    }\n\n  ngOnInit() {\n      this.getFiles(false,false);\n  }\n\n  ngAfterViewInit(): void {\n    ace.config.set('basePath', 'path');\n    ace.config.set(\"fontSize\", \"16px\");\n    ace.require('ace/ext/language_tools');\n    this.editorBeautify = ace.require('ace/ext/beautify');\n    const basicEditorOptions: Partial = {\n      highlightActiveLine: true,\n      minLines: 14,\n      maxLines: Infinity,\n    };\n    const extraEditorOptions = {\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true\n    };\n    const editorOptions = Object.assign(basicEditorOptions, extraEditorOptions);\n    this.aceEditor = ace.edit(this.editor.nativeElement, editorOptions);\n    this.aceEditor.setTheme('ace/theme/'+this.THEME);\n    this.aceEditor.session.setMode('ace/mode/'+this.LANG);\n    this.aceEditor.session.setValue(\n`#include\nusing namespace std;\nint main() {\n  cout \nusing namespace std;\nint main() {\n  cout {\n      if(!result){return;}\n      console.log(`Dialog Result: ${result}`);\n      if(!rename){\n        if(text == \"File\") {\n          const file: NavigationModel = {\n            title: result,\n            isFile: true,\n            children: [],\n            url: this.dirk\n          }\n          this.saveFile(file);\n        }\n        else {\n          const folder: NavigationModel = {\n            title: result,\n            isFile: false,\n            children: [],\n            url: this.dirk\n          }\n          this.saveFolder(folder);\n        }\n      }\n      else{\n        if(text==\"File\") {\n          this.newNameFile(oldName,result,url)\n        }\n        else {\n          this.newNameFolder(oldName,result,url)\n        }\n      }\n    },err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    });\n  }\n\n  // ---------------FOLDER EDITINGS---------------------\n\n  /** Description\n     * Create new list of objects containing the obtained files and folders\n     * @param url local path address of objects inserted\n     */\n  insert(url:string): NavigationModel[] {\n    var temp: NavigationModel[] = []\n    for(var folder of this.folders) {\n      const item: NavigationModel = {\n        title: folder,\n        isFile: false,\n        children: [],\n        url: url\n      }\n      temp.push(item);\n    }\n\n    for (var val of this.files) {\n      const item: NavigationModel = {\n        title: val.filename,\n        isFile: true,\n        children: [],\n        file: val,\n        url: url\n      }\n      temp.push(item);\n    }\n\n    return temp;\n  }\n\n  /** Description\n     * Insert list of files and folders at given local path location\n     * @param table list of objects containing files and folders\n     * @param dir  list of strings containing individual subdirectory names\n     * @param url local path address of objects inserted\n     */\n  insertStructure(table: NavigationModel[], dir: string[], url: string): NavigationModel[] {\n    if(dir.length == 0) {\n      return this.insert(url);\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.insertStructure(item.children, dir, url);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /** Description\n     * Deletes all children of the folder but not folder itself\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     */\n  deleteStructure(table: NavigationModel[], dir: string[]): NavigationModel[] {\n    console.log(dir);\n    if(dir.length == 0) {\n      var empty: NavigationModel[] = [];\n      return empty;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title===dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.deleteStructure(item.children, dir);\n      }\n    }\n    return table;\n  }\n\n  /** Description\n     * Deletes folder and all its children\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param folder string for name of folder to be deleted\n     */\n  deleteFolderStruc(table: NavigationModel[], dir: string[], folder: string): NavigationModel[] {\n    if(dir.length == 0) {\n      table = table.filter(f=> f.isFile ||  f.title != folder)\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.deleteFolderStruc(item.children, dir, folder);\n        break;\n      }\n    }\n    return table;\n  }\n\n   /** Description\n     * Creates new folder and adds to the list of objects this.list\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param folder string for name of new folder\n     */\n  editFolder(table: NavigationModel[], dir: string[], folder: string): NavigationModel[] {\n    if(dir.length == 0) {\n      var item: NavigationModel = {\n        title: folder,\n        isFile: false,\n        url: this.dirk,\n        children: []\n      }\n      table.push(item);\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.editFolder(item.children, dir, folder);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /** Description\n     * Fix local path values for al children of renamed folder\n     * @param table list of objects containing files and folders\n     * @param url name of new url of all objects in table\n     */\n  fixUrl(table: NavigationModel[],url: string): NavigationModel[] {\n    console.log(url);\n    for(var item of table){\n      item.url = url;\n      if(!item.isFile) {\n        item.children = this.fixUrl(item.children, url + \"/\" + item.title)\n      }\n    }\n    return table;\n  }\n\n   /** Description\n     * Renames an existing folder and updates local path values to objects in this.list\n     * @param table  list of objects containing files and folders\n     * @param dir  list of strings containing individual subdirectory names\n     * @param newName string for name of renamed folder\n     * @param oldName  string for original name of folder\n     */\n  renameListFolder(table: NavigationModel[], dir: string[], newName: string, oldName: string): NavigationModel[] {\n    if(dir.length == 0) {\n      for(var item of table){\n        if(!item.isFile && item.title == oldName){\n          item.title = newName;\n          item.children = this.fixUrl(item.children,item.url + \"/\" + newName);\n          break;\n        }\n      } \n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.renameListFolder(item.children, dir, newName,oldName);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /** Description\n     * Function calls FileService method to create new folder on backend database\n     * @param foldername object containing folder name and local path location\n     */\n  saveFolder(foldername: NavigationModel): void{\n    this.fileService.saveFile(\n      {\n        filename: \"trash.trash\",\n        script: foldername.title\n      } as File, this.uservice.getUser(), this.dirk + \"/\" + foldername.title).subscribe(\n      file=>{\n        console.log(file);\n\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.editFolder(this.list, dirs, foldername.title);\n      },\n      err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      }); \n  }\n\n  /** Description\n     * Function calls FileService method to rename folder on backend database\n     * @param oldName string for original name of folder\n     * @param newName string for new name of folder\n     * @param url local path location for folder\n     */\n  newNameFolder(oldName: string, newName: string, url: string): void {\n    this.fileService.renameFile(\n      {\n        newName: newName, \n        oldName: oldName,\n        file: false} as RenameFile, url,this.uservice.getUser()).subscribe(\n      file=>{\n        var dirs: string[] = url.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.renameListFolder(this.list, dirs, newName, oldName);\n      },\n      err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      });\n  }\n\n  // ------------------------ FILE HELPERS -------------------\n\n  /** Description\n     * Deletes file from this.list of objects\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param file File object containing filename and code script\n     */\n  deleteFileStruc(table: NavigationModel[], dir: string[], file: File): NavigationModel[] {\n    if(dir.length == 0) {\n      table = table.filter(f=> !f.isFile || f.file != file)\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.deleteFileStruc(item.children, dir, file);\n        break;\n      }\n    }\n    return table;\n  }\n\n   /** Description\n     * Creates new file and adds to the list of objects this.list\n     * @param table list of objects containing files and folders\n     * @param dir  list of strings containing individual subdirectory names\n     * @param file File object containing filename and code script\n     */\n  editFile(table: NavigationModel[], dir: string[], file: File): NavigationModel[] {\n    if(dir.length == 0) {\n      var flag: boolean = false;\n      for(var item of table) {\n        if(item.title == file.filename){\n          item.file = file;\n          flag = true;\n          break;\n        }\n      }\n      if(!flag){\n        var item: NavigationModel = {\n          title: file.filename,\n          isFile: true,\n          url: this.dirk,\n          children: [],\n          file: file\n        }\n        table.push(item);\n      }\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.editFile(item.children, dir, file);\n        break;\n      }\n    }\n    return table;\n  }\n\n  /** Description\n     * Renames an existing file in list of objects this.list\n     * @param table list of objects containing files and folders\n     * @param dir list of strings containing individual subdirectory names\n     * @param newName  string for name of renamed file\n     * @param oldName string for original name of file\n     */\n  renameListFile(table: NavigationModel[], dir: string[], newName: string, oldName: string): NavigationModel[] {\n    if(dir.length == 0) {\n      for(var item of table){\n        if(item.isFile && item.title == oldName){\n          item.title = newName;\n        }\n      }\n      return table;\n    }\n\n    for(var item of table){\n      if(!item.isFile && item.title==dir[0]) {\n        dir = dir.splice(1);\n        item.children = this.renameListFile(item.children, dir, newName,oldName);\n        break;\n      }\n    }\n    return table;\n  }\n\n  \n  /** Description\n     * Function calls FileService method to create new file on backend database\n     * @param filename File object containing filename and code script\n     */\n  saveFile(filename = this.currentfile): void{\n    if(filename.title==''){\n      return this.openDialog(\"File\",\"Create New File\");\n    }\n    this.code = this.aceEditor.session.getValue();\n    this.fileService.saveFile(\n      {\n        filename: filename.title,\n        script: this.code\n      } as File, this.uservice.getUser(), this.dirk).subscribe(\n      file=>{\n        console.log(file);\n\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.editFile(this.list, dirs,file);\n        console.log(this.list);\n      },err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      }); \n  }\n\n  /** Description\n     * Function calls FileService method to rename file on backend database\n     * @param oldName string for original name of file\n     * @param newName string for new name of file\n     * @param url local path location for file\n     */\n  newNameFile(oldName: string, newName: string, url: string): void {\n    this.fileService.renameFile(\n      {\n        newName: newName, \n        oldName: oldName,\n        file: true} as RenameFile, url,this.uservice.getUser()).subscribe(\n      file=>{\n        var dirs: string[] = url.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.renameListFile(this.list, dirs, newName, oldName);\n      },\n      err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      });\n  }\n\n  /** Description\n     * Function executed on ngInit and every time nested folder contents is to be viewed or closed\n     * @param newFolder True if nested folder contents is to be viewed\n     * @param deleteFolder True if nested folder is closed\n     */\n  getFiles(newFolder: boolean, deleteFolder: boolean): void {\n    this.fileService.getFiles(this.uservice.getUser(),this.dirk).subscribe(\n      files => {this.files=files;\n      this.folders = this.files.filter(f=> f.filename === \"trash.trash\").map(f=>f.script)\n      this.files = this.files.filter(f => f.filename !== \"trash.trash\");\n      if(newFolder) {\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.insertStructure(this.list, dirs,this.dirk);\n      }\n      else if(deleteFolder) {\n        if(this.dirk == '.')\n          return;\n        var dirs: string[] = this.dirk.split('/')\n        dirs = dirs.splice(1);\n        this.list = this.deleteStructure(this.list, dirs);\n        var loc = this.dirk.lastIndexOf(\"/\");\n        if(loc !== -1) {\n          this.dirk = this.dirk.substring(0,loc);\n        }\n        console.log(this.dirk);\n      }\n      else{\n        this.list = this.insert(this.dirk);\n      }\n      console.log(this.list);\n    },err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    }\n    );\n}\n\n  // ------------------------- LOAD FILE/FOLDER INFORMATION --------------------\n\n\n  setFile(file: NavigationModel){\n    this.currentfile = file;\n    this.dirk = file.url;\n    this.aceEditor.session.setValue(file.file.script);\n  }\n\n  setFolder(folder: NavigationModel){\n    this.dirk = folder.url + \"/\" + folder.title;\n    console.log(this.dirk);\n    this.getFiles(true,false);\n  }\n\n  deleteFile(file: NavigationModel): void {\n    this.dirk = file.url;\n    var dirs: string[] = this.dirk.split('/')\n    dirs = dirs.splice(1);\n    this.list = this.deleteFileStruc(this.list,dirs,file.file);\n    this.fileService.deleteFile(file.title,this.uservice.getUser(), this.dirk).subscribe(err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    });\n  }\n\n  deleteFolder(folder: NavigationModel): void {\n    this.dirk = folder.url;\n    var drk: string = this.dirk + \"/\" + folder.title\n    var dirs: string[] = this.dirk.split('/')\n    dirs = dirs.splice(1);\n    this.list = this.deleteFolderStruc(this.list,dirs, folder.title);\n    this.fileService.deleteFolder(this.uservice.getUser(), drk).subscribe(err=>{\n      alert(\"An error occurred\");\n      console.log(err);\n    });\n  }\n\n  renameFile(file: NavigationModel): void {\n    this.openDialog(\"File\",\"Rename File\",true,file.title, file.url);\n  }\n\n  renameFolder(folder: NavigationModel): void {\n    this.openDialog(\"Folder\",\"Rename Folder\",true, folder.title, folder.url);\n  }\n\n  goBack(): void {\n    this.getFiles(false,true);\n  }\n\n\n  // ------------------- EXECUTE CODE OPERATIONS -------------------\n\n  /** Description\n     * Here, we use the typescript FileReader to upload files the same way we upload editor code\n     * UPDATE : We would like to render the contents of the file into the editor in the next update\n     */\n  uploadSource(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n\n    let fileReader = new FileReader();\n    fileReader.onloadend = (e) => {\n      this.fileString = fileReader.result;\n    }\n\n    /// remove comment to UPDATE :\n    /// this.aceEditor.session.setValue(this.fileString); \n\n    fileReader.readAsText(file)\n    \n    this.form.patchValue({\n      script: this.fileString,\n      language: this.LANG,\n      input: this.input\n    });\n    this.form.get('script').updateValueAndValidity();\n    this.form.get('language').updateValueAndValidity();\n    this.form.get('input').updateValueAndValidity();\n  }\n\n  /** Description\n     * Executed when the user presses the Run button, this function sends the editor content to the server\n     * Along with the code, the \"input\" contents are also sent to the server\n     * The server responds with the output which is rendered in the output textarea\n     */\n  public runCode() {\n    this.code = this.aceEditor.session.getValue();\n    const send : RunInput = {\n      username : this.uservice.getUser(),\n      script : this.code,\n      language : this.LANG,\n      input : this.input\n    };\n    console.log(send);\n    this.runscript.runScript(send,this.uservice.getUser(),this.currentfile.url).subscribe(receivied =>\n      {\n        if(receivied.success==true) {\n          this.output = receivied.output;\n        }   \n        else {\n          this.output = \"Error: \" + receivied.output;\n        }\n      },err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      });\n}\n\n  /** Description\n     * Executed when the user presses the Run File button, this function sends the file content to the server\n     * Along with the code, the \"input\" contents are also sent to the server\n     * The server responds with the output which is rendered in the output textarea\n     */\n  runFile() {\n    const send : RunInput = {\n      username : this.uservice.getUser(),\n      script : this.fileString,\n      language : this.LANG,\n      input : this.input\n    };\n    console.log(send);\n    this.runscript.runScript(send,this.uservice.getUser(), \"\").subscribe(receivied =>\n      {\n        if(receivied.success==true) {\n          this.output = receivied.output;\n        }   \n        else {\n          this.output = \"Error: \" + receivied.output;\n        }\n      },err=>{\n        alert(\"An error occurred\");\n        console.log(err);\n      }); \n  } \n} \n\nclass NavigationModel {\n  public title: string;\n  public url?: string;\n  public isFile: boolean;\n  public file?: File;\n  public children: NavigationModel[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewUser.html":{"url":"classes/NewUser.html","title":"class - NewUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/register/newuser.ts\n        \n\n            \n                Description\n            \n            \n                Description\nCreates a NewUser class that basically stores all the user credentials, and is used to send an API request to get the user registered.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                image\n                            \n                            \n                                last_name\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, password: string, image: string, first_name: string, last_name: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/newuser.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        image\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        first_name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        last_name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/newuser.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NewUser{\n\tusername='';\n\temail='';\n\tpassword='';\n\timage = '';\n\tfirst_name = '';\n\tlast_name = '';\n\n\tconstructor(\n\t\tusername:string,\n\t\temail:string,\n\t\tpassword:string,\n\t\timage:string,\n\t\tfirst_name:string,\n\t\tlast_name:string\n\t)\n\t{\t\n\t\tthis.image=image;\n\t\tthis.username=username;\n\t\tthis.email=email;\n\t\tthis.password=password;\n\t\tthis.first_name=first_name;\n\t\tthis.last_name=last_name;\n\t}\n\t\t\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PastcontestComponent.html":{"url":"components/PastcontestComponent.html","title":"component - PastcontestComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PastcontestComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pastcontest/pastcontest.component.ts\n\n\n    \n        Description\n    \n    \n        Description\nThis component lets a user view the contests that are over\nIt displays the problem statement along with their status\n(solved/unsolved) and points obtained \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pastcontest\n            \n\n            \n                styleUrls\n                ./pastcontest.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pastcontest.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                gotContest\n                            \n                            \n                                gotPoints\n                            \n                            \n                                id\n                            \n                            \n                                passed\n                            \n                            \n                                points\n                            \n                            \n                                startexecution\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cpservice: CompetitionService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/pastcontest/pastcontest.component.ts:29\n                            \n                        \n\n                \n                    \n                            Rendering is done via Angular's parametrized routes\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loaded\n                        \n                        \n                    \n                \n            \n            \n                \nloaded()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pastcontest/pastcontest.component.ts:74\n                \n            \n\n\n            \n                \n                    A simple boolean function to know the status of requests\nUsed for loading screen rendering\n\n\n                    \n                        Returns :         Boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pastcontest/pastcontest.component.ts:50\n                \n            \n\n\n            \n                \n                    The loop prevents execution till the id is obtained\nThis id is needed in backend requests\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gotContest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gotPoints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startexecution\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pastcontest/pastcontest.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CompetitionService } from '../competition.service';\n\n/**Description\n * This component lets a user view the contests that are over\n * It displays the problem statement along with their status\n * (solved/unsolved) and points obtained \n */\n\n@Component({\n  selector: 'app-pastcontest',\n  templateUrl: './pastcontest.component.html',\n  styleUrls: ['./pastcontest.component.scss']\n})\n\nexport class PastcontestComponent implements OnInit {\n\n  id: number;\n  startexecution: Boolean = false;\n\n  passed: Boolean = false;\n  points: number;\n\n  title: String;\n  body: String;\n\n  gotContest: Boolean = false;\n  gotPoints: Boolean = false;\n\n  /**\n  * Rendering is done via Angular's parametrized routes\n  */\n  constructor(\n    private cpservice: CompetitionService,\n    private route: ActivatedRoute\n  ) {\n    this.route.params.subscribe(\n      (params) => {\n        this.id = params.id;\n        this.startexecution = true;\n      }\n    )\n  }\n\n  /**\n   * The loop prevents execution till the id is obtained\n   * This id is needed in backend requests\n   */\n  ngOnInit(): void {\n\n    while (!this.startexecution) { ; }\n\n    this.cpservice.fetchCompetitionbyId(this.id).subscribe(\n      (comp) => {\n        this.title = comp.title;\n        this.body = comp.problem;\n        this.gotContest = true;\n      }\n    );\n    this.cpservice.contestPassed(this.id).subscribe(\n      (res) => {\n        this.passed = res.passed;\n        this.points = res.points;\n        this.gotPoints = true;\n      }\n    );\n  }\n\n  /**\n   * A simple boolean function to know the status of requests\n   * Used for loading screen rendering\n   */\n  loaded(): Boolean {\n    return this.gotContest && this.gotPoints;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n        \n            {{title}}\n            \n            Title description, April 7, 2014 -->\n        \n\n        \n            {{body}}\n            \n                \n                    You passed with {{points}} points!\n                \n                \n                    You could not solve this problem!\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./pastcontest.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{title}}                        Title description, April 7, 2014 -->                            {{body}}                                                You passed with {{points}} points!                                                    You could not solve this problem!                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PastcontestComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profile.html":{"url":"interfaces/Profile.html","title":"interface - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Profile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile/profile.ts\n        \n\n            \n                Description\n            \n            \n                Description\nA profile interface to store the details of the user which will be used to send the API request.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        image\n                                \n                                \n                                        password\n                                \n                                \n                                        user_fk\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_fk\n                                    \n                                \n                                \n                                    \n                                        user_fk:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Profile{\n    user_fk: any;\n    username:string;\n    password:string;\n    email: string;\n    image:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n    \n        Description\n    \n    \n        Description\nCreated the profile component, to display the profile page of the website.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date_joined\n                            \n                            \n                                email\n                            \n                            \n                                first_name\n                            \n                            \n                                image\n                            \n                            \n                                is_staff\n                            \n                            \n                                last_name\n                            \n                            \n                                points\n                            \n                            \n                                user\n                            \n                            \n                                userDet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(uservice: LoginService, cpservice: CompetitionService, profileservice: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:26\n                            \n                        \n\n                \n                    \n                            Description\nConstructor to create the instances of the services required.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        uservice\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to fetch user details is of Loginservice instance.\n\n                                                        \n                                                \n                                                \n                                                        cpservice\n                                                  \n                                                        \n                                                                        CompetitionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to fetch the points is of Competition service instance.\n\n                                                        \n                                                \n                                                \n                                                        profileservice\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to fetch all the profile details of the logged in user.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:42\n                \n            \n\n\n            \n                \n                    Description\nQuite self-explanatory. Three GET requests to corresponding APIs to get the details of the users and the required display properties.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_joined\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            is_staff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            points\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userDet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CompetitionService } from '../competition.service';\nimport { LoginService } from \"../login.service\";\nimport { ProfileService } from '../profile.service'\n\n/**Description\n * Created the profile component, to display the profile page of the website.\n */\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\n\nexport class ProfileComponent implements OnInit {\n\n  user: String;\n  userDet: any;\n  image: String;\n  points: number = 0;\n  email: String;\n  date_joined: String;\n  is_staff: Boolean;\n  first_name: String;\n  last_name: String;\n  /**Description\n   * Constructor to create the instances of the services required.\n   * @param uservice Used to fetch user details is of Loginservice instance.\n   * @param cpservice Used to fetch the points is of Competition service instance.\n   * @param profileservice Used to fetch all the profile details of the logged in user.\n   */\n  constructor(\n    private uservice: LoginService,\n    private cpservice: CompetitionService,\n    private profileservice: ProfileService\n  ) { }\n  \n  /**Description\n   * Quite self-explanatory. Three GET requests to corresponding APIs to get the details of the users and the required display properties.\n   */\n  ngOnInit(): void {\n    this.user = this.uservice.getUser();\n    this.profileservice.getUserDetail(this.user)\n      .subscribe(data => {\n        this.image = data.image;\n        this.userDet = data.user_fk;\n        this.email = this.userDet.email;\n        this.date_joined = this.userDet.date_joined;\n        this.is_staff = this.userDet.is_staff;\n        this.first_name = this.userDet.first_name;\n        this.last_name = this.userDet.last_name;\n      });\n      this.cpservice.fetchPoints().subscribe(\n        (pts) => this.points=pts\n      );\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n\n\n\n\n    Welcome {{user}} !\n    Code, compile, create and participate\n\n\n\n    \n        \n            \n                \n                    \n                        \n                            \n                            \n                            {{user}}\n                            WreSSLer\n                             Resources  \n                            \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                                Name\n                            \n                            \n                                {{first_name}} {{last_name}}\n                            \n                        \n                        \n                        \n                            \n                                Email\n                            \n                            \n                                {{email}}\n                            \n                        \n                        \n                        \n                            \n                                Points\n                            \n                            \n                                {{points}}\n                            \n                        \n                        \n                        \n                        \n                            \n                                Code Editor\n\n                            \n                            \n                                Create a Contest\n\n                            \n                            \n                                Contest Dashboard\n\n                            \n                         \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                body {\n    margin-top: 20px;\n    color: #1a202c;\n    text-align: left;\n    background-color: #e2e8f0;\n}\n\n.main-body {\n    padding: 15px;\n}\n\n.card {\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .1), 0 1px 2px 0 rgba(0, 0, 0, .06);\n}\n\n* .button {\n    color: #e15241;\n}\n\n.card {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    min-width: 0;\n    word-wrap: break-word;\n    background-color: #fff;\n    background-clip: border-box;\n    border: 0 solid rgba(0, 0, 0, .125);\n    border-radius: .25rem;\n}\n\n.card-body {\n    flex: 1 1 auto;\n    min-height: 1px;\n    padding: 1rem;\n}\n\n.gutters-sm {\n    margin-right: -8px;\n    margin-left: -8px;\n}\n\n.gutters-sm>.col,\n.gutters-sm>[class*=col-] {\n    padding-right: 8px;\n    padding-left: 8px;\n}\n\n.mb-3,\n.my-3 {\n    margin-bottom: 1rem!important;\n}\n\n.bg-gray-300 {\n    background-color: #e2e8f0;\n}\n\n.h-100 {\n    height: 100%!important;\n}\n\n.shadow-none {\n    box-shadow: none!important;\n}\n\na.button3 {\n    display: inline-block;\n    padding: 0.3em 1.2em;\n    height: 1cm;\n    margin: 0 0.3em 0.3em 0;\n    border-radius: 0.5em;\n    box-sizing: border-box;\n    text-decoration: none;\n    font-family: 'Roboto', sans-serif;\n    font-weight: 300;\n    color: #FFFFFF;\n    background-color: #1c9ee9;\n    text-align: center;\n    transition: all 0.2s;\n}\n\na.button3:hover {\n    background-color: #3bb7ff;\n}\n\n@media all and (max-width:30em) {\n    a.button3 {\n        display: block;\n        margin: 0.2em auto;\n    }\n}\nbody,h1,h2,h3,h4,h5,h6 {font-family: \"Raleway\", sans-serif}\n\nbody, html {\n  height: 100%;\n  line-height: 1.8;\n}\n//some parts of the styling of lot of components has been taken from w3-schools templates\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Welcome {{user}} !    Code, compile, create and participate                                                                                                                                                                        {{user}}                            WreSSLer                             Resources                                                                                                                                                                                                                                          Name                                                                                        {{first_name}} {{last_name}}                                                                                                                                                                Email                                                                                        {{email}}                                                                                                                                                                Points                                                                                        {{points}}                                                                                                                                                                                        Code Editor                                                                                        Create a Contest                                                                                        Contest Dashboard                                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getUrl\n                            \n                            \n                                getUserUrl\n                            \n                            \n                                httpOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUser\n                            \n                            \n                                getUserDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile.service.ts:26\n                \n            \n\n\n            \n                \n                    Description\nFunction has been used to make a POST request and return the profile of the user.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserDetail\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserDetail(username: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile.service.ts:33\n                \n            \n\n\n            \n                \n                    Description\nFunction has been used to make a POST request and return the details of the user to display in the profile.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/profile/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/profile/pk'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { stringify } from 'querystring';\nimport { Profile } from './profile/profile'\n\n@Injectable({\n  providedIn: 'root'\n})\n/**Description\n * A class that has been used to make two service requests- The service to get the user and the service to get the details\n */\nexport class ProfileService {\n  getUrl = 'http://127.0.0.1:8000/api/profile/'\n  getUserUrl = 'http://127.0.0.1:8000/api/profile/pk'\n\n  constructor(private http:HttpClient,private _router:Router) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  };\n\n  /**Description\n   * Function has been used to make a POST request and return the profile of the user.\n   */\n  getUser(){\n    return this.http.post(this.getUrl, this.httpOptions)\n  }\n\n  /**Description\n   * Function has been used to make a POST request and return the details of the user to display in the profile.\n   */\n  getUserDetail(username : String){\n    console.log({'username':username})\n    return this.http.post(this.getUserUrl, {'username': username}, this.httpOptions)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegService.html":{"url":"injectables/RegService.html","title":"injectable - RegService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/reg.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tryreg\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/reg.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            tryreg\n                        \n                        \n                    \n                \n            \n            \n                \ntryreg(user: NewUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reg.service.ts:22\n                \n            \n\n\n            \n                \n                    Description\nfunction which places the POST request and returns and Observable of New user type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                NewUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reg.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/profile/add'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reg.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse , HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { NewUser } from './register/newuser';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**Description\n *A service used to register the user. Recive the details from the register component and make the API call.\n */\nexport class RegService {\n  postUrl = 'http://127.0.0.1:8000/api/profile/add'\n  constructor(private http:HttpClient) { }\n  \n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type':'application/json'})\n  };\n  /**Description\n   * function which places the POST request and returns and Observable of New user type.\n   */\n  tryreg(user:NewUser):Observable{\n    return this.http.post(this.postUrl, user, this.httpOptions)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/register/register.component.ts\n\n\n    \n        Description\n    \n    \n        This is our Register Component and this will serve as the registration forum for our project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errormessage\n                            \n                            \n                                httpOptions\n                            \n                            \n                                    Public\n                                imagePath\n                            \n                            \n                                imgerr\n                            \n                            \n                                imgURL\n                            \n                            \n                                link\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                myfile\n                            \n                            \n                                mynewuser\n                            \n                            \n                                regForm\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFileListener\n                            \n                            \n                                onSubmit\n                            \n                            \n                                onUpload\n                            \n                            \n                                preview\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(regserv: RegService, _router: Router, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/register/register.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regserv\n                                                  \n                                                        \n                                                                        RegService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFileListener\n                        \n                        \n                    \n                \n            \n            \n                \nonFileListener(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:60\n                \n            \n\n\n            \n                \n                    Description\nThis is function that listns to the click on choose file and sends an event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:127\n                \n            \n\n\n            \n                \n                    Description\nFunction is used to submit the form credentials to the api to get the user registered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onUpload\n                        \n                        \n                    \n                \n            \n            \n                \nonUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:105\n                \n            \n\n\n            \n                \n                    Description\nFunction is used to upload an image to the backend and recieve an url for the image.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            preview\n                        \n                        \n                    \n                \n            \n            \n                \npreview(files)\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:68\n                \n            \n\n\n            \n                \n                    Description\nThis function is used to pick an image to the file reader and then upload the image\nand collect the url from the api to make further requests for the image when required.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        To store the file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/register/register.component.ts:92\n                \n            \n\n\n            \n                \n                    Description\nValidates all the fields in the input form and returns a boolean to activate/deactivate the register button\n\n\n                    \n                        Returns :         Boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errormessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers: new HttpHeaders ({ 'Content-Type': 'application/json' })\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:44\n                            \n                        \n\n                \n                    \n                        Constructs a Http Header object with the params of content type\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imagePath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgerr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myfile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         File\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mynewuser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            regForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormGroup({\n    first_name: new FormControl('',Validators.required),\n    last_name: new FormControl('',Validators.required),\n    username:new FormControl('', Validators.required),\n    email: new FormControl('',Validators.required),\n    password:new FormControl('',Validators.required),\n    image:new FormControl('')\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:32\n                            \n                        \n\n                \n                    \n                        \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/register/register.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NewUser } from './newuser'\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Observable } from 'rxjs';\nimport { HttpResponse, HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router'\n\nimport { RegService } from '../reg.service'; \n\n  /**\n   * This is our Register Component and this will serve as the registration forum for our project.\n   */\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n\nexport class RegisterComponent implements OnInit {\n\n  mynewuser: NewUser; /** { \n      this.imgURL = reader.result; \n      this.onUpload();\n\n    }\n  };\n\n  /**Description\n   * Validates all the fields in the input form and returns a boolean to activate/deactivate the register button\n   */\n  validate(): Boolean {\n    if(this.regForm.get('first_name').value=='') return false;\n    if(this.regForm.get('last_name').value=='') return false;\n    if(this.regForm.get('username').value=='') return false;\n    if(this.regForm.get('email').value=='') return false;\n    if(this.regForm.get('password').value=='') return false;\n    if(this.link=='') return false;\n    return true;\n  }\n\n  /**Description\n   * Function is used to upload an image to the backend and recieve an url for the image.\n   */\n  onUpload(){\n    this.visible=false;\n    const fd = new FormData();\n    fd.append('image',this.myfile,this.myfile.name);\n\n    this.http.post('http://127.0.0.1:8000/api/image',fd)\n      .subscribe(\n        (res:any) => {\n        // console.log(res);\n        this.imgerr=\"\";\n        this.link = res.url;\n\n      },\n      err => {\n        console.log(err);\n        this.imgerr=\"Invalid upload! Please upload again.\";\n      });\n  };\n\n  /**Description\n   * Function is used to submit the form credentials to the api to get the user registered.\n   */\n  onSubmit(){\n    this.mynewuser={\n      image: this.link,\n      username: this.regForm.get('username').value,\n      email: this.regForm.get('email').value,\n      password: this.regForm.get('password').value,\n      first_name: this.regForm.get('first_name').value,\n      last_name: this.regForm.get('last_name').value,\n    }\n\n    this.regserv.tryreg(this.mynewuser)\n      .subscribe(\n        res => {\n          this.errormessage=\"\";\n          this._router.navigate(['/login'])\n        },\n        err => {\n          console.log(err);\n          this.errormessage = err;\n        }\n      )\n  }\n\n}\n\n    \n\n    \n         Register Yourself \n\n    Name: \n    Email Id: \n    Password: \n    Image: \n  \nSubmit -->\n\n      -->\n\n    Upload -->\n\n\n    \n        \n            \n\n                \n                    Hello\n                    \n                        Register yourself here.\n                    \n                \n\n                \n                    \n                        \n                            Upload Avatar\n                            \n                            \n                            &times;\n                                Avatar Uploaded successfully!\n                            \n                            \n                                &times;\n                                {{ imgerr }}\n                            \n                            \n                                \n                                    Username\n                                    \n                                \n                                \n                                    First Name\n                                    \n                                \n                                \n                                    Last Name\n                                    \n                                \n                                \n                                    Email\n                                    \n                                \n                                \n                                    Password\n                                    \n                                \n                            \n                            \n                                Register\n                            \n                            \n                            \n                                &times;\n                            Could not register! Try again with non-empty credentials.\n                            \n\n                        \n                    \n                \n\n            \n        \n    \n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                body {\n    margin-top: 20px;\n    background-color: #f2f3f8;\n}\n\n.card {\n    margin-bottom: 1.5rem;\n    box-shadow: 0 1px 15px 1px rgba(52, 40, 104, .08);\n}\n\n.card {\n    position: relative;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-direction: column;\n    flex-direction: column;\n    min-width: 0;\n    word-wrap: break-word;\n    background-color: #fff;\n    background-clip: border-box;\n    border: 1px solid #e5e9f2;\n    border-radius: .2rem;\n}\n\n.avatar {\n    vertical-align: middle;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Register Yourself     Name:     Email Id:     Password:     Image:   Submit -->      -->    Upload -->                                                            Hello                                            Register yourself here.                                                                                                                            Upload Avatar                                                                                    ×                                Avatar Uploaded successfully!                                                                                        ×                                {{ imgerr }}                                                                                                                            Username                                                                                                                                        First Name                                                                                                                                        Last Name                                                                                                                                        Email                                                                                                                                        Password                                                                                                                                                            Register                                                                                                                    ×                            Could not register! Try again with non-empty credentials.                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RenameFile.html":{"url":"interfaces/RenameFile.html","title":"interface - RenameFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RenameFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/renameFile.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        file\n                                \n                                \n                                        newName\n                                \n                                \n                                        oldName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                    \n                                \n                                \n                                    \n                                        file:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newName\n                                    \n                                \n                                \n                                    \n                                        newName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldName\n                                    \n                                \n                                \n                                    \n                                        oldName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RenameFile {\n    oldName : string,\n    newName : string,\n    file: boolean\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunFile.html":{"url":"interfaces/RunFile.html","title":"interface - RunFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RunFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run_file.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                                \n                                        language\n                                \n                                \n                                        script\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                    \n                                \n                                \n                                    \n                                        script:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RunFile {\n    username: string,\n    script : any,\n    language : string,\n    input : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunInput.html":{"url":"interfaces/RunInput.html","title":"interface - RunInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RunInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run_input.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        input\n                                \n                                \n                                        language\n                                \n                                \n                                        script\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        input\n                                    \n                                \n                                \n                                    \n                                        input:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        script\n                                    \n                                \n                                \n                                    \n                                        script:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RunInput {\n    username: string,\n    script : string,\n    language : string,\n    input : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RunOutput.html":{"url":"interfaces/RunOutput.html","title":"interface - RunOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RunOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run_output.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        output\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        output\n                                    \n                                \n                                \n                                    \n                                        output:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RunOutput {\n    success : boolean,\n    output : string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RunService.html":{"url":"injectables/RunService.html","title":"injectable - RunService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RunService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/run.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                httpOptions\n                            \n                            \n                                postUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runFile\n                            \n                            \n                                runScript\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/run.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runFile\n                        \n                        \n                    \n                \n            \n            \n                \nrunFile(infile: FormData, username: string, dirk: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/run.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    infile\n                                    \n                                            FormData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runScript\n                        \n                        \n                    \n                \n            \n            \n                \nrunScript(input: RunInput, username: string, dirk: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/run.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RunInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dirk\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/run.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://127.0.0.1:8000/api/compile'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/run.service.ts:17\n                            \n                        \n\n                \n                    \n                        Description\nProvides access to compiling API endpoint for compile and execution of code\nThe service names are quite self explanatory\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { RunInput } from './run_input';\nimport { RunOutput } from './run_output';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RunService {\n\n  /**Description\n   * Provides access to compiling API endpoint for compile and execution of code\n   * The service names are quite self explanatory\n   */\n\n  postUrl = 'http://127.0.0.1:8000/api/compile';\n\n  constructor(private http : HttpClient) { }\n\n  httpOptions = {\n    headers : new HttpHeaders({'Content-Type':'application/json'})\n  };\n\n  runScript(input : RunInput, username:string, dirk: string) : Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    console.log(input);\n    return this.http.post(url,input,this.httpOptions);\n  }\n\n  runFile(infile : FormData, username:string, dirk: string) : Observable {\n    const url = `${this.postUrl}/${username}/${dirk}`;\n    return this.http.post(url,infile,this.httpOptions);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TimerComponent.html":{"url":"components/TimerComponent.html","title":"component - TimerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TimerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/timer/timer.component.ts\n\n\n    \n        Description\n    \n    \n        Description\nThis component displays the time remaining accurate to seconds for an event\nEvent datetime and type (a string specifying \"start\"/\"end\") are passed as @Input parameters\nThe element also refreshes the page when an event expires\nThe code used is essentially a modification of code that can be found at :\nhttps://medium.com/javascript-in-plain-english/implement-a-countdown-timer-with-rxjs-in-angular-3852f21a4ea0\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-timer\n            \n\n            \n                styleUrls\n                ./timer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./timer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                daysToDday\n                            \n                            \n                                    Public\n                                dDate\n                            \n                            \n                                hoursInADay\n                            \n                            \n                                    Public\n                                hoursToDday\n                            \n                            \n                                milliSecondsInASecond\n                            \n                            \n                                minutesInAnHour\n                            \n                            \n                                    Public\n                                minutesToDday\n                            \n                            \n                                SecondsInAMinute\n                            \n                            \n                                    Public\n                                secondsToDday\n                            \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                    Public\n                                timeDifference\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allocateTimeUnits\n                            \n                            \n                                    Private\n                                getTimeDifference\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                endsAt\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/timer/timer.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        endsAt\n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            allocateTimeUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    allocateTimeUnits(timeDifference)\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timeDifference\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTimeDifference\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimeDifference()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/timer/timer.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            daysToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dDate\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoursInADay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 24\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hoursToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            milliSecondsInASecond\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minutesInAnHour\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            minutesToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SecondsInAMinute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            secondsToDday\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            timeDifference\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/timer/timer.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Subscription, interval } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\n  /** Description\n   * This component displays the time remaining accurate to seconds for an event\n   * Event datetime and type (a string specifying \"start\"/\"end\") are passed as @Input parameters\n   * The element also refreshes the page when an event expires\n   * The code used is essentially a modification of code that can be found at :\n   * https://medium.com/javascript-in-plain-english/implement-a-countdown-timer-with-rxjs-in-angular-3852f21a4ea0\n   */\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.scss']\n})\n\nexport class TimerComponent implements OnInit {\n\n  @Input() endsAt;\n  @Input() type;\n\n  public dDate;\n  private subscription: Subscription;\n\n\n  constructor(\n    /**\n     * This is needed for the refresh capability\n     */\n    private _router: Router\n  ) {}\n\n  milliSecondsInASecond = 1000;\n  hoursInADay = 24;\n  minutesInAnHour = 60;\n  SecondsInAMinute = 60;\n\n  public timeDifference;\n  public secondsToDday;\n  public minutesToDday;\n  public hoursToDday;\n  public daysToDday;\n\n\n  private getTimeDifference() {\n    this.timeDifference = this.dDate.getTime() - new Date().getTime();\n    \n    /**\n     * The logic for refresh on event expiration\n     */\n    if(this.timeDifference false;\n      this._router.onSameUrlNavigation = 'reload';\n      this._router.navigate(['/dashboard']);\n    }\n    \n    this.allocateTimeUnits(this.timeDifference);\n  }\n\n  private allocateTimeUnits(timeDifference) {\n    this.secondsToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond) % this.SecondsInAMinute);\n    this.minutesToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour) % this.SecondsInAMinute);\n    this.hoursToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour * this.SecondsInAMinute) % this.hoursInADay);\n    this.daysToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour * this.SecondsInAMinute * this.hoursInADay));\n  }\n\n  ngOnInit() {\n    /**\n     * Subscription is used to refresh the timer every second\n     */\n    this.subscription = interval(1000)\n      .subscribe(x => { this.getTimeDifference(); });\n    this.dDate = new Date(this.endsAt);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n     To event {{type}}\n         {{daysToDday}} Day(s)\n         {{hoursToDday}} Hrs\n         {{minutesToDday}} Min\n         {{secondsToDday}} S\n    \n\n    \n\n    \n                \n                    ./timer.component.scss\n                \n                .timer {\n    font-family: Arial, sans-serif;\n    font-size: 0.8em;\n    letter-spacing: -1px;\n  }\n  .timer span {\n    font-size: 1em;;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     To event {{type}}         {{daysToDday}} Day(s)         {{hoursToDday}} Hrs         {{minutesToDday}} Min         {{secondsToDday}} S    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CompCreateComponent', 'selector': 'app-comp-create'},{'name': 'CompDashboardComponent', 'selector': 'app-comp-dashboard'},{'name': 'CompetitionComponent', 'selector': 'app-competition'},{'name': 'EditorComponent', 'selector': 'app-editor'},{'name': 'EditorDialogComponent', 'selector': 'app-editor-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingComponent', 'selector': 'app-loading'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PastcontestComponent', 'selector': 'app-pastcontest'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'TimerComponent', 'selector': 'app-timer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TimerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptorService.html":{"url":"interceptors/TokenInterceptorService.html","title":"interceptor - TokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/token-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/token-interceptor.service.ts:16\n                            \n                        \n\n                \n                    \n                            Description\nConstructor to create an injector\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To prevent a cyclic dependancy we use this injector\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req, next)\n                \n            \n\n\n            \n                \n                    Defined in src/app/token-interceptor.service.ts:28\n                \n            \n\n\n            \n                \n                    This fucntion intercepts all the http calls that the frontend makes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Takes the incoming request\n\n                                    \n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Used to pass on to the next interceptor if present, in our case none.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable,Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { LoginService } from './login.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**Description\n * An important class for the frontend part of the authentication of the website.\n * The injectable class Tokeninterceptor implements HttpInterceptor class.\n */\n\nexport class TokenInterceptorService implements HttpInterceptor{\n  /**Description\n   * Constructor to create an injector\n   * @param injector To prevent a cyclic dependancy we use this injector\n   */\n\n  constructor(private injector: Injector) { }\n  /**\n   * This fucntion intercepts all the http calls that the frontend makes\n   * @param req Takes the incoming request\n   * @param next Used to pass on to the next interceptor if present, in our case none.\n   */\n  intercept(req,next){\n    let logser = this.injector.get(LoginService);\n    /**Description\n     * If the token is set then, that means the token has been obtained after login, we will try to clone the request to not tamper with the original request.\n     * To the cloned request we add a authization header with the appended unique token of the user, which makes our requests authorized.\n     */\n    if(localStorage.getItem('token')){\n        req   = req.clone({\n        setHeaders: {\n          Authorization: `token ${logser.getToken()}`\n        }\n      })\n    }\n    return next.handle(req);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/user.ts\n        \n\n            \n                Description\n            \n            \n                Description\nThis is an interface that has two variables, username and password.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User{\n    username:string;\n    password:string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/comp-create/comp-create.component.ts\n            \n            component\n            CompCreateComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/comp-dashboard/comp-dashboard.component.ts\n            \n            component\n            CompDashboardComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/comp.ts\n            \n            interface\n            Comp\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/competition.service.ts\n            \n            injectable\n            CompetitionService\n            \n                4 %\n                (1/22)\n            \n        \n        \n            \n                \n                src/app/competition/competition.component.ts\n            \n            component\n            CompetitionComponent\n            \n                3 %\n                (1/31)\n            \n        \n        \n            \n                \n                src/app/contest.ts\n            \n            interface\n            Contest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/editor-dialog/editor-dialog.component.ts\n            \n            component\n            EditorDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/editor/editor.component.ts\n            \n            component\n            EditorComponent\n            \n                40 %\n                (20/50)\n            \n        \n        \n            \n                \n                src/app/editor/editor.component.ts\n            \n            class\n            NavigationModel\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/file.service.ts\n            \n            injectable\n            FileService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/file.ts\n            \n            interface\n            File\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/loading/loading.component.ts\n            \n            component\n            LoadingComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/login.service.ts\n            \n            injectable\n            LoginService\n            \n                69 %\n                (9/13)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/login/user.ts\n            \n            interface\n            User\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/pastcontest/pastcontest.component.ts\n            \n            component\n            PastcontestComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/profile/profile.ts\n            \n            interface\n            Profile\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/reg.service.ts\n            \n            injectable\n            RegService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/register/newuser.ts\n            \n            class\n            NewUser\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                42 %\n                (8/19)\n            \n        \n        \n            \n                \n                src/app/renameFile.ts\n            \n            interface\n            RenameFile\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/run.service.ts\n            \n            injectable\n            RunService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/run_file.ts\n            \n            interface\n            RunFile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/run_input.ts\n            \n            interface\n            RunInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/run_output.ts\n            \n            interface\n            RunOutput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/timer/timer.component.ts\n            \n            component\n            TimerComponent\n            \n                5 %\n                (1/19)\n            \n        \n        \n            \n                \n                src/app/token-interceptor.service.ts\n            \n            interceptor\n            TokenInterceptorService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-material-components/datetime-picker : ^4.0.6\n        \n            @angular-material-components/moment-adapter : ^5.0.0\n        \n            @angular/animations : ~10.1.4\n        \n            @angular/cdk : ^10.2.6\n        \n            @angular/common : ~10.1.4\n        \n            @angular/compiler : ~10.1.4\n        \n            @angular/core : ~10.1.4\n        \n            @angular/forms : ~10.1.4\n        \n            @angular/material : ^10.2.6\n        \n            @angular/platform-browser : ~10.1.4\n        \n            @angular/platform-browser-dynamic : ~10.1.4\n        \n            @angular/router : ~10.1.4\n        \n            @types/jwt-decode : ^3.1.0\n        \n            ace-builds : ^1.4.12\n        \n            angular-moment : ^1.3.0\n        \n            bootstrap : ^4.5.3\n        \n            jwt-decode : ^3.1.2\n        \n            moment : ^2.29.1\n        \n            rxjs : ~6.6.0\n        \n            save : ^2.4.0\n        \n            tsd : ^0.14.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOcde\nThis project was generated with Angular CLI version 10.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCompCreateComponent\n\nCompCreateComponent\n\nAppModule -->\n\nCompCreateComponent->AppModule\n\n\n\n\n\nCompDashboardComponent\n\nCompDashboardComponent\n\nAppModule -->\n\nCompDashboardComponent->AppModule\n\n\n\n\n\nCompetitionComponent\n\nCompetitionComponent\n\nAppModule -->\n\nCompetitionComponent->AppModule\n\n\n\n\n\nEditorComponent\n\nEditorComponent\n\nAppModule -->\n\nEditorComponent->AppModule\n\n\n\n\n\nEditorDialogComponent\n\nEditorDialogComponent\n\nAppModule -->\n\nEditorDialogComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingComponent\n\nLoadingComponent\n\nAppModule -->\n\nLoadingComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nPastcontestComponent\n\nPastcontestComponent\n\nAppModule -->\n\nPastcontestComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nTimerComponent\n\nTimerComponent\n\nAppModule -->\n\nTimerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nAppModule -->\n\nLoginService->AppModule\n\n\n\n\n\nRegService\n\nRegService\n\nAppModule -->\n\nRegService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
